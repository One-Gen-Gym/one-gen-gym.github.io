{"mappings":"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","sources":["<anon>","src/index.js","node_modules/uikit/dist/js/uikit.js","node_modules/uikit/dist/js/uikit-icons.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $0efce4e7257869d3$exports = {};\n/*! UIkit 3.17.11 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */ (function(global, factory) {\n    $0efce4e7257869d3$exports = factory();\n})($0efce4e7257869d3$exports, function() {\n    \"use strict\";\n    const { hasOwnProperty: hasOwnProperty, toString: toString } = Object.prototype;\n    function hasOwn(obj, key) {\n        return hasOwnProperty.call(obj, key);\n    }\n    const hyphenateRe = /\\B([A-Z])/g;\n    const hyphenate = memoize((str)=>str.replace(hyphenateRe, \"-$1\").toLowerCase());\n    const camelizeRe = /-(\\w)/g;\n    const camelize = memoize((str)=>(str.charAt(0).toLowerCase() + str.slice(1)).replace(camelizeRe, (_, c)=>c.toUpperCase()));\n    const ucfirst = memoize((str)=>str.charAt(0).toUpperCase() + str.slice(1));\n    function startsWith(str, search) {\n        var _a;\n        return (_a = str == null ? void 0 : str.startsWith) == null ? void 0 : _a.call(str, search);\n    }\n    function endsWith(str, search) {\n        var _a;\n        return (_a = str == null ? void 0 : str.endsWith) == null ? void 0 : _a.call(str, search);\n    }\n    function includes(obj, search) {\n        var _a;\n        return (_a = obj == null ? void 0 : obj.includes) == null ? void 0 : _a.call(obj, search);\n    }\n    function findIndex(array, predicate) {\n        var _a;\n        return (_a = array == null ? void 0 : array.findIndex) == null ? void 0 : _a.call(array, predicate);\n    }\n    const { isArray: isArray, from: toArray } = Array;\n    const { assign: assign } = Object;\n    function isFunction(obj) {\n        return typeof obj === \"function\";\n    }\n    function isObject(obj) {\n        return obj !== null && typeof obj === \"object\";\n    }\n    function isPlainObject(obj) {\n        return toString.call(obj) === \"[object Object]\";\n    }\n    function isWindow(obj) {\n        return isObject(obj) && obj === obj.window;\n    }\n    function isDocument(obj) {\n        return nodeType(obj) === 9;\n    }\n    function isNode(obj) {\n        return nodeType(obj) >= 1;\n    }\n    function isElement(obj) {\n        return nodeType(obj) === 1;\n    }\n    function nodeType(obj) {\n        return !isWindow(obj) && isObject(obj) && obj.nodeType;\n    }\n    function isBoolean(value) {\n        return typeof value === \"boolean\";\n    }\n    function isString(value) {\n        return typeof value === \"string\";\n    }\n    function isNumber(value) {\n        return typeof value === \"number\";\n    }\n    function isNumeric(value) {\n        return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n    }\n    function isEmpty(obj) {\n        return !(isArray(obj) ? obj.length : isObject(obj) ? Object.keys(obj).length : false);\n    }\n    function isUndefined(value) {\n        return value === void 0;\n    }\n    function toBoolean(value) {\n        return isBoolean(value) ? value : value === \"true\" || value === \"1\" || value === \"\" ? true : value === \"false\" || value === \"0\" ? false : value;\n    }\n    function toNumber(value) {\n        const number = Number(value);\n        return isNaN(number) ? false : number;\n    }\n    function toFloat(value) {\n        return parseFloat(value) || 0;\n    }\n    function toNode(element) {\n        return toNodes(element)[0];\n    }\n    function toNodes(element) {\n        return isNode(element) ? [\n            element\n        ] : Array.from(element || []).filter(isNode);\n    }\n    function toWindow(element) {\n        if (isWindow(element)) return element;\n        element = toNode(element);\n        const document1 = isDocument(element) ? element : element == null ? void 0 : element.ownerDocument;\n        return (document1 == null ? void 0 : document1.defaultView) || window;\n    }\n    function isEqual(value, other) {\n        return value === other || isObject(value) && isObject(other) && Object.keys(value).length === Object.keys(other).length && each(value, (val, key)=>val === other[key]);\n    }\n    function swap(value, a, b) {\n        return value.replace(new RegExp(`${a}|${b}`, \"g\"), (match)=>match === a ? b : a);\n    }\n    function last(array) {\n        return array[array.length - 1];\n    }\n    function each(obj, cb) {\n        for(const key in obj){\n            if (false === cb(obj[key], key)) return false;\n        }\n        return true;\n    }\n    function sortBy(array, prop) {\n        return array.slice().sort(({ [prop]: propA = 0 }, { [prop]: propB = 0 })=>propA > propB ? 1 : propB > propA ? -1 : 0);\n    }\n    function sumBy(array, iteratee) {\n        return array.reduce((sum, item)=>sum + toFloat(isFunction(iteratee) ? iteratee(item) : item[iteratee]), 0);\n    }\n    function uniqueBy(array, prop) {\n        const seen = /* @__PURE__ */ new Set();\n        return array.filter(({ [prop]: check })=>seen.has(check) ? false : seen.add(check));\n    }\n    function pick(obj, props) {\n        return props.reduce((res, prop)=>({\n                ...res,\n                [prop]: obj[prop]\n            }), {});\n    }\n    function clamp(number, min = 0, max = 1) {\n        return Math.min(Math.max(toNumber(number) || 0, min), max);\n    }\n    function noop() {}\n    function intersectRect(...rects) {\n        return [\n            [\n                \"bottom\",\n                \"top\"\n            ],\n            [\n                \"right\",\n                \"left\"\n            ]\n        ].every(([minProp, maxProp])=>Math.min(...rects.map(({ [minProp]: min })=>min)) - Math.max(...rects.map(({ [maxProp]: max })=>max)) > 0);\n    }\n    function pointInRect(point, rect) {\n        return point.x <= rect.right && point.x >= rect.left && point.y <= rect.bottom && point.y >= rect.top;\n    }\n    function ratio(dimensions, prop, value) {\n        const aProp = prop === \"width\" ? \"height\" : \"width\";\n        return {\n            [aProp]: dimensions[prop] ? Math.round(value * dimensions[aProp] / dimensions[prop]) : dimensions[aProp],\n            [prop]: value\n        };\n    }\n    function contain(dimensions, maxDimensions) {\n        dimensions = {\n            ...dimensions\n        };\n        for(const prop in dimensions)dimensions = dimensions[prop] > maxDimensions[prop] ? ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n        return dimensions;\n    }\n    function cover$1(dimensions, maxDimensions) {\n        dimensions = contain(dimensions, maxDimensions);\n        for(const prop in dimensions)dimensions = dimensions[prop] < maxDimensions[prop] ? ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n        return dimensions;\n    }\n    const Dimensions = {\n        ratio: ratio,\n        contain: contain,\n        cover: cover$1\n    };\n    function getIndex(i, elements, current = 0, finite = false) {\n        elements = toNodes(elements);\n        const { length: length } = elements;\n        if (!length) return -1;\n        i = isNumeric(i) ? toNumber(i) : i === \"next\" ? current + 1 : i === \"previous\" ? current - 1 : i === \"last\" ? length - 1 : elements.indexOf(toNode(i));\n        if (finite) return clamp(i, 0, length - 1);\n        i %= length;\n        return i < 0 ? i + length : i;\n    }\n    function memoize(fn) {\n        const cache = /* @__PURE__ */ Object.create(null);\n        return (key, ...args)=>cache[key] || (cache[key] = fn(key, ...args));\n    }\n    function attr(element, name, value) {\n        var _a;\n        if (isObject(name)) {\n            for(const key in name)attr(element, key, name[key]);\n            return;\n        }\n        if (isUndefined(value)) return (_a = toNode(element)) == null ? void 0 : _a.getAttribute(name);\n        else for (const el of toNodes(element)){\n            if (isFunction(value)) value = value.call(el, attr(el, name));\n            if (value === null) removeAttr(el, name);\n            else el.setAttribute(name, value);\n        }\n    }\n    function hasAttr(element, name) {\n        return toNodes(element).some((element2)=>element2.hasAttribute(name));\n    }\n    function removeAttr(element, name) {\n        toNodes(element).forEach((element2)=>element2.removeAttribute(name));\n    }\n    function data(element, attribute) {\n        for (const name of [\n            attribute,\n            `data-${attribute}`\n        ]){\n            if (hasAttr(element, name)) return attr(element, name);\n        }\n    }\n    function addClass(element, ...classes) {\n        for (const node of toNodes(element)){\n            const add = toClasses(classes).filter((cls)=>!hasClass(node, cls));\n            if (add.length) node.classList.add(...add);\n        }\n    }\n    function removeClass(element, ...classes) {\n        for (const node of toNodes(element)){\n            const remove = toClasses(classes).filter((cls)=>hasClass(node, cls));\n            if (remove.length) node.classList.remove(...remove);\n        }\n    }\n    function removeClasses$1(element, clsRegex) {\n        clsRegex = new RegExp(clsRegex);\n        for (const node of toNodes(element))node.classList.remove(...toArray(node.classList).filter((cls)=>cls.match(clsRegex)));\n    }\n    function replaceClass(element, oldClass, newClass) {\n        newClass = toClasses(newClass);\n        oldClass = toClasses(oldClass).filter((cls)=>!includes(newClass, cls));\n        removeClass(element, oldClass);\n        addClass(element, newClass);\n    }\n    function hasClass(element, cls) {\n        [cls] = toClasses(cls);\n        return toNodes(element).some((node)=>node.classList.contains(cls));\n    }\n    function toggleClass(element, cls, force) {\n        const classes = toClasses(cls);\n        if (!isUndefined(force)) force = !!force;\n        for (const node of toNodes(element))for (const cls2 of classes)node.classList.toggle(cls2, force);\n    }\n    function toClasses(str) {\n        return str ? isArray(str) ? str.map(toClasses).flat() : String(str).split(/[ ,]/).filter(Boolean) : [];\n    }\n    const voidElements = {\n        area: true,\n        base: true,\n        br: true,\n        col: true,\n        embed: true,\n        hr: true,\n        img: true,\n        input: true,\n        keygen: true,\n        link: true,\n        meta: true,\n        param: true,\n        source: true,\n        track: true,\n        wbr: true\n    };\n    function isVoidElement(element) {\n        return toNodes(element).some((element2)=>voidElements[element2.tagName.toLowerCase()]);\n    }\n    function isVisible(element) {\n        return toNodes(element).some((element2)=>element2.offsetWidth || element2.offsetHeight || element2.getClientRects().length);\n    }\n    const selInput = \"input,select,textarea,button\";\n    function isInput(element) {\n        return toNodes(element).some((element2)=>matches(element2, selInput));\n    }\n    const selFocusable = `${selInput},a[href],[tabindex]`;\n    function isFocusable(element) {\n        return matches(element, selFocusable);\n    }\n    function parent(element) {\n        var _a;\n        return (_a = toNode(element)) == null ? void 0 : _a.parentElement;\n    }\n    function filter$1(element, selector) {\n        return toNodes(element).filter((element2)=>matches(element2, selector));\n    }\n    function matches(element, selector) {\n        return toNodes(element).some((element2)=>element2.matches(selector));\n    }\n    function closest(element, selector) {\n        var _a;\n        return (_a = toNode(element)) == null ? void 0 : _a.closest(startsWith(selector, \">\") ? selector.slice(1) : selector);\n    }\n    function within(element, selector) {\n        return isString(selector) ? !!closest(element, selector) : toNode(selector).contains(toNode(element));\n    }\n    function parents(element, selector) {\n        const elements = [];\n        while(element = parent(element))if (!selector || matches(element, selector)) elements.push(element);\n        return elements;\n    }\n    function children(element, selector) {\n        element = toNode(element);\n        const children2 = element ? toArray(element.children) : [];\n        return selector ? filter$1(children2, selector) : children2;\n    }\n    function index(element, ref) {\n        return ref ? toNodes(element).indexOf(toNode(ref)) : children(parent(element)).indexOf(element);\n    }\n    function isSameSiteAnchor(el) {\n        el = toNode(el);\n        return el && [\n            \"origin\",\n            \"pathname\",\n            \"search\"\n        ].every((part)=>el[part] === location[part]);\n    }\n    function getTargetedElement(el) {\n        if (isSameSiteAnchor(el)) {\n            el = toNode(el);\n            const id = decodeURIComponent(el.hash).substring(1);\n            return document.getElementById(id) || document.getElementsByName(id)[0];\n        }\n    }\n    function query(selector, context) {\n        return find(selector, getContext(selector, context));\n    }\n    function queryAll(selector, context) {\n        return findAll(selector, getContext(selector, context));\n    }\n    function find(selector, context) {\n        return toNode(_query(selector, toNode(context), \"querySelector\"));\n    }\n    function findAll(selector, context) {\n        return toNodes(_query(selector, toNode(context), \"querySelectorAll\"));\n    }\n    const contextSelectorRe = /(^|[^\\\\],)\\s*[!>+~-]/;\n    const isContextSelector = memoize((selector)=>selector.match(contextSelectorRe));\n    function getContext(selector, context = document) {\n        return isString(selector) && isContextSelector(selector) || isDocument(context) ? context : context.ownerDocument;\n    }\n    const contextSanitizeRe = /([!>+~-])(?=\\s+[!>+~-]|\\s*$)/g;\n    const sanatize = memoize((selector)=>selector.replace(contextSanitizeRe, \"$1 *\"));\n    function _query(selector, context = document, queryFn) {\n        if (!selector || !isString(selector)) return selector;\n        selector = sanatize(selector);\n        if (isContextSelector(selector)) {\n            const split = splitSelector(selector);\n            selector = \"\";\n            for (let sel of split){\n                let ctx = context;\n                if (sel[0] === \"!\") {\n                    const selectors = sel.substr(1).trim().split(\" \");\n                    ctx = parent(context).closest(selectors[0]);\n                    sel = selectors.slice(1).join(\" \").trim();\n                    if (!sel.length && split.length === 1) return ctx;\n                }\n                if (sel[0] === \"-\") {\n                    const selectors = sel.substr(1).trim().split(\" \");\n                    const prev = (ctx || context).previousElementSibling;\n                    ctx = matches(prev, sel.substr(1)) ? prev : null;\n                    sel = selectors.slice(1).join(\" \");\n                }\n                if (ctx) selector += `${selector ? \",\" : \"\"}${domPath(ctx)} ${sel}`;\n            }\n            context = document;\n        }\n        try {\n            return context[queryFn](selector);\n        } catch (e) {\n            return null;\n        }\n    }\n    const selectorRe = /.*?[^\\\\](?:,|$)/g;\n    const splitSelector = memoize((selector)=>selector.match(selectorRe).map((selector2)=>selector2.replace(/,$/, \"\").trim()));\n    function domPath(element) {\n        const names = [];\n        while(element.parentNode){\n            const id = attr(element, \"id\");\n            if (id) {\n                names.unshift(`#${escape(id)}`);\n                break;\n            } else {\n                let { tagName: tagName } = element;\n                if (tagName !== \"HTML\") tagName += `:nth-child(${index(element) + 1})`;\n                names.unshift(tagName);\n                element = element.parentNode;\n            }\n        }\n        return names.join(\" > \");\n    }\n    function escape(css) {\n        return isString(css) ? CSS.escape(css) : \"\";\n    }\n    function on(...args) {\n        let [targets, types, selector, listener, useCapture = false] = getArgs(args);\n        if (listener.length > 1) listener = detail(listener);\n        if (useCapture == null ? void 0 : useCapture.self) listener = selfFilter(listener);\n        if (selector) listener = delegate(selector, listener);\n        for (const type of types)for (const target of targets)target.addEventListener(type, listener, useCapture);\n        return ()=>off(targets, types, listener, useCapture);\n    }\n    function off(...args) {\n        let [targets, types, , listener, useCapture = false] = getArgs(args);\n        for (const type of types)for (const target of targets)target.removeEventListener(type, listener, useCapture);\n    }\n    function once(...args) {\n        const [element, types, selector, listener, useCapture = false, condition] = getArgs(args);\n        const off2 = on(element, types, selector, (e)=>{\n            const result = !condition || condition(e);\n            if (result) {\n                off2();\n                listener(e, result);\n            }\n        }, useCapture);\n        return off2;\n    }\n    function trigger(targets, event, detail2) {\n        return toEventTargets(targets).every((target)=>target.dispatchEvent(createEvent(event, true, true, detail2)));\n    }\n    function createEvent(e, bubbles = true, cancelable = false, detail2) {\n        if (isString(e)) e = new CustomEvent(e, {\n            bubbles: bubbles,\n            cancelable: cancelable,\n            detail: detail2\n        });\n        return e;\n    }\n    function getArgs(args) {\n        args[0] = toEventTargets(args[0]);\n        if (isString(args[1])) args[1] = args[1].split(\" \");\n        if (isFunction(args[2])) args.splice(2, 0, false);\n        return args;\n    }\n    function delegate(selector, listener) {\n        return (e)=>{\n            const current = selector[0] === \">\" ? findAll(selector, e.currentTarget).reverse().find((element)=>element.contains(e.target)) : e.target.closest(selector);\n            if (current) {\n                e.current = current;\n                listener.call(this, e);\n                delete e.current;\n            }\n        };\n    }\n    function detail(listener) {\n        return (e)=>isArray(e.detail) ? listener(e, ...e.detail) : listener(e);\n    }\n    function selfFilter(listener) {\n        return function(e) {\n            if (e.target === e.currentTarget || e.target === e.current) return listener.call(null, e);\n        };\n    }\n    function isEventTarget(target) {\n        return target && \"addEventListener\" in target;\n    }\n    function toEventTarget(target) {\n        return isEventTarget(target) ? target : toNode(target);\n    }\n    function toEventTargets(target) {\n        return isArray(target) ? target.map(toEventTarget).filter(Boolean) : isString(target) ? findAll(target) : isEventTarget(target) ? [\n            target\n        ] : toNodes(target);\n    }\n    function isTouch(e) {\n        return e.pointerType === \"touch\" || !!e.touches;\n    }\n    function getEventPos(e) {\n        var _a, _b;\n        const { clientX: x, clientY: y } = ((_a = e.touches) == null ? void 0 : _a[0]) || ((_b = e.changedTouches) == null ? void 0 : _b[0]) || e;\n        return {\n            x: x,\n            y: y\n        };\n    }\n    const cssNumber = {\n        \"animation-iteration-count\": true,\n        \"column-count\": true,\n        \"fill-opacity\": true,\n        \"flex-grow\": true,\n        \"flex-shrink\": true,\n        \"font-weight\": true,\n        \"line-height\": true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        \"stroke-dasharray\": true,\n        \"stroke-dashoffset\": true,\n        widows: true,\n        \"z-index\": true,\n        zoom: true\n    };\n    function css(element, property, value, priority) {\n        const elements = toNodes(element);\n        for (const element2 of elements){\n            if (isString(property)) {\n                property = propName(property);\n                if (isUndefined(value)) return getComputedStyle(element2).getPropertyValue(property);\n                else element2.style.setProperty(property, isNumeric(value) && !cssNumber[property] ? `${value}px` : value || isNumber(value) ? value : \"\", priority);\n            } else if (isArray(property)) {\n                const props = {};\n                for (const prop of property)props[prop] = css(element2, prop);\n                return props;\n            } else if (isObject(property)) {\n                priority = value;\n                each(property, (value2, property2)=>css(element2, property2, value2, priority));\n            }\n        }\n        return elements[0];\n    }\n    const propName = memoize((name)=>vendorPropName(name));\n    function vendorPropName(name) {\n        if (startsWith(name, \"--\")) return name;\n        name = hyphenate(name);\n        const { style: style } = document.documentElement;\n        if (name in style) return name;\n        for (const prefix of [\n            \"webkit\",\n            \"moz\"\n        ]){\n            const prefixedName = `-${prefix}-${name}`;\n            if (prefixedName in style) return prefixedName;\n        }\n    }\n    const clsTransition = \"uk-transition\";\n    const clsTransitionEnd = \"transitionend\";\n    const clsTransitionCanceled = \"transitioncanceled\";\n    function transition$1(element, props, duration = 400, timing = \"linear\") {\n        duration = Math.round(duration);\n        return Promise.all(toNodes(element).map((element2)=>new Promise((resolve, reject)=>{\n                for(const name in props){\n                    const value = css(element2, name);\n                    if (value === \"\") css(element2, name, value);\n                }\n                const timer = setTimeout(()=>trigger(element2, clsTransitionEnd), duration);\n                once(element2, [\n                    clsTransitionEnd,\n                    clsTransitionCanceled\n                ], ({ type: type })=>{\n                    clearTimeout(timer);\n                    removeClass(element2, clsTransition);\n                    css(element2, {\n                        transitionProperty: \"\",\n                        transitionDuration: \"\",\n                        transitionTimingFunction: \"\"\n                    });\n                    type === clsTransitionCanceled ? reject() : resolve(element2);\n                }, {\n                    self: true\n                });\n                addClass(element2, clsTransition);\n                css(element2, {\n                    transitionProperty: Object.keys(props).map(propName).join(\",\"),\n                    transitionDuration: `${duration}ms`,\n                    transitionTimingFunction: timing,\n                    ...props\n                });\n            })));\n    }\n    const Transition = {\n        start: transition$1,\n        async stop (element) {\n            trigger(element, clsTransitionEnd);\n            await Promise.resolve();\n        },\n        async cancel (element) {\n            trigger(element, clsTransitionCanceled);\n            await Promise.resolve();\n        },\n        inProgress (element) {\n            return hasClass(element, clsTransition);\n        }\n    };\n    const animationPrefix = \"uk-animation-\";\n    const clsAnimationEnd = \"animationend\";\n    const clsAnimationCanceled = \"animationcanceled\";\n    function animate$2(element, animation, duration = 200, origin, out) {\n        return Promise.all(toNodes(element).map((element2)=>new Promise((resolve, reject)=>{\n                trigger(element2, clsAnimationCanceled);\n                const timer = setTimeout(()=>trigger(element2, clsAnimationEnd), duration);\n                once(element2, [\n                    clsAnimationEnd,\n                    clsAnimationCanceled\n                ], ({ type: type })=>{\n                    clearTimeout(timer);\n                    type === clsAnimationCanceled ? reject() : resolve(element2);\n                    css(element2, \"animationDuration\", \"\");\n                    removeClasses$1(element2, `${animationPrefix}\\\\S*`);\n                }, {\n                    self: true\n                });\n                css(element2, \"animationDuration\", `${duration}ms`);\n                addClass(element2, animation, animationPrefix + (out ? \"leave\" : \"enter\"));\n                if (startsWith(animation, animationPrefix)) {\n                    origin && addClass(element2, `uk-transform-origin-${origin}`);\n                    out && addClass(element2, `${animationPrefix}reverse`);\n                }\n            })));\n    }\n    const inProgressRe = new RegExp(`${animationPrefix}(enter|leave)`);\n    const Animation = {\n        in: animate$2,\n        out (element, animation, duration, origin) {\n            return animate$2(element, animation, duration, origin, true);\n        },\n        inProgress (element) {\n            return inProgressRe.test(attr(element, \"class\"));\n        },\n        cancel (element) {\n            trigger(element, clsAnimationCanceled);\n        }\n    };\n    function ready(fn) {\n        if (document.readyState !== \"loading\") {\n            fn();\n            return;\n        }\n        once(document, \"DOMContentLoaded\", fn);\n    }\n    function isTag(element, ...tagNames) {\n        return tagNames.some((tagName)=>{\n            var _a;\n            return ((_a = element == null ? void 0 : element.tagName) == null ? void 0 : _a.toLowerCase()) === tagName.toLowerCase();\n        });\n    }\n    function empty(element) {\n        element = $(element);\n        element.innerHTML = \"\";\n        return element;\n    }\n    function html(parent2, html2) {\n        return isUndefined(html2) ? $(parent2).innerHTML : append(empty(parent2), html2);\n    }\n    const prepend = applyFn(\"prepend\");\n    const append = applyFn(\"append\");\n    const before = applyFn(\"before\");\n    const after = applyFn(\"after\");\n    function applyFn(fn) {\n        return function(ref, element) {\n            var _a;\n            const nodes = toNodes(isString(element) ? fragment(element) : element);\n            (_a = $(ref)) == null || _a[fn](...nodes);\n            return unwrapSingle(nodes);\n        };\n    }\n    function remove$1(element) {\n        toNodes(element).forEach((element2)=>element2.remove());\n    }\n    function wrapAll(element, structure) {\n        structure = toNode(before(element, structure));\n        while(structure.firstChild)structure = structure.firstChild;\n        append(structure, element);\n        return structure;\n    }\n    function wrapInner(element, structure) {\n        return toNodes(toNodes(element).map((element2)=>element2.hasChildNodes() ? wrapAll(toArray(element2.childNodes), structure) : append(element2, structure)));\n    }\n    function unwrap(element) {\n        toNodes(element).map(parent).filter((value, index, self)=>self.indexOf(value) === index).forEach((parent2)=>parent2.replaceWith(...parent2.childNodes));\n    }\n    const singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n    function fragment(html2) {\n        const matches = singleTagRe.exec(html2);\n        if (matches) return document.createElement(matches[1]);\n        const container = document.createElement(\"template\");\n        container.innerHTML = html2.trim();\n        return unwrapSingle(container.content.childNodes);\n    }\n    function unwrapSingle(nodes) {\n        return nodes.length > 1 ? nodes : nodes[0];\n    }\n    function apply(node, fn) {\n        if (!isElement(node)) return;\n        fn(node);\n        node = node.firstElementChild;\n        while(node){\n            const next = node.nextElementSibling;\n            apply(node, fn);\n            node = next;\n        }\n    }\n    function $(selector, context) {\n        return isHtml(selector) ? toNode(fragment(selector)) : find(selector, context);\n    }\n    function $$(selector, context) {\n        return isHtml(selector) ? toNodes(fragment(selector)) : findAll(selector, context);\n    }\n    function isHtml(str) {\n        return isString(str) && startsWith(str.trim(), \"<\");\n    }\n    const dirs$1 = {\n        width: [\n            \"left\",\n            \"right\"\n        ],\n        height: [\n            \"top\",\n            \"bottom\"\n        ]\n    };\n    function dimensions$1(element) {\n        const rect = isElement(element) ? toNode(element).getBoundingClientRect() : {\n            height: height(element),\n            width: width(element),\n            top: 0,\n            left: 0\n        };\n        return {\n            height: rect.height,\n            width: rect.width,\n            top: rect.top,\n            left: rect.left,\n            bottom: rect.top + rect.height,\n            right: rect.left + rect.width\n        };\n    }\n    function offset(element, coordinates) {\n        if (coordinates) css(element, {\n            left: 0,\n            top: 0\n        });\n        const currentOffset = dimensions$1(element);\n        if (element) {\n            const { scrollY: scrollY, scrollX: scrollX } = toWindow(element);\n            const offsetBy = {\n                height: scrollY,\n                width: scrollX\n            };\n            for(const dir in dirs$1)for (const prop of dirs$1[dir])currentOffset[prop] += offsetBy[dir];\n        }\n        if (!coordinates) return currentOffset;\n        for (const prop of [\n            \"left\",\n            \"top\"\n        ])css(element, prop, coordinates[prop] - currentOffset[prop]);\n    }\n    function position(element) {\n        let { top: top, left: left } = offset(element);\n        const { ownerDocument: { body: body, documentElement: documentElement }, offsetParent: offsetParent } = toNode(element);\n        let parent = offsetParent || documentElement;\n        while(parent && (parent === body || parent === documentElement) && css(parent, \"position\") === \"static\")parent = parent.parentNode;\n        if (isElement(parent)) {\n            const parentOffset = offset(parent);\n            top -= parentOffset.top + toFloat(css(parent, \"borderTopWidth\"));\n            left -= parentOffset.left + toFloat(css(parent, \"borderLeftWidth\"));\n        }\n        return {\n            top: top - toFloat(css(element, \"marginTop\")),\n            left: left - toFloat(css(element, \"marginLeft\"))\n        };\n    }\n    function offsetPosition(element) {\n        element = toNode(element);\n        const offset2 = [\n            element.offsetTop,\n            element.offsetLeft\n        ];\n        while(element = element.offsetParent){\n            offset2[0] += element.offsetTop + toFloat(css(element, `borderTopWidth`));\n            offset2[1] += element.offsetLeft + toFloat(css(element, `borderLeftWidth`));\n            if (css(element, \"position\") === \"fixed\") {\n                const win = toWindow(element);\n                offset2[0] += win.scrollY;\n                offset2[1] += win.scrollX;\n                return offset2;\n            }\n        }\n        return offset2;\n    }\n    const height = dimension(\"height\");\n    const width = dimension(\"width\");\n    function dimension(prop) {\n        const propName = ucfirst(prop);\n        return (element, value)=>{\n            if (isUndefined(value)) {\n                if (isWindow(element)) return element[`inner${propName}`];\n                if (isDocument(element)) {\n                    const doc = element.documentElement;\n                    return Math.max(doc[`offset${propName}`], doc[`scroll${propName}`]);\n                }\n                element = toNode(element);\n                value = css(element, prop);\n                value = value === \"auto\" ? element[`offset${propName}`] : toFloat(value) || 0;\n                return value - boxModelAdjust(element, prop);\n            } else return css(element, prop, !value && value !== 0 ? \"\" : +value + boxModelAdjust(element, prop) + \"px\");\n        };\n    }\n    function boxModelAdjust(element, prop, sizing = \"border-box\") {\n        return css(element, \"boxSizing\") === sizing ? sumBy(dirs$1[prop].map(ucfirst), (prop2)=>toFloat(css(element, `padding${prop2}`)) + toFloat(css(element, `border${prop2}Width`))) : 0;\n    }\n    function flipPosition(pos) {\n        for(const dir in dirs$1)for(const i in dirs$1[dir]){\n            if (dirs$1[dir][i] === pos) return dirs$1[dir][1 - i];\n        }\n        return pos;\n    }\n    function toPx(value, property = \"width\", element = window, offsetDim = false) {\n        if (!isString(value)) return toFloat(value);\n        return sumBy(parseCalc(value), (value2)=>{\n            const unit = parseUnit(value2);\n            return unit ? percent(unit === \"vh\" ? getViewportHeight() : unit === \"vw\" ? width(toWindow(element)) : offsetDim ? element[`offset${ucfirst(property)}`] : dimensions$1(element)[property], value2) : value2;\n        });\n    }\n    const calcRe = /-?\\d+(?:\\.\\d+)?(?:v[wh]|%|px)?/g;\n    const parseCalc = memoize((calc)=>calc.toString().replace(/\\s/g, \"\").match(calcRe) || []);\n    const unitRe$1 = /(?:v[hw]|%)$/;\n    const parseUnit = memoize((str)=>(str.match(unitRe$1) || [])[0]);\n    function percent(base, value) {\n        return base * toFloat(value) / 100;\n    }\n    let vh;\n    let vhEl;\n    function getViewportHeight() {\n        if (vh) return vh;\n        if (!vhEl) {\n            vhEl = $(\"<div>\");\n            css(vhEl, {\n                height: \"100vh\",\n                position: \"fixed\"\n            });\n            on(window, \"resize\", ()=>vh = null);\n        }\n        append(document.body, vhEl);\n        vh = vhEl.clientHeight;\n        remove$1(vhEl);\n        return vh;\n    }\n    const inBrowser = typeof window !== \"undefined\";\n    const isRtl = inBrowser && document.dir === \"rtl\";\n    const hasTouch = inBrowser && \"ontouchstart\" in window;\n    const hasPointerEvents = inBrowser && window.PointerEvent;\n    const pointerDown$1 = hasPointerEvents ? \"pointerdown\" : hasTouch ? \"touchstart\" : \"mousedown\";\n    const pointerMove$1 = hasPointerEvents ? \"pointermove\" : hasTouch ? \"touchmove\" : \"mousemove\";\n    const pointerUp$1 = hasPointerEvents ? \"pointerup\" : hasTouch ? \"touchend\" : \"mouseup\";\n    const pointerEnter = hasPointerEvents ? \"pointerenter\" : hasTouch ? \"\" : \"mouseenter\";\n    const pointerLeave = hasPointerEvents ? \"pointerleave\" : hasTouch ? \"\" : \"mouseleave\";\n    const pointerCancel = hasPointerEvents ? \"pointercancel\" : \"touchcancel\";\n    const fastdom = {\n        reads: [],\n        writes: [],\n        read (task) {\n            this.reads.push(task);\n            scheduleFlush();\n            return task;\n        },\n        write (task) {\n            this.writes.push(task);\n            scheduleFlush();\n            return task;\n        },\n        clear (task) {\n            remove(this.reads, task);\n            remove(this.writes, task);\n        },\n        flush: flush\n    };\n    function flush(recursion) {\n        runTasks(fastdom.reads);\n        runTasks(fastdom.writes.splice(0));\n        fastdom.scheduled = false;\n        if (fastdom.reads.length || fastdom.writes.length) scheduleFlush(recursion + 1);\n    }\n    const RECURSION_LIMIT = 4;\n    function scheduleFlush(recursion) {\n        if (fastdom.scheduled) return;\n        fastdom.scheduled = true;\n        if (recursion && recursion < RECURSION_LIMIT) Promise.resolve().then(()=>flush(recursion));\n        else requestAnimationFrame(()=>flush(1));\n    }\n    function runTasks(tasks) {\n        let task;\n        while(task = tasks.shift())try {\n            task();\n        } catch (e) {\n            console.error(e);\n        }\n    }\n    function remove(array, item) {\n        const index = array.indexOf(item);\n        return ~index && array.splice(index, 1);\n    }\n    function MouseTracker() {}\n    MouseTracker.prototype = {\n        positions: [],\n        init () {\n            this.positions = [];\n            let position;\n            this.unbind = on(document, \"mousemove\", (e)=>position = getEventPos(e));\n            this.interval = setInterval(()=>{\n                if (!position) return;\n                this.positions.push(position);\n                if (this.positions.length > 5) this.positions.shift();\n            }, 50);\n        },\n        cancel () {\n            var _a;\n            (_a = this.unbind) == null || _a.call(this);\n            clearInterval(this.interval);\n        },\n        movesTo (target) {\n            if (this.positions.length < 2) return false;\n            const p = target.getBoundingClientRect();\n            const { left: left, right: right, top: top, bottom: bottom } = p;\n            const [prevPosition] = this.positions;\n            const position = last(this.positions);\n            const path = [\n                prevPosition,\n                position\n            ];\n            if (pointInRect(position, p)) return false;\n            const diagonals = [\n                [\n                    {\n                        x: left,\n                        y: top\n                    },\n                    {\n                        x: right,\n                        y: bottom\n                    }\n                ],\n                [\n                    {\n                        x: left,\n                        y: bottom\n                    },\n                    {\n                        x: right,\n                        y: top\n                    }\n                ]\n            ];\n            return diagonals.some((diagonal)=>{\n                const intersection = intersect(path, diagonal);\n                return intersection && pointInRect(intersection, p);\n            });\n        }\n    };\n    function intersect([{ x: x1, y: y1 }, { x: x2, y: y2 }], [{ x: x3, y: y3 }, { x: x4, y: y4 }]) {\n        const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n        if (denominator === 0) return false;\n        const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n        if (ua < 0) return false;\n        return {\n            x: x1 + ua * (x2 - x1),\n            y: y1 + ua * (y2 - y1)\n        };\n    }\n    function observeIntersection(targets, cb, options = {}, { intersecting: intersecting = true } = {}) {\n        const observer = new IntersectionObserver(intersecting ? (entries, observer2)=>{\n            if (entries.some((entry)=>entry.isIntersecting)) cb(entries, observer2);\n        } : cb, options);\n        for (const el of toNodes(targets))observer.observe(el);\n        return observer;\n    }\n    const hasResizeObserver = inBrowser && window.ResizeObserver;\n    function observeResize(targets, cb, options = {\n        box: \"border-box\"\n    }) {\n        if (hasResizeObserver) return observe$1(ResizeObserver, targets, cb, options);\n        const off = [\n            on(window, \"load resize\", cb),\n            on(document, \"loadedmetadata load\", cb, true)\n        ];\n        return {\n            disconnect: ()=>off.map((cb2)=>cb2())\n        };\n    }\n    function observeViewportResize(cb) {\n        return {\n            disconnect: on([\n                window,\n                window.visualViewport\n            ], \"resize\", cb)\n        };\n    }\n    function observeMutation(targets, cb, options) {\n        return observe$1(MutationObserver, targets, cb, options);\n    }\n    function observe$1(Observer, targets, cb, options) {\n        const observer = new Observer(cb);\n        for (const el of toNodes(targets))observer.observe(el, options);\n        return observer;\n    }\n    function play(el) {\n        if (isIFrame(el)) call(el, {\n            func: \"playVideo\",\n            method: \"play\"\n        });\n        if (isHTML5(el)) el.play();\n    }\n    function pause(el) {\n        if (isIFrame(el)) call(el, {\n            func: \"pauseVideo\",\n            method: \"pause\"\n        });\n        if (isHTML5(el)) el.pause();\n    }\n    function mute(el) {\n        if (isIFrame(el)) call(el, {\n            func: \"mute\",\n            method: \"setVolume\",\n            value: 0\n        });\n        if (isHTML5(el)) el.muted = true;\n    }\n    function isVideo(el) {\n        return isHTML5(el) || isIFrame(el);\n    }\n    function isHTML5(el) {\n        return isTag(el, \"video\");\n    }\n    function isIFrame(el) {\n        return isTag(el, \"iframe\") && (isYoutube(el) || isVimeo(el));\n    }\n    function isYoutube(el) {\n        return !!el.src.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\n    }\n    function isVimeo(el) {\n        return !!el.src.match(/vimeo\\.com\\/video\\/.*/);\n    }\n    async function call(el, cmd) {\n        await enableApi(el);\n        post(el, cmd);\n    }\n    function post(el, cmd) {\n        el.contentWindow.postMessage(JSON.stringify({\n            event: \"command\",\n            ...cmd\n        }), \"*\");\n    }\n    const stateKey = \"_ukPlayer\";\n    let counter = 0;\n    function enableApi(el) {\n        if (el[stateKey]) return el[stateKey];\n        const youtube = isYoutube(el);\n        const vimeo = isVimeo(el);\n        const id = ++counter;\n        let poller;\n        return el[stateKey] = new Promise((resolve)=>{\n            youtube && once(el, \"load\", ()=>{\n                const listener = ()=>post(el, {\n                        event: \"listening\",\n                        id: id\n                    });\n                poller = setInterval(listener, 100);\n                listener();\n            });\n            once(window, \"message\", resolve, false, ({ data: data })=>{\n                try {\n                    data = JSON.parse(data);\n                    return youtube && (data == null ? void 0 : data.id) === id && data.event === \"onReady\" || vimeo && Number(data == null ? void 0 : data.player_id) === id;\n                } catch (e) {}\n            });\n            el.src = `${el.src}${includes(el.src, \"?\") ? \"&\" : \"?\"}${youtube ? \"enablejsapi=1\" : `api=1&player_id=${id}`}`;\n        }).then(()=>clearInterval(poller));\n    }\n    function isInView(element, offsetTop = 0, offsetLeft = 0) {\n        if (!isVisible(element)) return false;\n        return intersectRect(...overflowParents(element).map((parent2)=>{\n            const { top: top, left: left, bottom: bottom, right: right } = offsetViewport(parent2);\n            return {\n                top: top - offsetTop,\n                left: left - offsetLeft,\n                bottom: bottom + offsetTop,\n                right: right + offsetLeft\n            };\n        }).concat(offset(element)));\n    }\n    function scrollIntoView(element, { offset: offsetBy = 0 } = {}) {\n        const parents2 = isVisible(element) ? scrollParents(element, false, [\n            \"hidden\"\n        ]) : [];\n        return parents2.reduce((fn, scrollElement, i)=>{\n            const { scrollTop: scrollTop, scrollHeight: scrollHeight, offsetHeight: offsetHeight } = scrollElement;\n            const viewport = offsetViewport(scrollElement);\n            const maxScroll = scrollHeight - viewport.height;\n            const { height: elHeight, top: elTop } = parents2[i - 1] ? offsetViewport(parents2[i - 1]) : offset(element);\n            let top = Math.ceil(elTop - viewport.top - offsetBy + scrollTop);\n            if (offsetBy > 0 && offsetHeight < elHeight + offsetBy) top += offsetBy;\n            else offsetBy = 0;\n            if (top > maxScroll) {\n                offsetBy -= top - maxScroll;\n                top = maxScroll;\n            } else if (top < 0) {\n                offsetBy -= top;\n                top = 0;\n            }\n            return ()=>scrollTo(scrollElement, top - scrollTop, element, maxScroll).then(fn);\n        }, ()=>Promise.resolve())();\n        function scrollTo(element2, top, targetEl, maxScroll) {\n            return new Promise((resolve)=>{\n                const scroll = element2.scrollTop;\n                const duration = getDuration(Math.abs(top));\n                const start = Date.now();\n                const isScrollingElement = scrollingElement(element2) === element2;\n                const targetTop = offset(targetEl).top + (isScrollingElement ? 0 : scroll);\n                let prev = 0;\n                let frames = 15;\n                (function step() {\n                    const percent = ease(clamp((Date.now() - start) / duration));\n                    let diff = 0;\n                    if (parents2[0] === element2 && scroll + top < maxScroll) {\n                        diff = offset(targetEl).top + (isScrollingElement ? 0 : element2.scrollTop) - targetTop;\n                        const coverEl = getCoveringElement(targetEl);\n                        diff -= coverEl ? offset(coverEl).height : 0;\n                    }\n                    element2.scrollTop = Math[top + diff > 0 ? \"max\" : \"min\"](element2.scrollTop, scroll + (top + diff) * percent);\n                    if (percent === 1 && (prev === diff || !frames--)) resolve();\n                    else {\n                        prev = diff;\n                        requestAnimationFrame(step);\n                    }\n                })();\n            });\n        }\n        function getDuration(dist) {\n            return 40 * Math.pow(dist, 0.375);\n        }\n        function ease(k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        }\n    }\n    function scrolledOver(element, startOffset = 0, endOffset = 0) {\n        if (!isVisible(element)) return 0;\n        const scrollElement = scrollParent(element, true);\n        const { scrollHeight: scrollHeight, scrollTop: scrollTop } = scrollElement;\n        const { height: viewportHeight } = offsetViewport(scrollElement);\n        const maxScroll = scrollHeight - viewportHeight;\n        const elementOffsetTop = offsetPosition(element)[0] - offsetPosition(scrollElement)[0];\n        const start = Math.max(0, elementOffsetTop - viewportHeight + startOffset);\n        const end = Math.min(maxScroll, elementOffsetTop + element.offsetHeight - endOffset);\n        return clamp((scrollTop - start) / (end - start));\n    }\n    function scrollParents(element, scrollable = false, props = []) {\n        const scrollEl = scrollingElement(element);\n        let ancestors = parents(element).reverse();\n        ancestors = ancestors.slice(ancestors.indexOf(scrollEl) + 1);\n        const fixedIndex = findIndex(ancestors, (el)=>css(el, \"position\") === \"fixed\");\n        if (~fixedIndex) ancestors = ancestors.slice(fixedIndex);\n        return [\n            scrollEl\n        ].concat(ancestors.filter((parent2)=>css(parent2, \"overflow\").split(\" \").some((prop)=>includes([\n                    \"auto\",\n                    \"scroll\",\n                    ...props\n                ], prop)) && (!scrollable || parent2.scrollHeight > offsetViewport(parent2).height))).reverse();\n    }\n    function scrollParent(...args) {\n        return scrollParents(...args)[0];\n    }\n    function overflowParents(element) {\n        return scrollParents(element, false, [\n            \"hidden\",\n            \"clip\"\n        ]);\n    }\n    function offsetViewport(scrollElement) {\n        const window1 = toWindow(scrollElement);\n        const { visualViewport: visualViewport, document: { documentElement: documentElement } } = window1;\n        let viewportElement = scrollElement === scrollingElement(scrollElement) ? window1 : scrollElement;\n        if (isWindow(viewportElement) && visualViewport) {\n            let { height: height, width: width, scale: scale, pageTop: top, pageLeft: left } = visualViewport;\n            height = Math.round(height * scale);\n            width = Math.round(width * scale);\n            return {\n                height: height,\n                width: width,\n                top: top,\n                left: left,\n                bottom: top + height,\n                right: left + width\n            };\n        }\n        let rect = offset(viewportElement);\n        if (css(viewportElement, \"display\") === \"inline\") return rect;\n        for (let [prop, dir, start, end] of [\n            [\n                \"width\",\n                \"x\",\n                \"left\",\n                \"right\"\n            ],\n            [\n                \"height\",\n                \"y\",\n                \"top\",\n                \"bottom\"\n            ]\n        ]){\n            if (isWindow(viewportElement)) viewportElement = documentElement;\n            else rect[start] += toFloat(css(viewportElement, `border-${start}-width`));\n            const subpixel = rect[prop] % 1;\n            rect[prop] = rect[dir] = viewportElement[`client${ucfirst(prop)}`] - (subpixel ? subpixel < 0.5 ? -subpixel : 1 - subpixel : 0);\n            rect[end] = rect[prop] + rect[start];\n        }\n        return rect;\n    }\n    function getCoveringElement(target) {\n        return target.ownerDocument.elementsFromPoint(offset(target).left, 0).find((el)=>!el.contains(target) && (hasPosition(el, \"fixed\") && zIndex(parents(target).reverse().find((parent2)=>!parent2.contains(el) && !hasPosition(parent2, \"static\"))) < zIndex(el) || hasPosition(el, \"sticky\") && parent(el).contains(target)));\n    }\n    function zIndex(element) {\n        return toFloat(css(element, \"zIndex\"));\n    }\n    function hasPosition(element, position) {\n        return css(element, \"position\") === position;\n    }\n    function scrollingElement(element) {\n        return toWindow(element).document.scrollingElement;\n    }\n    const dirs = [\n        [\n            \"width\",\n            \"x\",\n            \"left\",\n            \"right\"\n        ],\n        [\n            \"height\",\n            \"y\",\n            \"top\",\n            \"bottom\"\n        ]\n    ];\n    function positionAt(element, target, options) {\n        options = {\n            attach: {\n                element: [\n                    \"left\",\n                    \"top\"\n                ],\n                target: [\n                    \"left\",\n                    \"top\"\n                ],\n                ...options.attach\n            },\n            offset: [\n                0,\n                0\n            ],\n            placement: [],\n            ...options\n        };\n        if (!isArray(target)) target = [\n            target,\n            target\n        ];\n        offset(element, getPosition(element, target, options));\n    }\n    function getPosition(element, target, options) {\n        const position = attachTo(element, target, options);\n        const { boundary: boundary, viewportOffset: viewportOffset = 0, placement: placement } = options;\n        let offsetPosition = position;\n        for (const [i, [prop, , start, end]] of Object.entries(dirs)){\n            const viewport = getViewport$2(element, target[i], viewportOffset, boundary, i);\n            if (isWithin(position, viewport, i)) continue;\n            let offsetBy = 0;\n            if (placement[i] === \"flip\") {\n                const attach = options.attach.target[i];\n                if (attach === end && position[end] <= viewport[end] || attach === start && position[start] >= viewport[start]) continue;\n                offsetBy = flip(element, target, options, i)[start] - position[start];\n                const scrollArea = getScrollArea(element, target[i], viewportOffset, i);\n                if (!isWithin(applyOffset(position, offsetBy, i), scrollArea, i)) {\n                    if (isWithin(position, scrollArea, i)) continue;\n                    if (options.recursion) return false;\n                    const newPos = flipAxis(element, target, options);\n                    if (newPos && isWithin(newPos, scrollArea, 1 - i)) return newPos;\n                    continue;\n                }\n            } else if (placement[i] === \"shift\") {\n                const targetDim = offset(target[i]);\n                const { offset: elOffset } = options;\n                offsetBy = clamp(clamp(position[start], viewport[start], viewport[end] - position[prop]), targetDim[start] - position[prop] + elOffset[i], targetDim[end] - elOffset[i]) - position[start];\n            }\n            offsetPosition = applyOffset(offsetPosition, offsetBy, i);\n        }\n        return offsetPosition;\n    }\n    function attachTo(element, target, options) {\n        let { attach: attach, offset: offsetBy } = {\n            attach: {\n                element: [\n                    \"left\",\n                    \"top\"\n                ],\n                target: [\n                    \"left\",\n                    \"top\"\n                ],\n                ...options.attach\n            },\n            offset: [\n                0,\n                0\n            ],\n            ...options\n        };\n        let elOffset = offset(element);\n        for (const [i, [prop, , start, end]] of Object.entries(dirs)){\n            const targetOffset = attach.target[i] === attach.element[i] ? offsetViewport(target[i]) : offset(target[i]);\n            elOffset = applyOffset(elOffset, targetOffset[start] - elOffset[start] + moveBy(attach.target[i], end, targetOffset[prop]) - moveBy(attach.element[i], end, elOffset[prop]) + +offsetBy[i], i);\n        }\n        return elOffset;\n    }\n    function applyOffset(position, offset2, i) {\n        const [, dir, start, end] = dirs[i];\n        const newPos = {\n            ...position\n        };\n        newPos[start] = position[dir] = position[start] + offset2;\n        newPos[end] += offset2;\n        return newPos;\n    }\n    function moveBy(attach, end, dim) {\n        return attach === \"center\" ? dim / 2 : attach === end ? dim : 0;\n    }\n    function getViewport$2(element, target, viewportOffset, boundary, i) {\n        let viewport = getIntersectionArea(...commonScrollParents(element, target).map(offsetViewport));\n        if (viewportOffset) {\n            viewport[dirs[i][2]] += viewportOffset;\n            viewport[dirs[i][3]] -= viewportOffset;\n        }\n        if (boundary) viewport = getIntersectionArea(viewport, offset(isArray(boundary) ? boundary[i] : boundary));\n        return viewport;\n    }\n    function getScrollArea(element, target, viewportOffset, i) {\n        const [prop, axis, start, end] = dirs[i];\n        const [scrollElement] = commonScrollParents(element, target);\n        const viewport = offsetViewport(scrollElement);\n        if ([\n            \"auto\",\n            \"scroll\"\n        ].includes(css(scrollElement, `overflow-${axis}`))) {\n            viewport[start] -= scrollElement[`scroll${ucfirst(start)}`];\n            viewport[end] = viewport[start] + scrollElement[`scroll${ucfirst(prop)}`];\n        }\n        viewport[start] += viewportOffset;\n        viewport[end] -= viewportOffset;\n        return viewport;\n    }\n    function commonScrollParents(element, target) {\n        return overflowParents(target).filter((parent)=>parent.contains(element));\n    }\n    function getIntersectionArea(...rects) {\n        let area = {};\n        for (const rect of rects)for (const [, , start, end] of dirs){\n            area[start] = Math.max(area[start] || 0, rect[start]);\n            area[end] = Math.min(...[\n                area[end],\n                rect[end]\n            ].filter(Boolean));\n        }\n        return area;\n    }\n    function isWithin(positionA, positionB, i) {\n        const [, , start, end] = dirs[i];\n        return positionA[start] >= positionB[start] && positionA[end] <= positionB[end];\n    }\n    function flip(element, target, { offset: offset2, attach: attach }, i) {\n        return attachTo(element, target, {\n            attach: {\n                element: flipAttach(attach.element, i),\n                target: flipAttach(attach.target, i)\n            },\n            offset: flipOffset(offset2, i)\n        });\n    }\n    function flipAxis(element, target, options) {\n        return getPosition(element, target, {\n            ...options,\n            attach: {\n                element: options.attach.element.map(flipAttachAxis).reverse(),\n                target: options.attach.target.map(flipAttachAxis).reverse()\n            },\n            offset: options.offset.reverse(),\n            placement: options.placement.reverse(),\n            recursion: true\n        });\n    }\n    function flipAttach(attach, i) {\n        const newAttach = [\n            ...attach\n        ];\n        const index = dirs[i].indexOf(attach[i]);\n        if (~index) newAttach[i] = dirs[i][1 - index % 2 + 2];\n        return newAttach;\n    }\n    function flipAttachAxis(prop) {\n        for(let i = 0; i < dirs.length; i++){\n            const index = dirs[i].indexOf(prop);\n            if (~index) return dirs[1 - i][index % 2 + 2];\n        }\n    }\n    function flipOffset(offset2, i) {\n        offset2 = [\n            ...offset2\n        ];\n        offset2[i] *= -1;\n        return offset2;\n    }\n    var util = /*#__PURE__*/ Object.freeze({\n        __proto__: null,\n        $: $,\n        $$: $$,\n        Animation: Animation,\n        Dimensions: Dimensions,\n        MouseTracker: MouseTracker,\n        Transition: Transition,\n        addClass: addClass,\n        after: after,\n        append: append,\n        apply: apply,\n        assign: assign,\n        attr: attr,\n        before: before,\n        boxModelAdjust: boxModelAdjust,\n        camelize: camelize,\n        children: children,\n        clamp: clamp,\n        closest: closest,\n        createEvent: createEvent,\n        css: css,\n        data: data,\n        dimensions: dimensions$1,\n        each: each,\n        empty: empty,\n        endsWith: endsWith,\n        escape: escape,\n        fastdom: fastdom,\n        filter: filter$1,\n        find: find,\n        findAll: findAll,\n        findIndex: findIndex,\n        flipPosition: flipPosition,\n        fragment: fragment,\n        getCoveringElement: getCoveringElement,\n        getEventPos: getEventPos,\n        getIndex: getIndex,\n        getTargetedElement: getTargetedElement,\n        hasAttr: hasAttr,\n        hasClass: hasClass,\n        hasOwn: hasOwn,\n        hasTouch: hasTouch,\n        height: height,\n        html: html,\n        hyphenate: hyphenate,\n        inBrowser: inBrowser,\n        includes: includes,\n        index: index,\n        intersectRect: intersectRect,\n        isArray: isArray,\n        isBoolean: isBoolean,\n        isDocument: isDocument,\n        isElement: isElement,\n        isEmpty: isEmpty,\n        isEqual: isEqual,\n        isFocusable: isFocusable,\n        isFunction: isFunction,\n        isInView: isInView,\n        isInput: isInput,\n        isNode: isNode,\n        isNumber: isNumber,\n        isNumeric: isNumeric,\n        isObject: isObject,\n        isPlainObject: isPlainObject,\n        isRtl: isRtl,\n        isSameSiteAnchor: isSameSiteAnchor,\n        isString: isString,\n        isTag: isTag,\n        isTouch: isTouch,\n        isUndefined: isUndefined,\n        isVideo: isVideo,\n        isVisible: isVisible,\n        isVoidElement: isVoidElement,\n        isWindow: isWindow,\n        last: last,\n        matches: matches,\n        memoize: memoize,\n        mute: mute,\n        noop: noop,\n        observeIntersection: observeIntersection,\n        observeMutation: observeMutation,\n        observeResize: observeResize,\n        observeViewportResize: observeViewportResize,\n        off: off,\n        offset: offset,\n        offsetPosition: offsetPosition,\n        offsetViewport: offsetViewport,\n        on: on,\n        once: once,\n        overflowParents: overflowParents,\n        parent: parent,\n        parents: parents,\n        pause: pause,\n        pick: pick,\n        play: play,\n        pointInRect: pointInRect,\n        pointerCancel: pointerCancel,\n        pointerDown: pointerDown$1,\n        pointerEnter: pointerEnter,\n        pointerLeave: pointerLeave,\n        pointerMove: pointerMove$1,\n        pointerUp: pointerUp$1,\n        position: position,\n        positionAt: positionAt,\n        prepend: prepend,\n        propName: propName,\n        query: query,\n        queryAll: queryAll,\n        ready: ready,\n        remove: remove$1,\n        removeAttr: removeAttr,\n        removeClass: removeClass,\n        removeClasses: removeClasses$1,\n        replaceClass: replaceClass,\n        scrollIntoView: scrollIntoView,\n        scrollParent: scrollParent,\n        scrollParents: scrollParents,\n        scrolledOver: scrolledOver,\n        selFocusable: selFocusable,\n        selInput: selInput,\n        sortBy: sortBy,\n        startsWith: startsWith,\n        sumBy: sumBy,\n        swap: swap,\n        toArray: toArray,\n        toBoolean: toBoolean,\n        toEventTargets: toEventTargets,\n        toFloat: toFloat,\n        toNode: toNode,\n        toNodes: toNodes,\n        toNumber: toNumber,\n        toPx: toPx,\n        toWindow: toWindow,\n        toggleClass: toggleClass,\n        trigger: trigger,\n        ucfirst: ucfirst,\n        uniqueBy: uniqueBy,\n        unwrap: unwrap,\n        width: width,\n        within: within,\n        wrapAll: wrapAll,\n        wrapInner: wrapInner\n    });\n    var Class = {\n        connected () {\n            addClass(this.$el, this.$options.id);\n        }\n    };\n    const units = [\n        \"days\",\n        \"hours\",\n        \"minutes\",\n        \"seconds\"\n    ];\n    var countdown = {\n        mixins: [\n            Class\n        ],\n        props: {\n            date: String,\n            clsWrapper: String,\n            role: String\n        },\n        data: {\n            date: \"\",\n            clsWrapper: \".uk-countdown-%unit%\",\n            role: \"timer\"\n        },\n        connected () {\n            attr(this.$el, \"role\", this.role);\n            this.date = toFloat(Date.parse(this.$props.date));\n            this.end = false;\n            this.start();\n        },\n        disconnected () {\n            this.stop();\n        },\n        events: {\n            name: \"visibilitychange\",\n            el () {\n                return document;\n            },\n            handler () {\n                if (document.hidden) this.stop();\n                else this.start();\n            }\n        },\n        methods: {\n            start () {\n                this.stop();\n                this.update();\n                if (!this.timer) {\n                    trigger(this.$el, \"countdownstart\");\n                    this.timer = setInterval(this.update, 1e3);\n                }\n            },\n            stop () {\n                if (this.timer) {\n                    clearInterval(this.timer);\n                    trigger(this.$el, \"countdownstop\");\n                    this.timer = null;\n                }\n            },\n            update () {\n                const timespan = getTimeSpan(this.date);\n                if (!timespan.total) {\n                    this.stop();\n                    if (!this.end) {\n                        trigger(this.$el, \"countdownend\");\n                        this.end = true;\n                    }\n                }\n                for (const unit of units){\n                    const el = $(this.clsWrapper.replace(\"%unit%\", unit), this.$el);\n                    if (!el) continue;\n                    let digits = String(Math.trunc(timespan[unit]));\n                    digits = digits.length < 2 ? `0${digits}` : digits;\n                    if (el.textContent !== digits) {\n                        digits = digits.split(\"\");\n                        if (digits.length !== el.children.length) html(el, digits.map(()=>\"<span></span>\").join(\"\"));\n                        digits.forEach((digit, i)=>el.children[i].textContent = digit);\n                    }\n                }\n            }\n        }\n    };\n    function getTimeSpan(date) {\n        const total = Math.max(0, date - Date.now()) / 1e3;\n        return {\n            total: total,\n            seconds: total % 60,\n            minutes: total / 60 % 60,\n            hours: total / 60 / 60 % 24,\n            days: total / 60 / 60 / 24\n        };\n    }\n    const strats = {};\n    strats.events = strats.watch = strats.observe = strats.created = strats.beforeConnect = strats.connected = strats.beforeDisconnect = strats.disconnected = strats.destroy = concatStrat;\n    strats.args = function(parentVal, childVal) {\n        return childVal !== false && concatStrat(childVal || parentVal);\n    };\n    strats.update = function(parentVal, childVal) {\n        return sortBy(concatStrat(parentVal, isFunction(childVal) ? {\n            read: childVal\n        } : childVal), \"order\");\n    };\n    strats.props = function(parentVal, childVal) {\n        if (isArray(childVal)) {\n            const value = {};\n            for (const key of childVal)value[key] = String;\n            childVal = value;\n        }\n        return strats.methods(parentVal, childVal);\n    };\n    strats.computed = strats.methods = function(parentVal, childVal) {\n        return childVal ? parentVal ? {\n            ...parentVal,\n            ...childVal\n        } : childVal : parentVal;\n    };\n    strats.i18n = strats.data = function(parentVal, childVal, vm) {\n        if (!vm) {\n            if (!childVal) return parentVal;\n            if (!parentVal) return childVal;\n            return function(vm2) {\n                return mergeFnData(parentVal, childVal, vm2);\n            };\n        }\n        return mergeFnData(parentVal, childVal, vm);\n    };\n    function mergeFnData(parentVal, childVal, vm) {\n        return strats.computed(isFunction(parentVal) ? parentVal.call(vm, vm) : parentVal, isFunction(childVal) ? childVal.call(vm, vm) : childVal);\n    }\n    function concatStrat(parentVal, childVal) {\n        parentVal = parentVal && !isArray(parentVal) ? [\n            parentVal\n        ] : parentVal;\n        return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [\n            childVal\n        ] : parentVal;\n    }\n    function defaultStrat(parentVal, childVal) {\n        return isUndefined(childVal) ? parentVal : childVal;\n    }\n    function mergeOptions(parent, child, vm) {\n        const options = {};\n        if (isFunction(child)) child = child.options;\n        if (child.extends) parent = mergeOptions(parent, child.extends, vm);\n        if (child.mixins) for (const mixin of child.mixins)parent = mergeOptions(parent, mixin, vm);\n        for(const key in parent)mergeKey(key);\n        for(const key in child)if (!hasOwn(parent, key)) mergeKey(key);\n        function mergeKey(key) {\n            options[key] = (strats[key] || defaultStrat)(parent[key], child[key], vm);\n        }\n        return options;\n    }\n    function parseOptions(options, args = []) {\n        try {\n            return options ? startsWith(options, \"{\") ? JSON.parse(options) : args.length && !includes(options, \":\") ? {\n                [args[0]]: options\n            } : options.split(\";\").reduce((options2, option)=>{\n                const [key, value] = option.split(/:(.*)/);\n                if (key && !isUndefined(value)) options2[key.trim()] = value.trim();\n                return options2;\n            }, {}) : {};\n        } catch (e) {\n            return {};\n        }\n    }\n    function coerce$1(type, value) {\n        if (type === Boolean) return toBoolean(value);\n        else if (type === Number) return toNumber(value);\n        else if (type === \"list\") return toList(value);\n        else if (type === Object && isString(value)) return parseOptions(value);\n        return type ? type(value) : value;\n    }\n    const listRe = /,(?![^(]*\\))/;\n    function toList(value) {\n        return isArray(value) ? value : isString(value) ? value.split(listRe).map((value2)=>isNumeric(value2) ? toNumber(value2) : toBoolean(value2.trim())) : [\n            value\n        ];\n    }\n    function initUpdates(instance) {\n        instance._data = {};\n        instance._updates = [\n            ...instance.$options.update || []\n        ];\n    }\n    function prependUpdate(instance, update) {\n        instance._updates.unshift(update);\n    }\n    function clearUpdateData(instance) {\n        delete instance._data;\n    }\n    function callUpdate(instance, e = \"update\") {\n        if (!instance._connected) return;\n        if (!instance._updates.length) return;\n        if (!instance._queued) {\n            instance._queued = /* @__PURE__ */ new Set();\n            fastdom.read(()=>{\n                if (instance._connected) runUpdates(instance, instance._queued);\n                delete instance._queued;\n            });\n        }\n        instance._queued.add(e.type || e);\n    }\n    function runUpdates(instance, types) {\n        for (const { read: read, write: write, events: events = [] } of instance._updates){\n            if (!types.has(\"update\") && !events.some((type)=>types.has(type))) continue;\n            let result;\n            if (read) {\n                result = read.call(instance, instance._data, types);\n                if (result && isPlainObject(result)) assign(instance._data, result);\n            }\n            if (write && result !== false) fastdom.write(()=>{\n                if (instance._connected) write.call(instance, instance._data, types);\n            });\n        }\n    }\n    function resize(options) {\n        return observe(observeResize, options, \"resize\");\n    }\n    function intersection(options) {\n        return observe(observeIntersection, options);\n    }\n    function mutation(options) {\n        return observe(observeMutation, options);\n    }\n    function lazyload(options = {}) {\n        return intersection({\n            handler: function(entries, observer) {\n                const { targets: targets = this.$el, preload: preload = 5 } = options;\n                for (const el of toNodes(isFunction(targets) ? targets(this) : targets))$$('[loading=\"lazy\"]', el).slice(0, preload - 1).forEach((el2)=>removeAttr(el2, \"loading\"));\n                for (const el of entries.filter(({ isIntersecting: isIntersecting })=>isIntersecting).map(({ target: target })=>target))observer.unobserve(el);\n            },\n            ...options\n        });\n    }\n    function viewport(options) {\n        return observe((target, handler)=>observeViewportResize(handler), options);\n    }\n    function scroll$1(options) {\n        return observe((target, handler)=>({\n                disconnect: on(toScrollTargets(target), \"scroll\", handler, {\n                    passive: true\n                })\n            }), options, \"scroll\");\n    }\n    function swipe(options) {\n        return {\n            observe (target, handler) {\n                return {\n                    observe: noop,\n                    unobserve: noop,\n                    disconnect: on(target, pointerDown$1, handler, {\n                        passive: true\n                    })\n                };\n            },\n            handler (e) {\n                if (!isTouch(e)) return;\n                const pos = getEventPos(e);\n                const target = \"tagName\" in e.target ? e.target : parent(e.target);\n                once(document, `${pointerUp$1} ${pointerCancel} scroll`, (e2)=>{\n                    const { x: x, y: y } = getEventPos(e2);\n                    if (e2.type !== \"scroll\" && target && x && Math.abs(pos.x - x) > 100 || y && Math.abs(pos.y - y) > 100) setTimeout(()=>{\n                        trigger(target, \"swipe\");\n                        trigger(target, `swipe${swipeDirection(pos.x, pos.y, x, y)}`);\n                    });\n                });\n            },\n            ...options\n        };\n    }\n    function observe(observe2, options, emit) {\n        return {\n            observe: observe2,\n            handler () {\n                callUpdate(this, emit);\n            },\n            ...options\n        };\n    }\n    function swipeDirection(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? \"Left\" : \"Right\" : y1 - y2 > 0 ? \"Up\" : \"Down\";\n    }\n    function toScrollTargets(elements) {\n        return toNodes(elements).map((node)=>{\n            const { ownerDocument: ownerDocument } = node;\n            const parent2 = scrollParent(node, true);\n            return parent2 === ownerDocument.scrollingElement ? ownerDocument : parent2;\n        });\n    }\n    var Margin = {\n        props: {\n            margin: String,\n            firstColumn: Boolean\n        },\n        data: {\n            margin: \"uk-margin-small-top\",\n            firstColumn: \"uk-first-column\"\n        },\n        observe: [\n            mutation({\n                options: {\n                    childList: true,\n                    attributes: true,\n                    attributeFilter: [\n                        \"style\"\n                    ]\n                }\n            }),\n            resize({\n                target: ({ $el: $el })=>[\n                        $el,\n                        ...children($el)\n                    ]\n            })\n        ],\n        update: {\n            read () {\n                return {\n                    rows: getRows(toArray(this.$el.children))\n                };\n            },\n            write ({ rows: rows }) {\n                for (const row of rows)for (const el of row){\n                    toggleClass(el, this.margin, rows[0] !== row);\n                    toggleClass(el, this.firstColumn, row[isRtl ? row.length - 1 : 0] === el);\n                }\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    function getRows(elements) {\n        const sorted = [\n            []\n        ];\n        const withOffset = elements.some((el, i)=>i && elements[i - 1].offsetParent !== el.offsetParent);\n        for (const el of elements){\n            if (!isVisible(el)) continue;\n            const offset = getOffset(el, withOffset);\n            for(let i = sorted.length - 1; i >= 0; i--){\n                const current = sorted[i];\n                if (!current[0]) {\n                    current.push(el);\n                    break;\n                }\n                const offsetCurrent = getOffset(current[0], withOffset);\n                if (offset.top >= offsetCurrent.bottom - 1 && offset.top !== offsetCurrent.top) {\n                    sorted.push([\n                        el\n                    ]);\n                    break;\n                }\n                if (offset.bottom - 1 > offsetCurrent.top || offset.top === offsetCurrent.top) {\n                    let j = current.length - 1;\n                    for(; j >= 0; j--){\n                        const offsetCurrent2 = getOffset(current[j], withOffset);\n                        if (offset.left >= offsetCurrent2.left) break;\n                    }\n                    current.splice(j + 1, 0, el);\n                    break;\n                }\n                if (i === 0) {\n                    sorted.unshift([\n                        el\n                    ]);\n                    break;\n                }\n            }\n        }\n        return sorted;\n    }\n    function getOffset(element, offset = false) {\n        let { offsetTop: offsetTop, offsetLeft: offsetLeft, offsetHeight: offsetHeight, offsetWidth: offsetWidth } = element;\n        if (offset) [offsetTop, offsetLeft] = offsetPosition(element);\n        return {\n            top: offsetTop,\n            left: offsetLeft,\n            bottom: offsetTop + offsetHeight,\n            right: offsetLeft + offsetWidth\n        };\n    }\n    const clsLeave = \"uk-transition-leave\";\n    const clsEnter = \"uk-transition-enter\";\n    function fade(action, target, duration, stagger = 0) {\n        const index = transitionIndex(target, true);\n        const propsIn = {\n            opacity: 1\n        };\n        const propsOut = {\n            opacity: 0\n        };\n        const wrapIndexFn = (fn)=>()=>index === transitionIndex(target) ? fn() : Promise.reject();\n        const leaveFn = wrapIndexFn(async ()=>{\n            addClass(target, clsLeave);\n            await Promise.all(getTransitionNodes(target).map((child, i)=>new Promise((resolve)=>setTimeout(()=>Transition.start(child, propsOut, duration / 2, \"ease\").then(resolve), i * stagger))));\n            removeClass(target, clsLeave);\n        });\n        const enterFn = wrapIndexFn(async ()=>{\n            const oldHeight = height(target);\n            addClass(target, clsEnter);\n            action();\n            css(children(target), {\n                opacity: 0\n            });\n            await awaitFrame$1();\n            const nodes = children(target);\n            const newHeight = height(target);\n            css(target, \"alignContent\", \"flex-start\");\n            height(target, oldHeight);\n            const transitionNodes = getTransitionNodes(target);\n            css(nodes, propsOut);\n            const transitions = transitionNodes.map(async (child, i)=>{\n                await awaitTimeout(i * stagger);\n                await Transition.start(child, propsIn, duration / 2, \"ease\");\n            });\n            if (oldHeight !== newHeight) transitions.push(Transition.start(target, {\n                height: newHeight\n            }, duration / 2 + transitionNodes.length * stagger, \"ease\"));\n            await Promise.all(transitions).then(()=>{\n                removeClass(target, clsEnter);\n                if (index === transitionIndex(target)) {\n                    css(target, {\n                        height: \"\",\n                        alignContent: \"\"\n                    });\n                    css(nodes, {\n                        opacity: \"\"\n                    });\n                    delete target.dataset.transition;\n                }\n            });\n        });\n        return hasClass(target, clsLeave) ? waitTransitionend(target).then(enterFn) : hasClass(target, clsEnter) ? waitTransitionend(target).then(leaveFn).then(enterFn) : leaveFn().then(enterFn);\n    }\n    function transitionIndex(target, next) {\n        if (next) target.dataset.transition = 1 + transitionIndex(target);\n        return toNumber(target.dataset.transition) || 0;\n    }\n    function waitTransitionend(target) {\n        return Promise.all(children(target).filter(Transition.inProgress).map((el)=>new Promise((resolve)=>once(el, \"transitionend transitioncanceled\", resolve))));\n    }\n    function getTransitionNodes(target) {\n        return getRows(children(target)).flat().filter((node)=>isVisible(node));\n    }\n    function awaitFrame$1() {\n        return new Promise((resolve)=>requestAnimationFrame(resolve));\n    }\n    function awaitTimeout(timeout) {\n        return new Promise((resolve)=>setTimeout(resolve, timeout));\n    }\n    async function slide(action, target, duration) {\n        await awaitFrame();\n        let nodes = children(target);\n        const currentProps = nodes.map((el)=>getProps$1(el, true));\n        const targetProps = {\n            ...css(target, [\n                \"height\",\n                \"padding\"\n            ]),\n            display: \"block\"\n        };\n        await Promise.all(nodes.concat(target).map(Transition.cancel));\n        action();\n        nodes = nodes.concat(children(target).filter((el)=>!includes(nodes, el)));\n        await Promise.resolve();\n        fastdom.flush();\n        const targetStyle = attr(target, \"style\");\n        const targetPropsTo = css(target, [\n            \"height\",\n            \"padding\"\n        ]);\n        const [propsTo, propsFrom] = getTransitionProps(target, nodes, currentProps);\n        const attrsTo = nodes.map((el)=>({\n                style: attr(el, \"style\")\n            }));\n        nodes.forEach((el, i)=>propsFrom[i] && css(el, propsFrom[i]));\n        css(target, targetProps);\n        trigger(target, \"scroll\");\n        fastdom.flush();\n        await awaitFrame();\n        const transitions = nodes.map((el, i)=>parent(el) === target && Transition.start(el, propsTo[i], duration, \"ease\")).concat(Transition.start(target, targetPropsTo, duration, \"ease\"));\n        try {\n            await Promise.all(transitions);\n            nodes.forEach((el, i)=>{\n                attr(el, attrsTo[i]);\n                if (parent(el) === target) css(el, \"display\", propsTo[i].opacity === 0 ? \"none\" : \"\");\n            });\n            attr(target, \"style\", targetStyle);\n        } catch (e) {\n            attr(nodes, \"style\", \"\");\n            resetProps(target, targetProps);\n        }\n    }\n    function getProps$1(el, opacity) {\n        const zIndex = css(el, \"zIndex\");\n        return isVisible(el) ? {\n            display: \"\",\n            opacity: opacity ? css(el, \"opacity\") : \"0\",\n            pointerEvents: \"none\",\n            position: \"absolute\",\n            zIndex: zIndex === \"auto\" ? index(el) : zIndex,\n            ...getPositionWithMargin(el)\n        } : false;\n    }\n    function getTransitionProps(target, nodes, currentProps) {\n        const propsTo = nodes.map((el, i)=>parent(el) && i in currentProps ? currentProps[i] ? isVisible(el) ? getPositionWithMargin(el) : {\n                opacity: 0\n            } : {\n                opacity: isVisible(el) ? 1 : 0\n            } : false);\n        const propsFrom = propsTo.map((props, i)=>{\n            const from = parent(nodes[i]) === target && (currentProps[i] || getProps$1(nodes[i]));\n            if (!from) return false;\n            if (!props) delete from.opacity;\n            else if (!(\"opacity\" in props)) {\n                const { opacity: opacity } = from;\n                if (opacity % 1) props.opacity = 1;\n                else delete from.opacity;\n            }\n            return from;\n        });\n        return [\n            propsTo,\n            propsFrom\n        ];\n    }\n    function resetProps(el, props) {\n        for(const prop in props)css(el, prop, \"\");\n    }\n    function getPositionWithMargin(el) {\n        const { height: height, width: width } = offset(el);\n        return {\n            height: height,\n            width: width,\n            transform: \"\",\n            ...position(el),\n            ...css(el, [\n                \"marginTop\",\n                \"marginLeft\"\n            ])\n        };\n    }\n    function awaitFrame() {\n        return new Promise((resolve)=>requestAnimationFrame(resolve));\n    }\n    var Animate = {\n        props: {\n            duration: Number,\n            animation: Boolean\n        },\n        data: {\n            duration: 150,\n            animation: \"slide\"\n        },\n        methods: {\n            animate (action, target = this.$el) {\n                const name = this.animation;\n                const animationFn = name === \"fade\" ? fade : name === \"delayed-fade\" ? (...args)=>fade(...args, 40) : name ? slide : ()=>{\n                    action();\n                    return Promise.resolve();\n                };\n                return animationFn(action, target, this.duration).catch(noop);\n            }\n        }\n    };\n    const keyMap = {\n        TAB: 9,\n        ESC: 27,\n        SPACE: 32,\n        END: 35,\n        HOME: 36,\n        LEFT: 37,\n        UP: 38,\n        RIGHT: 39,\n        DOWN: 40\n    };\n    var filter = {\n        mixins: [\n            Animate\n        ],\n        args: \"target\",\n        props: {\n            target: String,\n            selActive: Boolean\n        },\n        data: {\n            target: \"\",\n            selActive: false,\n            attrItem: \"uk-filter-control\",\n            cls: \"uk-active\",\n            duration: 250\n        },\n        computed: {\n            children: ({ target: target }, $el)=>$$(`${target} > *`, $el),\n            toggles: ({ attrItem: attrItem }, $el)=>$$(`[${attrItem}],[data-${attrItem}]`, $el)\n        },\n        watch: {\n            toggles (toggles) {\n                this.updateState();\n                const actives = $$(this.selActive, this.$el);\n                for (const toggle of toggles){\n                    if (this.selActive !== false) toggleClass(toggle, this.cls, includes(actives, toggle));\n                    const button = findButton(toggle);\n                    if (isTag(button, \"a\")) attr(button, \"role\", \"button\");\n                }\n            },\n            children (list, prev) {\n                if (prev) this.updateState();\n            }\n        },\n        events: {\n            name: \"click keydown\",\n            delegate () {\n                return `[${this.attrItem}],[data-${this.attrItem}]`;\n            },\n            handler (e) {\n                if (e.type === \"keydown\" && e.keyCode !== keyMap.SPACE) return;\n                if (e.target.closest(\"a,button\")) {\n                    e.preventDefault();\n                    this.apply(e.current);\n                }\n            }\n        },\n        methods: {\n            apply (el) {\n                const prevState = this.getState();\n                const newState = mergeState(el, this.attrItem, this.getState());\n                if (!isEqualState(prevState, newState)) this.setState(newState);\n            },\n            getState () {\n                return this.toggles.filter((item)=>hasClass(item, this.cls)).reduce((state, el)=>mergeState(el, this.attrItem, state), {\n                    filter: {\n                        \"\": \"\"\n                    },\n                    sort: []\n                });\n            },\n            async setState (state, animate = true) {\n                state = {\n                    filter: {\n                        \"\": \"\"\n                    },\n                    sort: [],\n                    ...state\n                };\n                trigger(this.$el, \"beforeFilter\", [\n                    this,\n                    state\n                ]);\n                for (const toggle of this.toggles)toggleClass(toggle, this.cls, matchFilter(toggle, this.attrItem, state));\n                await Promise.all($$(this.target, this.$el).map((target)=>{\n                    const filterFn = ()=>{\n                        applyState(state, target, children(target));\n                        this.$update(this.$el);\n                    };\n                    return animate ? this.animate(filterFn, target) : filterFn();\n                }));\n                trigger(this.$el, \"afterFilter\", [\n                    this\n                ]);\n            },\n            updateState () {\n                fastdom.write(()=>this.setState(this.getState(), false));\n            }\n        }\n    };\n    function getFilter(el, attr2) {\n        return parseOptions(data(el, attr2), [\n            \"filter\"\n        ]);\n    }\n    function isEqualState(stateA, stateB) {\n        return [\n            \"filter\",\n            \"sort\"\n        ].every((prop)=>isEqual(stateA[prop], stateB[prop]));\n    }\n    function applyState(state, target, children) {\n        const selector = getSelector(state);\n        children.forEach((el)=>css(el, \"display\", selector && !matches(el, selector) ? \"none\" : \"\"));\n        const [sort, order] = state.sort;\n        if (sort) {\n            const sorted = sortItems(children, sort, order);\n            if (!isEqual(sorted, children)) append(target, sorted);\n        }\n    }\n    function mergeState(el, attr2, state) {\n        const { filter: filter, group: group, sort: sort, order: order = \"asc\" } = getFilter(el, attr2);\n        if (filter || isUndefined(sort)) {\n            if (group) {\n                if (filter) {\n                    delete state.filter[\"\"];\n                    state.filter[group] = filter;\n                } else {\n                    delete state.filter[group];\n                    if (isEmpty(state.filter) || \"\" in state.filter) state.filter = {\n                        \"\": filter || \"\"\n                    };\n                }\n            } else state.filter = {\n                \"\": filter || \"\"\n            };\n        }\n        if (!isUndefined(sort)) state.sort = [\n            sort,\n            order\n        ];\n        return state;\n    }\n    function matchFilter(el, attr2, { filter: stateFilter = {\n        \"\": \"\"\n    }, sort: [stateSort, stateOrder] }) {\n        const { filter: filter = \"\", group: group = \"\", sort: sort, order: order = \"asc\" } = getFilter(el, attr2);\n        return isUndefined(sort) ? group in stateFilter && filter === stateFilter[group] || !filter && group && !(group in stateFilter) && !stateFilter[\"\"] : stateSort === sort && stateOrder === order;\n    }\n    function getSelector({ filter: filter }) {\n        let selector = \"\";\n        each(filter, (value)=>selector += value || \"\");\n        return selector;\n    }\n    function sortItems(nodes, sort, order) {\n        return [\n            ...nodes\n        ].sort((a, b)=>data(a, sort).localeCompare(data(b, sort), void 0, {\n                numeric: true\n            }) * (order === \"asc\" || -1));\n    }\n    function findButton(el) {\n        return $(\"a,button\", el) || el;\n    }\n    var Container = {\n        props: {\n            container: Boolean\n        },\n        data: {\n            container: true\n        },\n        computed: {\n            container ({ container: container }) {\n                return container === true && this.$container || container && $(container);\n            }\n        }\n    };\n    let prevented;\n    function preventBackgroundScroll(el) {\n        const off = on(el, \"touchmove\", (e)=>{\n            if (e.targetTouches.length !== 1 || matches(e.target, 'input[type=\"range\"')) return;\n            let { scrollHeight: scrollHeight, clientHeight: clientHeight } = scrollParent(e.target);\n            if (clientHeight >= scrollHeight && e.cancelable) e.preventDefault();\n        }, {\n            passive: false\n        });\n        if (prevented) return off;\n        prevented = true;\n        const { scrollingElement: scrollingElement } = document;\n        css(scrollingElement, {\n            overflowY: CSS.supports(\"overflow\", \"clip\") ? \"clip\" : \"hidden\",\n            touchAction: \"none\",\n            paddingRight: width(window) - scrollingElement.clientWidth || \"\"\n        });\n        return ()=>{\n            prevented = false;\n            off();\n            css(scrollingElement, {\n                overflowY: \"\",\n                touchAction: \"\",\n                paddingRight: \"\"\n            });\n        };\n    }\n    var Togglable = {\n        props: {\n            cls: Boolean,\n            animation: \"list\",\n            duration: Number,\n            velocity: Number,\n            origin: String,\n            transition: String\n        },\n        data: {\n            cls: false,\n            animation: [\n                false\n            ],\n            duration: 200,\n            velocity: 0.2,\n            origin: false,\n            transition: \"ease\",\n            clsEnter: \"uk-togglabe-enter\",\n            clsLeave: \"uk-togglabe-leave\"\n        },\n        computed: {\n            hasAnimation: ({ animation: animation })=>!!animation[0],\n            hasTransition: ({ animation: animation })=>[\n                    \"slide\",\n                    \"reveal\"\n                ].some((transition)=>startsWith(animation[0], transition))\n        },\n        methods: {\n            async toggleElement (targets, toggle, animate) {\n                try {\n                    await Promise.all(toNodes(targets).map((el)=>{\n                        const show = isBoolean(toggle) ? toggle : !this.isToggled(el);\n                        if (!trigger(el, `before${show ? \"show\" : \"hide\"}`, [\n                            this\n                        ])) return Promise.reject();\n                        const promise = (isFunction(animate) ? animate : animate === false || !this.hasAnimation ? toggleInstant : this.hasTransition ? toggleTransition : toggleAnimation)(el, show, this);\n                        const cls = show ? this.clsEnter : this.clsLeave;\n                        addClass(el, cls);\n                        trigger(el, show ? \"show\" : \"hide\", [\n                            this\n                        ]);\n                        const done = ()=>{\n                            removeClass(el, cls);\n                            trigger(el, show ? \"shown\" : \"hidden\", [\n                                this\n                            ]);\n                        };\n                        return promise ? promise.then(done, ()=>{\n                            removeClass(el, cls);\n                            return Promise.reject();\n                        }) : done();\n                    }));\n                    return true;\n                } catch (e) {\n                    return false;\n                }\n            },\n            isToggled (el = this.$el) {\n                el = toNode(el);\n                return hasClass(el, this.clsEnter) ? true : hasClass(el, this.clsLeave) ? false : this.cls ? hasClass(el, this.cls.split(\" \")[0]) : isVisible(el);\n            },\n            _toggle (el, toggled) {\n                if (!el) return;\n                toggled = Boolean(toggled);\n                let changed;\n                if (this.cls) {\n                    changed = includes(this.cls, \" \") || toggled !== hasClass(el, this.cls);\n                    changed && toggleClass(el, this.cls, includes(this.cls, \" \") ? void 0 : toggled);\n                } else {\n                    changed = toggled === el.hidden;\n                    changed && (el.hidden = !toggled);\n                }\n                $$(\"[autofocus]\", el).some((el2)=>isVisible(el2) ? el2.focus() || true : el2.blur());\n                if (changed) trigger(el, \"toggled\", [\n                    toggled,\n                    this\n                ]);\n            }\n        }\n    };\n    function toggleInstant(el, show, { _toggle: _toggle }) {\n        Animation.cancel(el);\n        Transition.cancel(el);\n        return _toggle(el, show);\n    }\n    async function toggleTransition(el, show, { animation: animation, duration: duration, velocity: velocity, transition: transition, _toggle: _toggle }) {\n        var _a;\n        const [mode = \"reveal\", startProp = \"top\"] = ((_a = animation[0]) == null ? void 0 : _a.split(\"-\")) || [];\n        const dirs = [\n            [\n                \"left\",\n                \"right\"\n            ],\n            [\n                \"top\",\n                \"bottom\"\n            ]\n        ];\n        const dir = dirs[includes(dirs[0], startProp) ? 0 : 1];\n        const end = dir[1] === startProp;\n        const props = [\n            \"width\",\n            \"height\"\n        ];\n        const dimProp = props[dirs.indexOf(dir)];\n        const marginProp = `margin-${dir[0]}`;\n        const marginStartProp = `margin-${startProp}`;\n        let currentDim = dimensions$1(el)[dimProp];\n        const inProgress = Transition.inProgress(el);\n        await Transition.cancel(el);\n        if (show) _toggle(el, true);\n        const prevProps = Object.fromEntries([\n            \"padding\",\n            \"border\",\n            \"width\",\n            \"height\",\n            \"minWidth\",\n            \"minHeight\",\n            \"overflowY\",\n            \"overflowX\",\n            marginProp,\n            marginStartProp\n        ].map((key)=>[\n                key,\n                el.style[key]\n            ]));\n        const dim = dimensions$1(el);\n        const currentMargin = toFloat(css(el, marginProp));\n        const marginStart = toFloat(css(el, marginStartProp));\n        const endDim = dim[dimProp] + marginStart;\n        if (!inProgress && !show) currentDim += marginStart;\n        const [wrapper] = wrapInner(el, \"<div>\");\n        css(wrapper, {\n            boxSizing: \"border-box\",\n            height: dim.height,\n            width: dim.width,\n            ...css(el, [\n                \"overflow\",\n                \"padding\",\n                \"borderTop\",\n                \"borderRight\",\n                \"borderBottom\",\n                \"borderLeft\",\n                \"borderImage\",\n                marginStartProp\n            ])\n        });\n        css(el, {\n            padding: 0,\n            border: 0,\n            minWidth: 0,\n            minHeight: 0,\n            [marginStartProp]: 0,\n            width: dim.width,\n            height: dim.height,\n            overflow: \"hidden\",\n            [dimProp]: currentDim\n        });\n        const percent = currentDim / endDim;\n        duration = (velocity * endDim + duration) * (show ? 1 - percent : percent);\n        const endProps = {\n            [dimProp]: show ? endDim : 0\n        };\n        if (end) {\n            css(el, marginProp, endDim - currentDim + currentMargin);\n            endProps[marginProp] = show ? currentMargin : endDim + currentMargin;\n        }\n        if (!end ^ mode === \"reveal\") {\n            css(wrapper, marginProp, -endDim + currentDim);\n            Transition.start(wrapper, {\n                [marginProp]: show ? 0 : -endDim\n            }, duration, transition);\n        }\n        try {\n            await Transition.start(el, endProps, duration, transition);\n        } finally{\n            css(el, prevProps);\n            unwrap(wrapper.firstChild);\n            if (!show) _toggle(el, false);\n        }\n    }\n    function toggleAnimation(el, show, cmp) {\n        const { animation: animation, duration: duration, _toggle: _toggle } = cmp;\n        if (show) {\n            _toggle(el, true);\n            return Animation.in(el, animation[0], duration, cmp.origin);\n        }\n        return Animation.out(el, animation[1] || animation[0], duration, cmp.origin).then(()=>_toggle(el, false));\n    }\n    const active$1 = [];\n    var Modal = {\n        mixins: [\n            Class,\n            Container,\n            Togglable\n        ],\n        props: {\n            selPanel: String,\n            selClose: String,\n            escClose: Boolean,\n            bgClose: Boolean,\n            stack: Boolean,\n            role: String\n        },\n        data: {\n            cls: \"uk-open\",\n            escClose: true,\n            bgClose: true,\n            overlay: true,\n            stack: false,\n            role: \"dialog\"\n        },\n        computed: {\n            panel: ({ selPanel: selPanel }, $el)=>$(selPanel, $el),\n            transitionElement () {\n                return this.panel;\n            },\n            bgClose ({ bgClose: bgClose }) {\n                return bgClose && this.panel;\n            }\n        },\n        connected () {\n            attr(this.panel || this.$el, \"role\", this.role);\n            if (this.overlay) attr(this.panel || this.$el, \"aria-modal\", true);\n        },\n        beforeDisconnect () {\n            if (includes(active$1, this)) this.toggleElement(this.$el, false, false);\n        },\n        events: [\n            {\n                name: \"click\",\n                delegate () {\n                    return `${this.selClose},a[href*=\"#\"]`;\n                },\n                handler (e) {\n                    const { current: current, defaultPrevented: defaultPrevented } = e;\n                    const { hash: hash } = current;\n                    if (!defaultPrevented && hash && isSameSiteAnchor(current) && !this.$el.contains($(hash))) this.hide();\n                    else if (matches(current, this.selClose)) {\n                        e.preventDefault();\n                        this.hide();\n                    }\n                }\n            },\n            {\n                name: \"toggle\",\n                self: true,\n                handler (e) {\n                    if (e.defaultPrevented) return;\n                    e.preventDefault();\n                    if (this.isToggled() === includes(active$1, this)) this.toggle();\n                }\n            },\n            {\n                name: \"beforeshow\",\n                self: true,\n                handler (e) {\n                    if (includes(active$1, this)) return false;\n                    if (!this.stack && active$1.length) {\n                        Promise.all(active$1.map((modal)=>modal.hide())).then(this.show);\n                        e.preventDefault();\n                    } else active$1.push(this);\n                }\n            },\n            {\n                name: \"show\",\n                self: true,\n                handler () {\n                    if (this.stack) css(this.$el, \"zIndex\", toFloat(css(this.$el, \"zIndex\")) + active$1.length);\n                    const handlers = [\n                        this.overlay && preventBackgroundFocus(this),\n                        this.overlay && preventBackgroundScroll(this.$el),\n                        this.bgClose && listenForBackgroundClose$1(this),\n                        this.escClose && listenForEscClose$1(this)\n                    ];\n                    once(this.$el, \"hidden\", ()=>handlers.forEach((handler)=>handler && handler()), {\n                        self: true\n                    });\n                    addClass(document.documentElement, this.clsPage);\n                }\n            },\n            {\n                name: \"shown\",\n                self: true,\n                handler () {\n                    if (!isFocusable(this.$el)) attr(this.$el, \"tabindex\", \"-1\");\n                    if (!matches(this.$el, \":focus-within\")) this.$el.focus();\n                }\n            },\n            {\n                name: \"hidden\",\n                self: true,\n                handler () {\n                    if (includes(active$1, this)) active$1.splice(active$1.indexOf(this), 1);\n                    css(this.$el, \"zIndex\", \"\");\n                    if (!active$1.some((modal)=>modal.clsPage === this.clsPage)) removeClass(document.documentElement, this.clsPage);\n                }\n            }\n        ],\n        methods: {\n            toggle () {\n                return this.isToggled() ? this.hide() : this.show();\n            },\n            show () {\n                if (this.container && parent(this.$el) !== this.container) {\n                    append(this.container, this.$el);\n                    return new Promise((resolve)=>requestAnimationFrame(()=>this.show().then(resolve)));\n                }\n                return this.toggleElement(this.$el, true, animate$1);\n            },\n            hide () {\n                return this.toggleElement(this.$el, false, animate$1);\n            }\n        }\n    };\n    function animate$1(el, show, { transitionElement: transitionElement, _toggle: _toggle }) {\n        return new Promise((resolve, reject)=>once(el, \"show hide\", ()=>{\n                var _a;\n                (_a = el._reject) == null || _a.call(el);\n                el._reject = reject;\n                _toggle(el, show);\n                const off = once(transitionElement, \"transitionstart\", ()=>{\n                    once(transitionElement, \"transitionend transitioncancel\", resolve, {\n                        self: true\n                    });\n                    clearTimeout(timer);\n                }, {\n                    self: true\n                });\n                const timer = setTimeout(()=>{\n                    off();\n                    resolve();\n                }, toMs(css(transitionElement, \"transitionDuration\")));\n            })).then(()=>delete el._reject);\n    }\n    function toMs(time) {\n        return time ? endsWith(time, \"ms\") ? toFloat(time) : toFloat(time) * 1e3 : 0;\n    }\n    function preventBackgroundFocus(modal) {\n        return on(document, \"focusin\", (e)=>{\n            if (last(active$1) === modal && !modal.$el.contains(e.target)) modal.$el.focus();\n        });\n    }\n    function listenForBackgroundClose$1(modal) {\n        return on(document, pointerDown$1, ({ target: target })=>{\n            if (last(active$1) !== modal || modal.overlay && !modal.$el.contains(target) || modal.panel.contains(target)) return;\n            once(document, `${pointerUp$1} ${pointerCancel} scroll`, ({ defaultPrevented: defaultPrevented, type: type, target: newTarget })=>{\n                if (!defaultPrevented && type === pointerUp$1 && target === newTarget) modal.hide();\n            }, true);\n        });\n    }\n    function listenForEscClose$1(modal) {\n        return on(document, \"keydown\", (e)=>{\n            if (e.keyCode === 27 && last(active$1) === modal) modal.hide();\n        });\n    }\n    var Animations$2 = {\n        slide: {\n            show (dir) {\n                return [\n                    {\n                        transform: translate(dir * -100)\n                    },\n                    {\n                        transform: translate()\n                    }\n                ];\n            },\n            percent (current) {\n                return translated(current);\n            },\n            translate (percent, dir) {\n                return [\n                    {\n                        transform: translate(dir * -100 * percent)\n                    },\n                    {\n                        transform: translate(dir * 100 * (1 - percent))\n                    }\n                ];\n            }\n        }\n    };\n    function translated(el) {\n        return Math.abs(css(el, \"transform\").split(\",\")[4] / el.offsetWidth);\n    }\n    function translate(value = 0, unit = \"%\") {\n        value += value ? unit : \"\";\n        return `translate3d(${value}, 0, 0)`;\n    }\n    function scale3d(value) {\n        return `scale3d(${value}, ${value}, 1)`;\n    }\n    function Transitioner$1(prev, next, dir, { animation: animation, easing: easing }) {\n        const { percent: percent, translate: translate, show: show = noop } = animation;\n        const props = show(dir);\n        let resolve;\n        return {\n            dir: dir,\n            show (duration, percent2 = 0, linear) {\n                const timing = linear ? \"linear\" : easing;\n                duration -= Math.round(duration * clamp(percent2, -1, 1));\n                this.translate(percent2);\n                triggerUpdate$1(next, \"itemin\", {\n                    percent: percent2,\n                    duration: duration,\n                    timing: timing,\n                    dir: dir\n                });\n                triggerUpdate$1(prev, \"itemout\", {\n                    percent: 1 - percent2,\n                    duration: duration,\n                    timing: timing,\n                    dir: dir\n                });\n                return new Promise((res)=>{\n                    resolve || (resolve = res);\n                    Promise.all([\n                        Transition.start(next, props[1], duration, timing),\n                        Transition.start(prev, props[0], duration, timing)\n                    ]).then(()=>{\n                        this.reset();\n                        resolve();\n                    }, noop);\n                });\n            },\n            cancel () {\n                return Transition.cancel([\n                    next,\n                    prev\n                ]);\n            },\n            reset () {\n                for(const prop in props[0])css([\n                    next,\n                    prev\n                ], prop, \"\");\n            },\n            async forward (duration, percent2 = this.percent()) {\n                await this.cancel();\n                return this.show(duration, percent2, true);\n            },\n            translate (percent2) {\n                this.reset();\n                const props2 = translate(percent2, dir);\n                css(next, props2[1]);\n                css(prev, props2[0]);\n                triggerUpdate$1(next, \"itemtranslatein\", {\n                    percent: percent2,\n                    dir: dir\n                });\n                triggerUpdate$1(prev, \"itemtranslateout\", {\n                    percent: 1 - percent2,\n                    dir: dir\n                });\n            },\n            percent () {\n                return percent(prev || next, next, dir);\n            },\n            getDistance () {\n                return prev == null ? void 0 : prev.offsetWidth;\n            }\n        };\n    }\n    function triggerUpdate$1(el, type, data) {\n        trigger(el, createEvent(type, false, false, data));\n    }\n    var I18n = {\n        props: {\n            i18n: Object\n        },\n        data: {\n            i18n: null\n        },\n        methods: {\n            t (key, ...params) {\n                var _a, _b, _c;\n                let i = 0;\n                return ((_c = ((_a = this.i18n) == null ? void 0 : _a[key]) || ((_b = this.$options.i18n) == null ? void 0 : _b[key])) == null ? void 0 : _c.replace(/%s/g, ()=>params[i++] || \"\")) || \"\";\n            }\n        }\n    };\n    var SliderAutoplay = {\n        props: {\n            autoplay: Boolean,\n            autoplayInterval: Number,\n            pauseOnHover: Boolean\n        },\n        data: {\n            autoplay: false,\n            autoplayInterval: 7e3,\n            pauseOnHover: true\n        },\n        connected () {\n            attr(this.list, \"aria-live\", this.autoplay ? \"off\" : \"polite\");\n            this.autoplay && this.startAutoplay();\n        },\n        disconnected () {\n            this.stopAutoplay();\n        },\n        update () {\n            attr(this.slides, \"tabindex\", \"-1\");\n        },\n        events: [\n            {\n                name: \"visibilitychange\",\n                el () {\n                    return document;\n                },\n                filter () {\n                    return this.autoplay;\n                },\n                handler () {\n                    if (document.hidden) this.stopAutoplay();\n                    else this.startAutoplay();\n                }\n            }\n        ],\n        methods: {\n            startAutoplay () {\n                this.stopAutoplay();\n                this.interval = setInterval(()=>{\n                    if (!(this.stack.length || this.draggable && matches(this.$el, \":focus-within\") || this.pauseOnHover && matches(this.$el, \":hover\"))) this.show(\"next\");\n                }, this.autoplayInterval);\n            },\n            stopAutoplay () {\n                clearInterval(this.interval);\n            }\n        }\n    };\n    const pointerOptions = {\n        passive: false,\n        capture: true\n    };\n    const pointerUpOptions = {\n        passive: true,\n        capture: true\n    };\n    const pointerDown = \"touchstart mousedown\";\n    const pointerMove = \"touchmove mousemove\";\n    const pointerUp = \"touchend touchcancel mouseup click input scroll\";\n    var SliderDrag = {\n        props: {\n            draggable: Boolean\n        },\n        data: {\n            draggable: true,\n            threshold: 10\n        },\n        created () {\n            for (const key of [\n                \"start\",\n                \"move\",\n                \"end\"\n            ]){\n                const fn = this[key];\n                this[key] = (e)=>{\n                    const pos = getEventPos(e).x * (isRtl ? -1 : 1);\n                    this.prevPos = pos === this.pos ? this.prevPos : this.pos;\n                    this.pos = pos;\n                    fn(e);\n                };\n            }\n        },\n        events: [\n            {\n                name: pointerDown,\n                passive: true,\n                delegate () {\n                    return `${this.selList} > *`;\n                },\n                handler (e) {\n                    if (!this.draggable || !isTouch(e) && hasSelectableText(e.target) || e.target.closest(selInput) || e.button > 0 || this.length < 2) return;\n                    this.start(e);\n                }\n            },\n            {\n                name: \"dragstart\",\n                handler (e) {\n                    e.preventDefault();\n                }\n            },\n            {\n                // iOS workaround for slider stopping if swiping fast\n                name: pointerMove,\n                el () {\n                    return this.list;\n                },\n                handler: noop,\n                ...pointerOptions\n            }\n        ],\n        methods: {\n            start () {\n                this.drag = this.pos;\n                if (this._transitioner) {\n                    this.percent = this._transitioner.percent();\n                    this.drag += this._transitioner.getDistance() * this.percent * this.dir;\n                    this._transitioner.cancel();\n                    this._transitioner.translate(this.percent);\n                    this.dragging = true;\n                    this.stack = [];\n                } else this.prevIndex = this.index;\n                on(document, pointerMove, this.move, pointerOptions);\n                on(document, pointerUp, this.end, pointerUpOptions);\n                css(this.list, \"userSelect\", \"none\");\n            },\n            move (e) {\n                const distance = this.pos - this.drag;\n                if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) return;\n                css(this.list, \"pointerEvents\", \"none\");\n                e.cancelable && e.preventDefault();\n                this.dragging = true;\n                this.dir = distance < 0 ? 1 : -1;\n                let { slides: slides, prevIndex: prevIndex } = this;\n                let dis = Math.abs(distance);\n                let nextIndex = this.getIndex(prevIndex + this.dir);\n                let width = this._getDistance(prevIndex, nextIndex);\n                while(nextIndex !== prevIndex && dis > width){\n                    this.drag -= width * this.dir;\n                    prevIndex = nextIndex;\n                    dis -= width;\n                    nextIndex = this.getIndex(prevIndex + this.dir);\n                    width = this._getDistance(prevIndex, nextIndex);\n                }\n                this.percent = dis / width;\n                const prev = slides[prevIndex];\n                const next = slides[nextIndex];\n                const changed = this.index !== nextIndex;\n                const edge = prevIndex === nextIndex;\n                let itemShown;\n                for (const i of [\n                    this.index,\n                    this.prevIndex\n                ])if (!includes([\n                    nextIndex,\n                    prevIndex\n                ], i)) {\n                    trigger(slides[i], \"itemhidden\", [\n                        this\n                    ]);\n                    if (edge) {\n                        itemShown = true;\n                        this.prevIndex = prevIndex;\n                    }\n                }\n                if (this.index === prevIndex && this.prevIndex !== prevIndex || itemShown) trigger(slides[this.index], \"itemshown\", [\n                    this\n                ]);\n                if (changed) {\n                    this.prevIndex = prevIndex;\n                    this.index = nextIndex;\n                    !edge && trigger(prev, \"beforeitemhide\", [\n                        this\n                    ]);\n                    trigger(next, \"beforeitemshow\", [\n                        this\n                    ]);\n                }\n                this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\n                if (changed) {\n                    !edge && trigger(prev, \"itemhide\", [\n                        this\n                    ]);\n                    trigger(next, \"itemshow\", [\n                        this\n                    ]);\n                }\n            },\n            end () {\n                off(document, pointerMove, this.move, pointerOptions);\n                off(document, pointerUp, this.end, pointerUpOptions);\n                if (this.dragging) {\n                    this.dragging = null;\n                    if (this.index === this.prevIndex) {\n                        this.percent = 1 - this.percent;\n                        this.dir *= -1;\n                        this._show(false, this.index, true);\n                        this._transitioner = null;\n                    } else {\n                        const dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\n                        this.index = dirChange ? this.index : this.prevIndex;\n                        if (dirChange) this.percent = 1 - this.percent;\n                        this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? \"next\" : \"previous\", true);\n                    }\n                }\n                css(this.list, {\n                    userSelect: \"\",\n                    pointerEvents: \"\"\n                });\n                this.drag = this.percent = null;\n            },\n            _getDistance (prev, next) {\n                return this._getTransitioner(prev, prev !== next && next).getDistance() || this.slides[prev].offsetWidth;\n            }\n        }\n    };\n    function hasSelectableText(el) {\n        return css(el, \"userSelect\") !== \"none\" && toArray(el.childNodes).some((el2)=>el2.nodeType === 3 && el2.textContent.trim());\n    }\n    function initWatches(instance) {\n        instance._watches = [];\n        for (const watches of instance.$options.watch || [])for (const [name, watch] of Object.entries(watches))registerWatch(instance, watch, name);\n        instance._initial = true;\n    }\n    function registerWatch(instance, watch, name) {\n        instance._watches.push({\n            name: name,\n            ...isPlainObject(watch) ? watch : {\n                handler: watch\n            }\n        });\n    }\n    function runWatches(instance, values) {\n        for (const { name: name, handler: handler, immediate: immediate = true } of instance._watches)if (instance._initial && immediate || hasOwn(values, name) && !isEqual(values[name], instance[name])) handler.call(instance, instance[name], values[name]);\n        instance._initial = false;\n    }\n    function initComputed(instance) {\n        const { computed: computed } = instance.$options;\n        instance._computed = {};\n        if (computed) for(const key in computed)registerComputed(instance, key, computed[key]);\n    }\n    function registerComputed(instance, key, cb) {\n        instance._hasComputed = true;\n        Object.defineProperty(instance, key, {\n            enumerable: true,\n            get () {\n                const { _computed: _computed, $props: $props, $el: $el } = instance;\n                if (!hasOwn(_computed, key)) _computed[key] = (cb.get || cb).call(instance, $props, $el);\n                return _computed[key];\n            },\n            set (value) {\n                const { _computed: _computed } = instance;\n                _computed[key] = cb.set ? cb.set.call(instance, value) : value;\n                if (isUndefined(_computed[key])) delete _computed[key];\n            }\n        });\n    }\n    function initComputedUpdates(instance) {\n        if (!instance._hasComputed) return;\n        prependUpdate(instance, {\n            read: ()=>runWatches(instance, resetComputed(instance)),\n            events: [\n                \"resize\",\n                \"computed\"\n            ]\n        });\n        registerComputedObserver();\n        instances$1.add(instance);\n    }\n    function disconnectComputedUpdates(instance) {\n        instances$1 == null || instances$1.delete(instance);\n        resetComputed(instance);\n    }\n    function resetComputed(instance) {\n        const values = {\n            ...instance._computed\n        };\n        instance._computed = {};\n        return values;\n    }\n    let observer;\n    let instances$1;\n    function registerComputedObserver() {\n        if (observer) return;\n        instances$1 = /* @__PURE__ */ new Set();\n        observer = new MutationObserver(()=>{\n            for (const instance of instances$1)callUpdate(instance, \"computed\");\n        });\n        observer.observe(document, {\n            subtree: true,\n            childList: true\n        });\n    }\n    function initEvents(instance) {\n        instance._events = [];\n        for (const event of instance.$options.events || []){\n            if (hasOwn(event, \"handler\")) registerEvent(instance, event);\n            else for(const key in event)registerEvent(instance, event[key], key);\n        }\n    }\n    function unbindEvents(instance) {\n        instance._events.forEach((unbind)=>unbind());\n        delete instance._events;\n    }\n    function registerEvent(instance, event, key) {\n        let { name: name, el: el, handler: handler, capture: capture, passive: passive, delegate: delegate, filter: filter, self: self } = isPlainObject(event) ? event : {\n            name: key,\n            handler: event\n        };\n        el = isFunction(el) ? el.call(instance, instance) : el || instance.$el;\n        if (!el || isArray(el) && !el.length || filter && !filter.call(instance)) return;\n        instance._events.push(on(el, name, delegate ? isString(delegate) ? delegate : delegate.call(instance, instance) : null, isString(handler) ? instance[handler] : handler.bind(instance), {\n            passive: passive,\n            capture: capture,\n            self: self\n        }));\n    }\n    function initObservers(instance) {\n        instance._observers = [];\n        for (const observer of instance.$options.observe || []){\n            if (hasOwn(observer, \"handler\")) registerObservable(instance, observer);\n            else for (const observable of observer)registerObservable(instance, observable);\n        }\n    }\n    function registerObserver(instance, ...observer) {\n        instance._observers.push(...observer);\n    }\n    function disconnectObservers(instance) {\n        for (const observer of instance._observers)observer.disconnect();\n    }\n    function registerObservable(instance, observable) {\n        let { observe: observe, target: target = instance.$el, handler: handler, options: options, filter: filter, args: args } = observable;\n        if (filter && !filter.call(instance, instance)) return;\n        const key = `_observe${instance._observers.length}`;\n        if (isFunction(target) && !hasOwn(instance, key)) registerComputed(instance, key, ()=>target.call(instance, instance));\n        handler = isString(handler) ? instance[handler] : handler.bind(instance);\n        if (isFunction(options)) options = options.call(instance, instance);\n        const targets = hasOwn(instance, key) ? instance[key] : target;\n        const observer = observe(targets, handler, options, args);\n        if (isFunction(target) && isArray(instance[key]) && observer.unobserve) registerWatch(instance, {\n            handler: updateTargets(observer),\n            immediate: false\n        }, key);\n        registerObserver(instance, observer);\n    }\n    function updateTargets(observer) {\n        return (targets, prev)=>{\n            for (const target of prev)!includes(targets, target) && observer.unobserve(target);\n            for (const target of targets)!includes(prev, target) && observer.observe(target);\n        };\n    }\n    function initProps(instance) {\n        const { $options: $options, $props: $props } = instance;\n        const props = getProps($options);\n        assign($props, props);\n        const { computed: computed, methods: methods } = $options;\n        for(let key in $props)if (key in props && (!computed || !hasOwn(computed, key)) && (!methods || !hasOwn(methods, key))) instance[key] = $props[key];\n    }\n    function getProps(opts) {\n        const data$1 = {};\n        const { args: args = [], props: props = {}, el: el, id: id } = opts;\n        if (!props) return data$1;\n        for(const key in props){\n            const prop = hyphenate(key);\n            let value = data(el, prop);\n            if (isUndefined(value)) continue;\n            value = props[key] === Boolean && value === \"\" ? true : coerce$1(props[key], value);\n            if (prop === \"target\" && startsWith(value, \"_\")) continue;\n            data$1[key] = value;\n        }\n        const options = parseOptions(data(el, id), args);\n        for(const key in options){\n            const prop = camelize(key);\n            if (!isUndefined(props[prop])) data$1[prop] = coerce$1(props[prop], options[key]);\n        }\n        return data$1;\n    }\n    const getAttributes = memoize((id, props)=>{\n        const attributes = Object.keys(props);\n        const filter = attributes.concat(id).map((key)=>[\n                hyphenate(key),\n                `data-${hyphenate(key)}`\n            ]).flat();\n        return {\n            attributes: attributes,\n            filter: filter\n        };\n    });\n    function initPropsObserver(instance) {\n        const { $options: $options, $props: $props } = instance;\n        const { id: id, props: props, el: el } = $options;\n        if (!props) return;\n        const { attributes: attributes, filter: filter } = getAttributes(id, props);\n        const observer = new MutationObserver((records)=>{\n            const data = getProps($options);\n            if (records.some(({ attributeName: attributeName })=>{\n                const prop = attributeName.replace(\"data-\", \"\");\n                return (prop === id ? attributes : [\n                    camelize(prop),\n                    camelize(attributeName)\n                ]).some((prop2)=>!isUndefined(data[prop2]) && data[prop2] !== $props[prop2]);\n            })) instance.$reset();\n        });\n        observer.observe(el, {\n            attributes: true,\n            attributeFilter: filter\n        });\n        registerObserver(instance, observer);\n    }\n    function callHook(instance, hook) {\n        var _a;\n        (_a = instance.$options[hook]) == null || _a.forEach((handler)=>handler.call(instance));\n    }\n    function callConnected(instance) {\n        if (instance._connected) return;\n        initProps(instance);\n        callHook(instance, \"beforeConnect\");\n        instance._connected = true;\n        initEvents(instance);\n        initUpdates(instance);\n        initWatches(instance);\n        initObservers(instance);\n        initPropsObserver(instance);\n        initComputedUpdates(instance);\n        callHook(instance, \"connected\");\n        callUpdate(instance);\n    }\n    function callDisconnected(instance) {\n        if (!instance._connected) return;\n        callHook(instance, \"beforeDisconnect\");\n        unbindEvents(instance);\n        clearUpdateData(instance);\n        disconnectObservers(instance);\n        disconnectComputedUpdates(instance);\n        callHook(instance, \"disconnected\");\n        instance._connected = false;\n    }\n    let uid = 0;\n    function init$1(instance, options = {}) {\n        options.data = normalizeData(options, instance.constructor.options);\n        instance.$options = mergeOptions(instance.constructor.options, options, instance);\n        instance.$props = {};\n        instance._uid = uid++;\n        initData(instance);\n        initMethods(instance);\n        initComputed(instance);\n        callHook(instance, \"created\");\n        if (options.el) instance.$mount(options.el);\n    }\n    function initData(instance) {\n        const { data: data = {} } = instance.$options;\n        for(const key in data)instance.$props[key] = instance[key] = data[key];\n    }\n    function initMethods(instance) {\n        const { methods: methods } = instance.$options;\n        if (methods) for(const key in methods)instance[key] = methods[key].bind(instance);\n    }\n    function normalizeData({ data: data = {} }, { args: args = [], props: props = {} }) {\n        if (isArray(data)) data = data.slice(0, args.length).reduce((data2, value, index)=>{\n            if (isPlainObject(value)) assign(data2, value);\n            else data2[args[index]] = value;\n            return data2;\n        }, {});\n        for(const key in data){\n            if (isUndefined(data[key])) delete data[key];\n            else if (props[key]) data[key] = coerce$1(props[key], data[key]);\n        }\n        return data;\n    }\n    const App = function(options) {\n        init$1(this, options);\n    };\n    App.util = util;\n    App.options = {};\n    App.version = \"3.17.11\";\n    const PREFIX = \"uk-\";\n    const DATA = \"__uikit__\";\n    const components$2 = {};\n    function component(name, options) {\n        var _a;\n        const id = PREFIX + hyphenate(name);\n        if (!options) {\n            if (isPlainObject(components$2[id])) components$2[id] = App.extend(components$2[id]);\n            return components$2[id];\n        }\n        name = camelize(name);\n        App[name] = (element, data)=>createComponent(name, element, data);\n        const opt = isPlainObject(options) ? {\n            ...options\n        } : options.options;\n        opt.id = id;\n        opt.name = name;\n        (_a = opt.install) == null || _a.call(opt, App, opt, name);\n        if (App._initialized && !opt.functional) requestAnimationFrame(()=>createComponent(name, `[${id}],[data-${id}]`));\n        return components$2[id] = opt;\n    }\n    function createComponent(name, element, data, ...args) {\n        const Component = component(name);\n        return Component.options.functional ? new Component({\n            data: isPlainObject(element) ? element : [\n                element,\n                data,\n                ...args\n            ]\n        }) : element ? $$(element).map(init)[0] : init();\n        function init(element2) {\n            const instance = getComponent(element2, name);\n            if (instance) {\n                if (data) instance.$destroy();\n                else return instance;\n            }\n            return new Component({\n                el: element2,\n                data: data\n            });\n        }\n    }\n    function getComponents(element) {\n        return (element == null ? void 0 : element[DATA]) || {};\n    }\n    function getComponent(element, name) {\n        return getComponents(element)[name];\n    }\n    function attachToElement(element, instance) {\n        if (!element[DATA]) element[DATA] = {};\n        element[DATA][instance.$options.name] = instance;\n    }\n    function detachFromElement(element, instance) {\n        var _a;\n        (_a = element[DATA]) == null || delete _a[instance.$options.name];\n        if (!isEmpty(element[DATA])) delete element[DATA];\n    }\n    function globalApi(App) {\n        App.component = component;\n        App.getComponents = getComponents;\n        App.getComponent = getComponent;\n        App.update = update;\n        App.use = function(plugin) {\n            if (plugin.installed) return;\n            plugin.call(null, this);\n            plugin.installed = true;\n            return this;\n        };\n        App.mixin = function(mixin, component2) {\n            component2 = (isString(component2) ? this.component(component2) : component2) || this;\n            component2.options = mergeOptions(component2.options, mixin);\n        };\n        App.extend = function(options) {\n            options || (options = {});\n            const Super = this;\n            const Sub = function UIkitComponent(options2) {\n                init$1(this, options2);\n            };\n            Sub.prototype = Object.create(Super.prototype);\n            Sub.prototype.constructor = Sub;\n            Sub.options = mergeOptions(Super.options, options);\n            Sub.super = Super;\n            Sub.extend = Super.extend;\n            return Sub;\n        };\n        let container;\n        Object.defineProperty(App, \"container\", {\n            get () {\n                return container || document.body;\n            },\n            set (element) {\n                container = $(element);\n            }\n        });\n    }\n    function update(element, e) {\n        element = element ? toNode(element) : document.body;\n        for (const parentEl of parents(element).reverse())updateElement(parentEl, e);\n        apply(element, (element2)=>updateElement(element2, e));\n    }\n    function updateElement(element, e) {\n        const components = getComponents(element);\n        for(const name in components)callUpdate(components[name], e);\n    }\n    function instanceApi(App) {\n        App.prototype.$mount = function(el) {\n            const instance = this;\n            attachToElement(el, instance);\n            instance.$options.el = el;\n            if (document.contains(el)) callConnected(instance);\n        };\n        App.prototype.$destroy = function(removeEl = false) {\n            const instance = this;\n            const { el: el } = instance.$options;\n            if (el) callDisconnected(instance);\n            callHook(instance, \"destroy\");\n            detachFromElement(el, instance);\n            if (removeEl) remove$1(instance.$el);\n        };\n        App.prototype.$create = createComponent;\n        App.prototype.$emit = function(e) {\n            callUpdate(this, e);\n        };\n        App.prototype.$update = function(element = this.$el, e) {\n            update(element, e);\n        };\n        App.prototype.$reset = function() {\n            callDisconnected(this);\n            callConnected(this);\n        };\n        App.prototype.$getComponent = getComponent;\n        Object.defineProperties(App.prototype, {\n            $el: {\n                get () {\n                    return this.$options.el;\n                }\n            },\n            $container: Object.getOwnPropertyDescriptor(App, \"container\")\n        });\n    }\n    let id = 1;\n    function generateId(instance, el = null) {\n        return (el == null ? void 0 : el.id) || `${instance.$options.id}-${id++}`;\n    }\n    var SliderNav = {\n        i18n: {\n            next: \"Next slide\",\n            previous: \"Previous slide\",\n            slideX: \"Slide %s\",\n            slideLabel: \"%s of %s\",\n            role: \"String\"\n        },\n        data: {\n            selNav: false,\n            role: \"region\"\n        },\n        computed: {\n            nav: ({ selNav: selNav }, $el)=>$(selNav, $el),\n            navChildren () {\n                return children(this.nav);\n            },\n            selNavItem: ({ attrItem: attrItem })=>`[${attrItem}],[data-${attrItem}]`,\n            navItems (_, $el) {\n                return $$(this.selNavItem, $el);\n            }\n        },\n        watch: {\n            nav (nav, prev) {\n                attr(nav, \"role\", \"tablist\");\n                if (prev) this.$emit();\n            },\n            list (list) {\n                attr(list, \"role\", \"presentation\");\n            },\n            navChildren (children2) {\n                attr(children2, \"role\", \"presentation\");\n            },\n            navItems (items) {\n                for (const el of items){\n                    const cmd = data(el, this.attrItem);\n                    const button = $(\"a,button\", el) || el;\n                    let ariaLabel;\n                    let ariaControls = null;\n                    if (isNumeric(cmd)) {\n                        const item = toNumber(cmd);\n                        const slide = this.slides[item];\n                        if (slide) {\n                            if (!slide.id) slide.id = generateId(this, slide);\n                            ariaControls = slide.id;\n                        }\n                        ariaLabel = this.t(\"slideX\", toFloat(cmd) + 1);\n                        attr(button, \"role\", \"tab\");\n                    } else {\n                        if (this.list) {\n                            if (!this.list.id) this.list.id = generateId(this, this.list);\n                            ariaControls = this.list.id;\n                        }\n                        ariaLabel = this.t(cmd);\n                    }\n                    attr(button, {\n                        \"aria-controls\": ariaControls,\n                        \"aria-label\": attr(button, \"aria-label\") || ariaLabel\n                    });\n                }\n            },\n            slides (slides) {\n                slides.forEach((slide, i)=>attr(slide, {\n                        role: this.nav ? \"tabpanel\" : \"group\",\n                        \"aria-label\": this.t(\"slideLabel\", i + 1, this.length),\n                        \"aria-roledescription\": this.nav ? null : \"slide\"\n                    }));\n            },\n            length (length) {\n                const navLength = this.navChildren.length;\n                if (this.nav && length !== navLength) {\n                    empty(this.nav);\n                    for(let i = 0; i < length; i++)append(this.nav, `<li ${this.attrItem}=\"${i}\"><a href></a></li>`);\n                }\n            }\n        },\n        connected () {\n            attr(this.$el, {\n                role: this.role,\n                \"aria-roledescription\": \"carousel\"\n            });\n        },\n        update: [\n            {\n                write () {\n                    this.navItems.concat(this.nav).forEach((el)=>el && (el.hidden = !this.maxIndex));\n                    this.updateNav();\n                },\n                events: [\n                    \"resize\"\n                ]\n            }\n        ],\n        events: [\n            {\n                name: \"click keydown\",\n                delegate () {\n                    return this.selNavItem;\n                },\n                handler (e) {\n                    if (e.target.closest(\"a,button\") && (e.type === \"click\" || e.keyCode === keyMap.SPACE)) {\n                        e.preventDefault();\n                        this.show(data(e.current, this.attrItem));\n                    }\n                }\n            },\n            {\n                name: \"itemshow\",\n                handler: \"updateNav\"\n            },\n            {\n                name: \"keydown\",\n                delegate () {\n                    return this.selNavItem;\n                },\n                handler (e) {\n                    const { current: current, keyCode: keyCode } = e;\n                    const cmd = data(current, this.attrItem);\n                    if (!isNumeric(cmd)) return;\n                    let i = keyCode === keyMap.HOME ? 0 : keyCode === keyMap.END ? \"last\" : keyCode === keyMap.LEFT ? \"previous\" : keyCode === keyMap.RIGHT ? \"next\" : -1;\n                    if (~i) {\n                        e.preventDefault();\n                        this.show(i);\n                    }\n                }\n            }\n        ],\n        methods: {\n            updateNav () {\n                const index = this.getValidIndex();\n                for (const el of this.navItems){\n                    const cmd = data(el, this.attrItem);\n                    const button = $(\"a,button\", el) || el;\n                    if (isNumeric(cmd)) {\n                        const item = toNumber(cmd);\n                        const active = item === index;\n                        toggleClass(el, this.clsActive, active);\n                        attr(button, {\n                            \"aria-selected\": active,\n                            tabindex: active ? null : -1\n                        });\n                        if (active && button && matches(parent(el), \":focus-within\")) button.focus();\n                    } else toggleClass(el, \"uk-invisible\", this.finite && (cmd === \"previous\" && index === 0 || cmd === \"next\" && index >= this.maxIndex));\n                }\n            }\n        }\n    };\n    var Slider = {\n        mixins: [\n            SliderAutoplay,\n            SliderDrag,\n            SliderNav,\n            I18n\n        ],\n        props: {\n            clsActivated: Boolean,\n            easing: String,\n            index: Number,\n            finite: Boolean,\n            velocity: Number\n        },\n        data: ()=>({\n                easing: \"ease\",\n                finite: false,\n                velocity: 1,\n                index: 0,\n                prevIndex: -1,\n                stack: [],\n                percent: 0,\n                clsActive: \"uk-active\",\n                clsActivated: false,\n                Transitioner: false,\n                transitionOptions: {}\n            }),\n        connected () {\n            this.prevIndex = -1;\n            this.index = this.getValidIndex(this.$props.index);\n            this.stack = [];\n        },\n        disconnected () {\n            removeClass(this.slides, this.clsActive);\n        },\n        computed: {\n            duration: ({ velocity: velocity }, $el)=>speedUp($el.offsetWidth / velocity),\n            list: ({ selList: selList }, $el)=>$(selList, $el),\n            maxIndex () {\n                return this.length - 1;\n            },\n            slides () {\n                return children(this.list);\n            },\n            length () {\n                return this.slides.length;\n            }\n        },\n        watch: {\n            slides (slides, prev) {\n                if (prev) this.$emit();\n            }\n        },\n        observe: resize(),\n        methods: {\n            show (index, force = false) {\n                var _a;\n                if (this.dragging || !this.length) return;\n                const { stack: stack } = this;\n                const queueIndex = force ? 0 : stack.length;\n                const reset = ()=>{\n                    stack.splice(queueIndex, 1);\n                    if (stack.length) this.show(stack.shift(), true);\n                };\n                stack[force ? \"unshift\" : \"push\"](index);\n                if (!force && stack.length > 1) {\n                    if (stack.length === 2) (_a = this._transitioner) == null || _a.forward(Math.min(this.duration, 200));\n                    return;\n                }\n                const prevIndex = this.getIndex(this.index);\n                const prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\n                const nextIndex = this.getIndex(index, this.index);\n                const next = this.slides[nextIndex];\n                if (prev === next) {\n                    reset();\n                    return;\n                }\n                this.dir = getDirection(index, prevIndex);\n                this.prevIndex = prevIndex;\n                this.index = nextIndex;\n                if (prev && !trigger(prev, \"beforeitemhide\", [\n                    this\n                ]) || !trigger(next, \"beforeitemshow\", [\n                    this,\n                    prev\n                ])) {\n                    this.index = this.prevIndex;\n                    reset();\n                    return;\n                }\n                const promise = this._show(prev, next, force).then(()=>{\n                    prev && trigger(prev, \"itemhidden\", [\n                        this\n                    ]);\n                    trigger(next, \"itemshown\", [\n                        this\n                    ]);\n                    stack.shift();\n                    this._transitioner = null;\n                    requestAnimationFrame(()=>stack.length && this.show(stack.shift(), true));\n                });\n                prev && trigger(prev, \"itemhide\", [\n                    this\n                ]);\n                trigger(next, \"itemshow\", [\n                    this\n                ]);\n                return promise;\n            },\n            getIndex (index = this.index, prev = this.index) {\n                return clamp(getIndex(index, this.slides, prev, this.finite), 0, Math.max(0, this.maxIndex));\n            },\n            getValidIndex (index = this.index, prevIndex = this.prevIndex) {\n                return this.getIndex(index, prevIndex);\n            },\n            _show (prev, next, force) {\n                this._transitioner = this._getTransitioner(prev, next, this.dir, {\n                    easing: force ? next.offsetWidth < 600 ? \"cubic-bezier(0.25, 0.46, 0.45, 0.94)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\" : this.easing,\n                    ...this.transitionOptions\n                });\n                if (!force && !prev) {\n                    this._translate(1);\n                    return Promise.resolve();\n                }\n                const { length: length } = this.stack;\n                return this._transitioner[length > 1 ? \"forward\" : \"show\"](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);\n            },\n            _translate (percent, prev = this.prevIndex, next = this.index) {\n                const transitioner = this._getTransitioner(prev === next ? false : prev, next);\n                transitioner.translate(percent);\n                return transitioner;\n            },\n            _getTransitioner (prev = this.prevIndex, next = this.index, dir = this.dir || 1, options = this.transitionOptions) {\n                return new this.Transitioner(isNumber(prev) ? this.slides[prev] : prev, isNumber(next) ? this.slides[next] : next, dir * (isRtl ? -1 : 1), options);\n            }\n        }\n    };\n    function getDirection(index, prevIndex) {\n        return index === \"next\" ? 1 : index === \"previous\" ? -1 : index < prevIndex ? -1 : 1;\n    }\n    function speedUp(x) {\n        return 0.5 * x + 300;\n    }\n    var Slideshow = {\n        mixins: [\n            Slider\n        ],\n        props: {\n            animation: String\n        },\n        data: {\n            animation: \"slide\",\n            clsActivated: \"uk-transition-active\",\n            Animations: Animations$2,\n            Transitioner: Transitioner$1\n        },\n        computed: {\n            animation ({ animation: animation, Animations: Animations2 }) {\n                return {\n                    ...Animations2[animation] || Animations2.slide,\n                    name: animation\n                };\n            },\n            transitionOptions () {\n                return {\n                    animation: this.animation\n                };\n            }\n        },\n        events: {\n            beforeitemshow ({ target: target }) {\n                addClass(target, this.clsActive);\n            },\n            itemshown ({ target: target }) {\n                addClass(target, this.clsActivated);\n            },\n            itemhidden ({ target: target }) {\n                removeClass(target, this.clsActive, this.clsActivated);\n            }\n        }\n    };\n    var Animations$1 = {\n        ...Animations$2,\n        fade: {\n            show () {\n                return [\n                    {\n                        opacity: 0\n                    },\n                    {\n                        opacity: 1\n                    }\n                ];\n            },\n            percent (current) {\n                return 1 - css(current, \"opacity\");\n            },\n            translate (percent) {\n                return [\n                    {\n                        opacity: 1 - percent\n                    },\n                    {\n                        opacity: percent\n                    }\n                ];\n            }\n        },\n        scale: {\n            show () {\n                return [\n                    {\n                        opacity: 0,\n                        transform: scale3d(0.8)\n                    },\n                    {\n                        opacity: 1,\n                        transform: scale3d(1)\n                    }\n                ];\n            },\n            percent (current) {\n                return 1 - css(current, \"opacity\");\n            },\n            translate (percent) {\n                return [\n                    {\n                        opacity: 1 - percent,\n                        transform: scale3d(1 - 0.2 * percent)\n                    },\n                    {\n                        opacity: percent,\n                        transform: scale3d(0.8 + 0.2 * percent)\n                    }\n                ];\n            }\n        }\n    };\n    var LightboxPanel = {\n        mixins: [\n            Modal,\n            Slideshow\n        ],\n        functional: true,\n        props: {\n            delayControls: Number,\n            preload: Number,\n            videoAutoplay: Boolean,\n            template: String\n        },\n        data: ()=>({\n                preload: 1,\n                videoAutoplay: false,\n                delayControls: 3e3,\n                items: [],\n                cls: \"uk-open\",\n                clsPage: \"uk-lightbox-page\",\n                selList: \".uk-lightbox-items\",\n                attrItem: \"uk-lightbox-item\",\n                selClose: \".uk-close-large\",\n                selCaption: \".uk-lightbox-caption\",\n                pauseOnHover: false,\n                velocity: 2,\n                Animations: Animations$1,\n                template: `<div class=\"uk-lightbox uk-overflow-hidden\"> <ul class=\"uk-lightbox-items\"></ul> <div class=\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\"> <button class=\"uk-lightbox-toolbar-icon uk-close-large\" type=\"button\" uk-close></button> </div> <a class=\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\" href uk-slidenav-previous uk-lightbox-item=\"previous\"></a> <a class=\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\" href uk-slidenav-next uk-lightbox-item=\"next\"></a> <div class=\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\"></div> </div>`\n            }),\n        created () {\n            const $el = $(this.template);\n            const list = $(this.selList, $el);\n            this.items.forEach(()=>append(list, \"<li>\"));\n            const close = $(\"[uk-close]\", $el);\n            const closeLabel = this.t(\"close\");\n            if (close && closeLabel) close.dataset.i18n = JSON.stringify({\n                label: closeLabel\n            });\n            this.$mount(append(this.container, $el));\n        },\n        computed: {\n            caption: ({ selCaption: selCaption }, $el)=>$(selCaption, $el)\n        },\n        events: [\n            {\n                name: `${pointerMove$1} ${pointerDown$1} keydown`,\n                handler: \"showControls\"\n            },\n            {\n                name: \"click\",\n                self: true,\n                delegate () {\n                    return `${this.selList} > *`;\n                },\n                handler (e) {\n                    if (!e.defaultPrevented) this.hide();\n                }\n            },\n            {\n                name: \"shown\",\n                self: true,\n                handler () {\n                    this.showControls();\n                }\n            },\n            {\n                name: \"hide\",\n                self: true,\n                handler () {\n                    this.hideControls();\n                    removeClass(this.slides, this.clsActive);\n                    Transition.stop(this.slides);\n                }\n            },\n            {\n                name: \"hidden\",\n                self: true,\n                handler () {\n                    this.$destroy(true);\n                }\n            },\n            {\n                name: \"keyup\",\n                el () {\n                    return document;\n                },\n                handler ({ keyCode: keyCode }) {\n                    if (!this.isToggled(this.$el) || !this.draggable) return;\n                    let i = -1;\n                    if (keyCode === keyMap.LEFT) i = \"previous\";\n                    else if (keyCode === keyMap.RIGHT) i = \"next\";\n                    else if (keyCode === keyMap.HOME) i = 0;\n                    else if (keyCode === keyMap.END) i = \"last\";\n                    if (~i) this.show(i);\n                }\n            },\n            {\n                name: \"beforeitemshow\",\n                handler (e) {\n                    if (this.isToggled()) return;\n                    this.draggable = false;\n                    e.preventDefault();\n                    this.toggleElement(this.$el, true, false);\n                    this.animation = Animations$1[\"scale\"];\n                    removeClass(e.target, this.clsActive);\n                    this.stack.splice(1, 0, this.index);\n                }\n            },\n            {\n                name: \"itemshow\",\n                handler () {\n                    html(this.caption, this.getItem().caption || \"\");\n                    for(let j = -this.preload; j <= this.preload; j++)this.loadItem(this.index + j);\n                }\n            },\n            {\n                name: \"itemshown\",\n                handler () {\n                    this.draggable = this.$props.draggable;\n                }\n            },\n            {\n                name: \"itemload\",\n                async handler (_, item) {\n                    const { source: src, type: type, alt: alt = \"\", poster: poster, attrs: attrs = {} } = item;\n                    this.setItem(item, \"<span uk-spinner></span>\");\n                    if (!src) return;\n                    let matches;\n                    const iframeAttrs = {\n                        allowfullscreen: \"\",\n                        style: \"max-width: 100%; box-sizing: border-box;\",\n                        \"uk-responsive\": \"\",\n                        \"uk-video\": `${this.videoAutoplay}`\n                    };\n                    if (type === \"image\" || src.match(/\\.(avif|jpe?g|jfif|a?png|gif|svg|webp)($|\\?)/i)) {\n                        const img = createEl(\"img\", {\n                            src: src,\n                            alt: alt,\n                            ...attrs\n                        });\n                        on(img, \"load\", ()=>this.setItem(item, img));\n                        on(img, \"error\", ()=>this.setError(item));\n                    } else if (type === \"video\" || src.match(/\\.(mp4|webm|ogv)($|\\?)/i)) {\n                        const video = createEl(\"video\", {\n                            src: src,\n                            poster: poster,\n                            controls: \"\",\n                            playsinline: \"\",\n                            \"uk-video\": `${this.videoAutoplay}`,\n                            ...attrs\n                        });\n                        on(video, \"loadedmetadata\", ()=>this.setItem(item, video));\n                        on(video, \"error\", ()=>this.setError(item));\n                    } else if (type === \"iframe\" || src.match(/\\.(html|php)($|\\?)/i)) this.setItem(item, createEl(\"iframe\", {\n                        src: src,\n                        allowfullscreen: \"\",\n                        class: \"uk-lightbox-iframe\",\n                        ...attrs\n                    }));\n                    else if (matches = src.match(/\\/\\/(?:.*?youtube(-nocookie)?\\..*?(?:[?&]v=|\\/shorts\\/)|youtu\\.be\\/)([\\w-]{11})[&?]?(.*)?/)) this.setItem(item, createEl(\"iframe\", {\n                        src: `https://www.youtube${matches[1] || \"\"}.com/embed/${matches[2]}${matches[3] ? `?${matches[3]}` : \"\"}`,\n                        width: 1920,\n                        height: 1080,\n                        ...iframeAttrs,\n                        ...attrs\n                    }));\n                    else if (matches = src.match(/\\/\\/.*?vimeo\\.[a-z]+\\/(\\d+)[&?]?(.*)?/)) try {\n                        const { height: height, width: width } = await (await fetch(`https://vimeo.com/api/oembed.json?maxwidth=1920&url=${encodeURI(src)}`, {\n                            credentials: \"omit\"\n                        })).json();\n                        this.setItem(item, createEl(\"iframe\", {\n                            src: `https://player.vimeo.com/video/${matches[1]}${matches[2] ? `?${matches[2]}` : \"\"}`,\n                            width: width,\n                            height: height,\n                            ...iframeAttrs,\n                            ...attrs\n                        }));\n                    } catch (e) {\n                        this.setError(item);\n                    }\n                }\n            }\n        ],\n        methods: {\n            loadItem (index = this.index) {\n                const item = this.getItem(index);\n                if (!this.getSlide(item).childElementCount) trigger(this.$el, \"itemload\", [\n                    item\n                ]);\n            },\n            getItem (index = this.index) {\n                return this.items[getIndex(index, this.slides)];\n            },\n            setItem (item, content) {\n                trigger(this.$el, \"itemloaded\", [\n                    this,\n                    html(this.getSlide(item), content)\n                ]);\n            },\n            getSlide (item) {\n                return this.slides[this.items.indexOf(item)];\n            },\n            setError (item) {\n                this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n            },\n            showControls () {\n                clearTimeout(this.controlsTimer);\n                this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n                addClass(this.$el, \"uk-active\", \"uk-transition-active\");\n            },\n            hideControls () {\n                removeClass(this.$el, \"uk-active\", \"uk-transition-active\");\n            }\n        }\n    };\n    function createEl(tag, attrs) {\n        const el = fragment(`<${tag}>`);\n        attr(el, attrs);\n        return el;\n    }\n    var lightbox = {\n        install: install$3,\n        props: {\n            toggle: String\n        },\n        data: {\n            toggle: \"a\"\n        },\n        computed: {\n            toggles: ({ toggle: toggle }, $el)=>$$(toggle, $el)\n        },\n        watch: {\n            toggles (toggles) {\n                this.hide();\n                for (const toggle of toggles)if (isTag(toggle, \"a\")) attr(toggle, \"role\", \"button\");\n            }\n        },\n        disconnected () {\n            this.hide();\n        },\n        events: {\n            name: \"click\",\n            delegate () {\n                return `${this.toggle}:not(.uk-disabled)`;\n            },\n            handler (e) {\n                e.preventDefault();\n                this.show(e.current);\n            }\n        },\n        methods: {\n            show (index) {\n                const items = uniqueBy(this.toggles.map(toItem), \"source\");\n                if (isElement(index)) {\n                    const { source: source } = toItem(index);\n                    index = findIndex(items, ({ source: src })=>source === src);\n                }\n                this.panel = this.panel || this.$create(\"lightboxPanel\", {\n                    ...this.$props,\n                    items: items\n                });\n                on(this.panel.$el, \"hidden\", ()=>this.panel = null);\n                return this.panel.show(index);\n            },\n            hide () {\n                var _a;\n                return (_a = this.panel) == null ? void 0 : _a.hide();\n            }\n        }\n    };\n    function install$3(UIkit, Lightbox) {\n        if (!UIkit.lightboxPanel) UIkit.component(\"lightboxPanel\", LightboxPanel);\n        assign(Lightbox.props, UIkit.component(\"lightboxPanel\").options.props);\n    }\n    function toItem(el) {\n        const item = {};\n        for (const attr2 of [\n            \"href\",\n            \"caption\",\n            \"type\",\n            \"poster\",\n            \"alt\",\n            \"attrs\"\n        ])item[attr2 === \"href\" ? \"source\" : attr2] = data(el, attr2);\n        item.attrs = parseOptions(item.attrs);\n        return item;\n    }\n    var notification = {\n        mixins: [\n            Container\n        ],\n        functional: true,\n        args: [\n            \"message\",\n            \"status\"\n        ],\n        data: {\n            message: \"\",\n            status: \"\",\n            timeout: 5e3,\n            group: \"\",\n            pos: \"top-center\",\n            clsContainer: \"uk-notification\",\n            clsClose: \"uk-notification-close\",\n            clsMsg: \"uk-notification-message\"\n        },\n        install: install$2,\n        computed: {\n            marginProp: ({ pos: pos })=>`margin-${pos.match(/[a-z]+(?=-)/)[0]}`,\n            startProps () {\n                return {\n                    opacity: 0,\n                    [this.marginProp]: -this.$el.offsetHeight\n                };\n            }\n        },\n        created () {\n            const posClass = `${this.clsContainer}-${this.pos}`;\n            let container = $(`.${posClass}`, this.container);\n            if (!container || !isVisible(container)) container = append(this.container, `<div class=\"${this.clsContainer} ${posClass}\"></div>`);\n            this.$mount(append(container, `<div class=\"${this.clsMsg}${this.status ? ` ${this.clsMsg}-${this.status}` : \"\"}\" role=\"alert\"> <a href class=\"${this.clsClose}\" data-uk-close></a> <div>${this.message}</div> </div>`));\n        },\n        async connected () {\n            const margin = toFloat(css(this.$el, this.marginProp));\n            await Transition.start(css(this.$el, this.startProps), {\n                opacity: 1,\n                [this.marginProp]: margin\n            });\n            if (this.timeout) this.timer = setTimeout(this.close, this.timeout);\n        },\n        events: {\n            click (e) {\n                if (e.target.closest('a[href=\"#\"],a[href=\"\"]')) e.preventDefault();\n                this.close();\n            },\n            [pointerEnter] () {\n                if (this.timer) clearTimeout(this.timer);\n            },\n            [pointerLeave] () {\n                if (this.timeout) this.timer = setTimeout(this.close, this.timeout);\n            }\n        },\n        methods: {\n            async close (immediate) {\n                const removeFn = (el)=>{\n                    const container = parent(el);\n                    trigger(el, \"close\", [\n                        this\n                    ]);\n                    remove$1(el);\n                    if (!(container == null ? void 0 : container.hasChildNodes())) remove$1(container);\n                };\n                if (this.timer) clearTimeout(this.timer);\n                if (!immediate) await Transition.start(this.$el, this.startProps);\n                removeFn(this.$el);\n            }\n        }\n    };\n    function install$2(UIkit) {\n        UIkit.notification.closeAll = function(group, immediate) {\n            apply(document.body, (el)=>{\n                const notification = UIkit.getComponent(el, \"notification\");\n                if (notification && (!group || group === notification.group)) notification.close(immediate);\n            });\n        };\n    }\n    var Media = {\n        props: {\n            media: Boolean\n        },\n        data: {\n            media: false\n        },\n        connected () {\n            const media = toMedia(this.media, this.$el);\n            this.matchMedia = true;\n            if (media) {\n                this.mediaObj = window.matchMedia(media);\n                const handler = ()=>{\n                    this.matchMedia = this.mediaObj.matches;\n                    trigger(this.$el, createEvent(\"mediachange\", false, true, [\n                        this.mediaObj\n                    ]));\n                };\n                this.offMediaObj = on(this.mediaObj, \"change\", ()=>{\n                    handler();\n                    this.$emit(\"resize\");\n                });\n                handler();\n            }\n        },\n        disconnected () {\n            var _a;\n            (_a = this.offMediaObj) == null || _a.call(this);\n        }\n    };\n    function toMedia(value, element) {\n        if (isString(value)) {\n            if (startsWith(value, \"@\")) value = toFloat(css(element, `--uk-breakpoint-${value.substr(1)}`));\n            else if (isNaN(value)) return value;\n        }\n        return value && isNumeric(value) ? `(min-width: ${value}px)` : \"\";\n    }\n    function getMaxPathLength(el) {\n        return Math.ceil(Math.max(0, ...$$(\"[stroke]\", el).map((stroke)=>{\n            try {\n                return stroke.getTotalLength();\n            } catch (e) {\n                return 0;\n            }\n        })));\n    }\n    const props = {\n        x: transformFn,\n        y: transformFn,\n        rotate: transformFn,\n        scale: transformFn,\n        color: colorFn,\n        backgroundColor: colorFn,\n        borderColor: colorFn,\n        blur: filterFn,\n        hue: filterFn,\n        fopacity: filterFn,\n        grayscale: filterFn,\n        invert: filterFn,\n        saturate: filterFn,\n        sepia: filterFn,\n        opacity: cssPropFn,\n        stroke: strokeFn,\n        bgx: backgroundFn,\n        bgy: backgroundFn\n    };\n    const { keys: keys } = Object;\n    var Parallax = {\n        mixins: [\n            Media\n        ],\n        props: fillObject(keys(props), \"list\"),\n        data: fillObject(keys(props), void 0),\n        computed: {\n            props (properties, $el) {\n                const stops = {};\n                for(const prop in properties)if (prop in props && !isUndefined(properties[prop])) stops[prop] = properties[prop].slice();\n                const result = {};\n                for(const prop in stops)result[prop] = props[prop](prop, $el, stops[prop], stops);\n                return result;\n            }\n        },\n        events: {\n            load () {\n                this.$emit();\n            }\n        },\n        methods: {\n            reset () {\n                for(const prop in this.getCss(0))css(this.$el, prop, \"\");\n            },\n            getCss (percent) {\n                const css2 = {};\n                for(const prop in this.props)this.props[prop](css2, clamp(percent));\n                css2.willChange = Object.keys(css2).map(propName).join(\",\");\n                return css2;\n            }\n        }\n    };\n    function transformFn(prop, el, stops) {\n        let unit = getUnit(stops) || ({\n            x: \"px\",\n            y: \"px\",\n            rotate: \"deg\"\n        })[prop] || \"\";\n        let transformFn2;\n        if (prop === \"x\" || prop === \"y\") {\n            prop = `translate${ucfirst(prop)}`;\n            transformFn2 = (stop)=>toFloat(toFloat(stop).toFixed(unit === \"px\" ? 0 : 6));\n        } else if (prop === \"scale\") {\n            unit = \"\";\n            transformFn2 = (stop)=>{\n                var _a;\n                return getUnit([\n                    stop\n                ]) ? toPx(stop, \"width\", el, true) / el[`offset${((_a = stop.endsWith) == null ? void 0 : _a.call(stop, \"vh\")) ? \"Height\" : \"Width\"}`] : toFloat(stop);\n            };\n        }\n        if (stops.length === 1) stops.unshift(prop === \"scale\" ? 1 : 0);\n        stops = parseStops(stops, transformFn2);\n        return (css2, percent)=>{\n            css2.transform = `${css2.transform || \"\"} ${prop}(${getValue(stops, percent)}${unit})`;\n        };\n    }\n    function colorFn(prop, el, stops) {\n        if (stops.length === 1) stops.unshift(getCssValue(el, prop, \"\"));\n        stops = parseStops(stops, (stop)=>parseColor(el, stop));\n        return (css2, percent)=>{\n            const [start, end, p] = getStop(stops, percent);\n            const value = start.map((value2, i)=>{\n                value2 += p * (end[i] - value2);\n                return i === 3 ? toFloat(value2) : parseInt(value2, 10);\n            }).join(\",\");\n            css2[prop] = `rgba(${value})`;\n        };\n    }\n    function parseColor(el, color) {\n        return getCssValue(el, \"color\", color).split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(toFloat);\n    }\n    function filterFn(prop, el, stops) {\n        if (stops.length === 1) stops.unshift(0);\n        const unit = getUnit(stops) || ({\n            blur: \"px\",\n            hue: \"deg\"\n        })[prop] || \"%\";\n        prop = ({\n            fopacity: \"opacity\",\n            hue: \"hue-rotate\"\n        })[prop] || prop;\n        stops = parseStops(stops);\n        return (css2, percent)=>{\n            const value = getValue(stops, percent);\n            css2.filter = `${css2.filter || \"\"} ${prop}(${value + unit})`;\n        };\n    }\n    function cssPropFn(prop, el, stops) {\n        if (stops.length === 1) stops.unshift(getCssValue(el, prop, \"\"));\n        stops = parseStops(stops);\n        return (css2, percent)=>{\n            css2[prop] = getValue(stops, percent);\n        };\n    }\n    function strokeFn(prop, el, stops) {\n        if (stops.length === 1) stops.unshift(0);\n        const unit = getUnit(stops);\n        const length = getMaxPathLength(el);\n        stops = parseStops(stops.reverse(), (stop)=>{\n            stop = toFloat(stop);\n            return unit === \"%\" ? stop * length / 100 : stop;\n        });\n        if (!stops.some(([value])=>value)) return noop;\n        css(el, \"strokeDasharray\", length);\n        return (css2, percent)=>{\n            css2.strokeDashoffset = getValue(stops, percent);\n        };\n    }\n    function backgroundFn(prop, el, stops, props2) {\n        if (stops.length === 1) stops.unshift(0);\n        const attr = prop === \"bgy\" ? \"height\" : \"width\";\n        props2[prop] = parseStops(stops, (stop)=>toPx(stop, attr, el));\n        const bgProps = [\n            \"bgx\",\n            \"bgy\"\n        ].filter((prop2)=>prop2 in props2);\n        if (bgProps.length === 2 && prop === \"bgx\") return noop;\n        if (getCssValue(el, \"backgroundSize\", \"\") === \"cover\") return backgroundCoverFn(prop, el, stops, props2);\n        const positions = {};\n        for (const prop2 of bgProps)positions[prop2] = getBackgroundPos(el, prop2);\n        return setBackgroundPosFn(bgProps, positions, props2);\n    }\n    function backgroundCoverFn(prop, el, stops, props2) {\n        const dimImage = getBackgroundImageDimensions(el);\n        if (!dimImage.width) return noop;\n        const dimEl = {\n            width: el.offsetWidth,\n            height: el.offsetHeight\n        };\n        const bgProps = [\n            \"bgx\",\n            \"bgy\"\n        ].filter((prop2)=>prop2 in props2);\n        const positions = {};\n        for (const prop2 of bgProps){\n            const values = props2[prop2].map(([value])=>value);\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            const down = values.indexOf(min) < values.indexOf(max);\n            const diff = max - min;\n            positions[prop2] = `${(down ? -diff : 0) - (down ? min : max)}px`;\n            dimEl[prop2 === \"bgy\" ? \"height\" : \"width\"] += diff;\n        }\n        const dim = Dimensions.cover(dimImage, dimEl);\n        for (const prop2 of bgProps){\n            const attr = prop2 === \"bgy\" ? \"height\" : \"width\";\n            const overflow = dim[attr] - dimEl[attr];\n            positions[prop2] = `max(${getBackgroundPos(el, prop2)},-${overflow}px) + ${positions[prop2]}`;\n        }\n        const fn = setBackgroundPosFn(bgProps, positions, props2);\n        return (css2, percent)=>{\n            fn(css2, percent);\n            css2.backgroundSize = `${dim.width}px ${dim.height}px`;\n            css2.backgroundRepeat = \"no-repeat\";\n        };\n    }\n    function getBackgroundPos(el, prop) {\n        return getCssValue(el, `background-position-${prop.substr(-1)}`, \"\");\n    }\n    function setBackgroundPosFn(bgProps, positions, props2) {\n        return function(css2, percent) {\n            for (const prop of bgProps){\n                const value = getValue(props2[prop], percent);\n                css2[`background-position-${prop.substr(-1)}`] = `calc(${positions[prop]} + ${value}px)`;\n            }\n        };\n    }\n    const dimensions = {};\n    function getBackgroundImageDimensions(el) {\n        const src = css(el, \"backgroundImage\").replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, \"$1\");\n        if (dimensions[src]) return dimensions[src];\n        const image = new Image();\n        if (src) {\n            image.src = src;\n            if (!image.naturalWidth) {\n                image.onload = ()=>{\n                    dimensions[src] = toDimensions(image);\n                    trigger(el, createEvent(\"load\", false));\n                };\n                return toDimensions(image);\n            }\n        }\n        return dimensions[src] = toDimensions(image);\n    }\n    function toDimensions(image) {\n        return {\n            width: image.naturalWidth,\n            height: image.naturalHeight\n        };\n    }\n    function parseStops(stops, fn = toFloat) {\n        const result = [];\n        const { length: length } = stops;\n        let nullIndex = 0;\n        for(let i = 0; i < length; i++){\n            let [value, percent] = isString(stops[i]) ? stops[i].trim().split(/ (?![^(]*\\))/) : [\n                stops[i]\n            ];\n            value = fn(value);\n            percent = percent ? toFloat(percent) / 100 : null;\n            if (i === 0) {\n                if (percent === null) percent = 0;\n                else if (percent) result.push([\n                    value,\n                    0\n                ]);\n            } else if (i === length - 1) {\n                if (percent === null) percent = 1;\n                else if (percent !== 1) {\n                    result.push([\n                        value,\n                        percent\n                    ]);\n                    percent = 1;\n                }\n            }\n            result.push([\n                value,\n                percent\n            ]);\n            if (percent === null) nullIndex++;\n            else if (nullIndex) {\n                const leftPercent = result[i - nullIndex - 1][1];\n                const p = (percent - leftPercent) / (nullIndex + 1);\n                for(let j = nullIndex; j > 0; j--)result[i - j][1] = leftPercent + p * (nullIndex - j + 1);\n                nullIndex = 0;\n            }\n        }\n        return result;\n    }\n    function getStop(stops, percent) {\n        const index = findIndex(stops.slice(1), ([, targetPercent])=>percent <= targetPercent) + 1;\n        return [\n            stops[index - 1][0],\n            stops[index][0],\n            (percent - stops[index - 1][1]) / (stops[index][1] - stops[index - 1][1])\n        ];\n    }\n    function getValue(stops, percent) {\n        const [start, end, p] = getStop(stops, percent);\n        return start + Math.abs(start - end) * p * (start < end ? 1 : -1);\n    }\n    const unitRe = /^-?\\d+(?:\\.\\d+)?(\\S+)?/;\n    function getUnit(stops, defaultUnit) {\n        var _a;\n        for (const stop of stops){\n            const match = (_a = stop.match) == null ? void 0 : _a.call(stop, unitRe);\n            if (match) return match[1];\n        }\n        return defaultUnit;\n    }\n    function getCssValue(el, prop, value) {\n        const prev = el.style[prop];\n        const val = css(css(el, prop, value), prop);\n        el.style[prop] = prev;\n        return val;\n    }\n    function fillObject(keys2, value) {\n        return keys2.reduce((data, prop)=>{\n            data[prop] = value;\n            return data;\n        }, {});\n    }\n    var parallax = {\n        mixins: [\n            Parallax\n        ],\n        props: {\n            target: String,\n            viewport: Number,\n            // Deprecated\n            easing: Number,\n            start: String,\n            end: String\n        },\n        data: {\n            target: false,\n            viewport: 1,\n            easing: 1,\n            start: 0,\n            end: 0\n        },\n        computed: {\n            target: ({ target: target }, $el)=>getOffsetElement(target && query(target, $el) || $el),\n            start ({ start: start }) {\n                return toPx(start, \"height\", this.target, true);\n            },\n            end ({ end: end, viewport: viewport2 }) {\n                return toPx(end || (viewport2 = (1 - viewport2) * 100) && `${viewport2}vh+${viewport2}%`, \"height\", this.target, true);\n            }\n        },\n        observe: [\n            viewport(),\n            scroll$1({\n                target: ({ target: target })=>target\n            }),\n            resize({\n                target: ({ $el: $el, target: target })=>[\n                        $el,\n                        target,\n                        scrollParent(target, true)\n                    ]\n            })\n        ],\n        update: {\n            read ({ percent: percent }, types) {\n                if (!types.has(\"scroll\")) percent = false;\n                if (!isVisible(this.$el)) return false;\n                if (!this.matchMedia) return;\n                const prev = percent;\n                percent = ease(scrolledOver(this.target, this.start, this.end), this.easing);\n                return {\n                    percent: percent,\n                    style: prev === percent ? false : this.getCss(percent)\n                };\n            },\n            write ({ style: style }) {\n                if (!this.matchMedia) {\n                    this.reset();\n                    return;\n                }\n                style && css(this.$el, style);\n            },\n            events: [\n                \"scroll\",\n                \"resize\"\n            ]\n        }\n    };\n    function ease(percent, easing) {\n        return easing >= 0 ? Math.pow(percent, easing + 1) : 1 - Math.pow(1 - percent, 1 - easing);\n    }\n    function getOffsetElement(el) {\n        return el ? \"offsetTop\" in el ? el : getOffsetElement(parent(el)) : document.documentElement;\n    }\n    var SliderReactive = {\n        update: {\n            write () {\n                if (this.stack.length || this.dragging) return;\n                const index = this.getValidIndex();\n                if (!~this.prevIndex || this.index !== index) this.show(index);\n                else this._translate(1, this.prevIndex, this.index);\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    var SliderPreload = {\n        observe: lazyload({\n            target: ({ slides: slides })=>slides,\n            targets: (instance)=>instance.getAdjacentSlides()\n        })\n    };\n    function Transitioner(prev, next, dir, { center: center, easing: easing, list: list }) {\n        const from = prev ? getLeft(prev, list, center) : getLeft(next, list, center) + dimensions$1(next).width * dir;\n        const to = next ? getLeft(next, list, center) : from + dimensions$1(prev).width * dir * (isRtl ? -1 : 1);\n        let resolve;\n        return {\n            dir: dir,\n            show (duration, percent = 0, linear) {\n                const timing = linear ? \"linear\" : easing;\n                duration -= Math.round(duration * clamp(percent, -1, 1));\n                this.translate(percent);\n                percent = prev ? percent : clamp(percent, 0, 1);\n                triggerUpdate(this.getItemIn(), \"itemin\", {\n                    percent: percent,\n                    duration: duration,\n                    timing: timing,\n                    dir: dir\n                });\n                prev && triggerUpdate(this.getItemIn(true), \"itemout\", {\n                    percent: 1 - percent,\n                    duration: duration,\n                    timing: timing,\n                    dir: dir\n                });\n                return new Promise((res)=>{\n                    resolve || (resolve = res);\n                    Transition.start(list, {\n                        transform: translate(-to * (isRtl ? -1 : 1), \"px\")\n                    }, duration, timing).then(resolve, noop);\n                });\n            },\n            cancel () {\n                return Transition.cancel(list);\n            },\n            reset () {\n                css(list, \"transform\", \"\");\n            },\n            async forward (duration, percent = this.percent()) {\n                await this.cancel();\n                return this.show(duration, percent, true);\n            },\n            translate (percent) {\n                const distance = this.getDistance() * dir * (isRtl ? -1 : 1);\n                css(list, \"transform\", translate(clamp(-to + (distance - distance * percent), -getWidth(list), dimensions$1(list).width) * (isRtl ? -1 : 1), \"px\"));\n                const actives = this.getActives();\n                const itemIn = this.getItemIn();\n                const itemOut = this.getItemIn(true);\n                percent = prev ? clamp(percent, -1, 1) : 0;\n                for (const slide of children(list)){\n                    const isActive = includes(actives, slide);\n                    const isIn = slide === itemIn;\n                    const isOut = slide === itemOut;\n                    const translateIn = isIn || !isOut && (isActive || dir * (isRtl ? -1 : 1) === -1 ^ getElLeft(slide, list) > getElLeft(prev || next));\n                    triggerUpdate(slide, `itemtranslate${translateIn ? \"in\" : \"out\"}`, {\n                        dir: dir,\n                        percent: isOut ? 1 - percent : isIn ? percent : isActive ? 1 : 0\n                    });\n                }\n            },\n            percent () {\n                return Math.abs((css(list, \"transform\").split(\",\")[4] * (isRtl ? -1 : 1) + from) / (to - from));\n            },\n            getDistance () {\n                return Math.abs(to - from);\n            },\n            getItemIn (out = false) {\n                let actives = this.getActives();\n                let nextActives = inView(list, getLeft(next || prev, list, center));\n                if (out) {\n                    const temp = actives;\n                    actives = nextActives;\n                    nextActives = temp;\n                }\n                return nextActives[findIndex(nextActives, (el)=>!includes(actives, el))];\n            },\n            getActives () {\n                return inView(list, getLeft(prev || next, list, center));\n            }\n        };\n    }\n    function getLeft(el, list, center) {\n        const left = getElLeft(el, list);\n        return center ? left - centerEl(el, list) : Math.min(left, getMax(list));\n    }\n    function getMax(list) {\n        return Math.max(0, getWidth(list) - dimensions$1(list).width);\n    }\n    function getWidth(list) {\n        return sumBy(children(list), (el)=>dimensions$1(el).width);\n    }\n    function centerEl(el, list) {\n        return dimensions$1(list).width / 2 - dimensions$1(el).width / 2;\n    }\n    function getElLeft(el, list) {\n        return el && (position(el).left + (isRtl ? dimensions$1(el).width - dimensions$1(list).width : 0)) * (isRtl ? -1 : 1) || 0;\n    }\n    function inView(list, listLeft) {\n        listLeft -= 1;\n        const listWidth = dimensions$1(list).width;\n        const listRight = listLeft + listWidth + 2;\n        return children(list).filter((slide)=>{\n            const slideLeft = getElLeft(slide, list);\n            const slideRight = slideLeft + Math.min(dimensions$1(slide).width, listWidth);\n            return slideLeft >= listLeft && slideRight <= listRight;\n        });\n    }\n    function triggerUpdate(el, type, data) {\n        trigger(el, createEvent(type, false, false, data));\n    }\n    var slider = {\n        mixins: [\n            Class,\n            Slider,\n            SliderReactive,\n            SliderPreload\n        ],\n        props: {\n            center: Boolean,\n            sets: Boolean\n        },\n        data: {\n            center: false,\n            sets: false,\n            attrItem: \"uk-slider-item\",\n            selList: \".uk-slider-items\",\n            selNav: \".uk-slider-nav\",\n            clsContainer: \"uk-slider-container\",\n            Transitioner: Transitioner\n        },\n        computed: {\n            avgWidth () {\n                return getWidth(this.list) / this.length;\n            },\n            finite ({ finite: finite }) {\n                return finite || isFinite(this.list, this.center);\n            },\n            maxIndex () {\n                if (!this.finite || this.center && !this.sets) return this.length - 1;\n                if (this.center) return last(this.sets);\n                let lft = 0;\n                const max = getMax(this.list);\n                const index = findIndex(this.slides, (el)=>{\n                    if (lft >= max) return true;\n                    lft += dimensions$1(el).width;\n                });\n                return ~index ? index : this.length - 1;\n            },\n            sets ({ sets: enabled }) {\n                if (!enabled) return;\n                let left = 0;\n                const sets = [];\n                const width = dimensions$1(this.list).width;\n                for(let i = 0; i < this.length; i++){\n                    const slideWidth = dimensions$1(this.slides[i]).width;\n                    if (left + slideWidth > width) left = 0;\n                    if (this.center) {\n                        if (left < width / 2 && left + slideWidth + dimensions$1(getIndex(+i + 1, this.slides)).width / 2 > width / 2) {\n                            sets.push(+i);\n                            left = width / 2 - slideWidth / 2;\n                        }\n                    } else if (left === 0) sets.push(Math.min(+i, this.maxIndex));\n                    left += slideWidth;\n                }\n                if (sets.length) return sets;\n            },\n            transitionOptions () {\n                return {\n                    center: this.center,\n                    list: this.list\n                };\n            },\n            slides () {\n                return children(this.list).filter(isVisible);\n            }\n        },\n        connected () {\n            toggleClass(this.$el, this.clsContainer, !$(`.${this.clsContainer}`, this.$el));\n        },\n        observe: resize({\n            target: ({ slides: slides })=>slides\n        }),\n        update: {\n            write () {\n                for (const el of this.navItems){\n                    const index = toNumber(data(el, this.attrItem));\n                    if (index !== false) el.hidden = !this.maxIndex || index > this.maxIndex || this.sets && !includes(this.sets, index);\n                }\n                if (this.length && !this.dragging && !this.stack.length) {\n                    this.reorder();\n                    this._translate(1);\n                }\n                this.updateActiveClasses();\n            },\n            events: [\n                \"resize\"\n            ]\n        },\n        events: {\n            beforeitemshow (e) {\n                if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) this.index = this.getValidIndex();\n                const diff = Math.abs(this.index - this.prevIndex + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0));\n                if (!this.dragging && diff > 1) {\n                    for(let i = 0; i < diff; i++)this.stack.splice(1, 0, this.dir > 0 ? \"next\" : \"previous\");\n                    e.preventDefault();\n                    return;\n                }\n                const index = this.dir < 0 || !this.slides[this.prevIndex] ? this.index : this.prevIndex;\n                this.duration = speedUp(this.avgWidth / this.velocity) * (dimensions$1(this.slides[index]).width / this.avgWidth);\n                this.reorder();\n            },\n            itemshow () {\n                if (~this.prevIndex) addClass(this._getTransitioner().getItemIn(), this.clsActive);\n            },\n            itemshown () {\n                this.updateActiveClasses();\n            }\n        },\n        methods: {\n            reorder () {\n                if (this.finite) {\n                    css(this.slides, \"order\", \"\");\n                    return;\n                }\n                const index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\n                this.slides.forEach((slide, i)=>css(slide, \"order\", this.dir > 0 && i < index ? 1 : this.dir < 0 && i >= this.index ? -1 : \"\"));\n                if (!this.center) return;\n                const next = this.slides[index];\n                let width = dimensions$1(this.list).width / 2 - dimensions$1(next).width / 2;\n                let j = 0;\n                while(width > 0){\n                    const slideIndex = this.getIndex(--j + index, index);\n                    const slide = this.slides[slideIndex];\n                    css(slide, \"order\", slideIndex > index ? -2 : -1);\n                    width -= dimensions$1(slide).width;\n                }\n            },\n            updateActiveClasses () {\n                const actives = this._getTransitioner(this.index).getActives();\n                const activeClasses = [\n                    this.clsActive,\n                    (!this.sets || includes(this.sets, toFloat(this.index))) && this.clsActivated || \"\"\n                ];\n                for (const slide of this.slides){\n                    const active = includes(actives, slide);\n                    toggleClass(slide, activeClasses, active);\n                    attr(slide, \"aria-hidden\", !active);\n                    for (const focusable of $$(selFocusable, slide)){\n                        if (!hasOwn(focusable, \"_tabindex\")) focusable._tabindex = attr(focusable, \"tabindex\");\n                        attr(focusable, \"tabindex\", active ? focusable._tabindex : -1);\n                    }\n                }\n            },\n            getValidIndex (index = this.index, prevIndex = this.prevIndex) {\n                index = this.getIndex(index, prevIndex);\n                if (!this.sets) return index;\n                let prev;\n                do {\n                    if (includes(this.sets, index)) return index;\n                    prev = index;\n                    index = this.getIndex(index + this.dir, prevIndex);\n                }while (index !== prev);\n                return index;\n            },\n            getAdjacentSlides () {\n                const { width: width } = dimensions$1(this.list);\n                const left = -width;\n                const right = width * 2;\n                const slideWidth = dimensions$1(this.slides[this.index]).width;\n                const slideLeft = this.center ? width / 2 - slideWidth / 2 : 0;\n                const slides = /* @__PURE__ */ new Set();\n                for (const i of [\n                    -1,\n                    1\n                ]){\n                    let currentLeft = slideLeft + (i > 0 ? slideWidth : 0);\n                    let j = 0;\n                    do {\n                        const slide = this.slides[this.getIndex(this.index + i + j++ * i)];\n                        currentLeft += dimensions$1(slide).width * i;\n                        slides.add(slide);\n                    }while (this.length > j && currentLeft > left && currentLeft < right);\n                }\n                return Array.from(slides);\n            }\n        }\n    };\n    function isFinite(list, center) {\n        if (!list || list.length < 2) return true;\n        const { width: listWidth } = dimensions$1(list);\n        if (!center) return Math.ceil(getWidth(list)) < Math.trunc(listWidth + getMaxElWidth(list));\n        const slides = children(list);\n        const listHalf = Math.trunc(listWidth / 2);\n        for(const index in slides){\n            const slide = slides[index];\n            const slideWidth = dimensions$1(slide).width;\n            const slidesInView = /* @__PURE__ */ new Set([\n                slide\n            ]);\n            let diff = 0;\n            for (const i of [\n                -1,\n                1\n            ]){\n                let left = slideWidth / 2;\n                let j = 0;\n                while(left < listHalf){\n                    const nextSlide = slides[getIndex(+index + i + j++ * i, slides)];\n                    if (slidesInView.has(nextSlide)) return true;\n                    left += dimensions$1(nextSlide).width;\n                    slidesInView.add(nextSlide);\n                }\n                diff = Math.max(diff, slideWidth / 2 + dimensions$1(slides[getIndex(+index + i, slides)]).width / 2 - (left - listHalf));\n            }\n            if (diff > sumBy(slides.filter((slide2)=>!slidesInView.has(slide2)), (slide2)=>dimensions$1(slide2).width)) return true;\n        }\n        return false;\n    }\n    function getMaxElWidth(list) {\n        return Math.max(0, ...children(list).map((el)=>dimensions$1(el).width));\n    }\n    var sliderParallax = {\n        mixins: [\n            Parallax\n        ],\n        data: {\n            selItem: \"!li\"\n        },\n        beforeConnect () {\n            this.item = query(this.selItem, this.$el);\n        },\n        disconnected () {\n            this.item = null;\n        },\n        events: [\n            {\n                name: \"itemin itemout\",\n                self: true,\n                el () {\n                    return this.item;\n                },\n                handler ({ type: type, detail: { percent: percent, duration: duration, timing: timing, dir: dir } }) {\n                    fastdom.read(()=>{\n                        if (!this.matchMedia) return;\n                        const propsFrom = this.getCss(getCurrentPercent(type, dir, percent));\n                        const propsTo = this.getCss(isIn(type) ? 0.5 : dir > 0 ? 1 : 0);\n                        fastdom.write(()=>{\n                            css(this.$el, propsFrom);\n                            Transition.start(this.$el, propsTo, duration, timing).catch(noop);\n                        });\n                    });\n                }\n            },\n            {\n                name: \"transitioncanceled transitionend\",\n                self: true,\n                el () {\n                    return this.item;\n                },\n                handler () {\n                    Transition.cancel(this.$el);\n                }\n            },\n            {\n                name: \"itemtranslatein itemtranslateout\",\n                self: true,\n                el () {\n                    return this.item;\n                },\n                handler ({ type: type, detail: { percent: percent, dir: dir } }) {\n                    fastdom.read(()=>{\n                        if (!this.matchMedia) {\n                            this.reset();\n                            return;\n                        }\n                        const props = this.getCss(getCurrentPercent(type, dir, percent));\n                        fastdom.write(()=>css(this.$el, props));\n                    });\n                }\n            }\n        ]\n    };\n    function isIn(type) {\n        return endsWith(type, \"in\");\n    }\n    function getCurrentPercent(type, dir, percent) {\n        percent /= 2;\n        return isIn(type) ^ dir < 0 ? percent : 1 - percent;\n    }\n    var Animations = {\n        ...Animations$2,\n        fade: {\n            show () {\n                return [\n                    {\n                        opacity: 0,\n                        zIndex: 0\n                    },\n                    {\n                        zIndex: -1\n                    }\n                ];\n            },\n            percent (current) {\n                return 1 - css(current, \"opacity\");\n            },\n            translate (percent) {\n                return [\n                    {\n                        opacity: 1 - percent,\n                        zIndex: 0\n                    },\n                    {\n                        zIndex: -1\n                    }\n                ];\n            }\n        },\n        scale: {\n            show () {\n                return [\n                    {\n                        opacity: 0,\n                        transform: scale3d(1.5),\n                        zIndex: 0\n                    },\n                    {\n                        zIndex: -1\n                    }\n                ];\n            },\n            percent (current) {\n                return 1 - css(current, \"opacity\");\n            },\n            translate (percent) {\n                return [\n                    {\n                        opacity: 1 - percent,\n                        transform: scale3d(1 + 0.5 * percent),\n                        zIndex: 0\n                    },\n                    {\n                        zIndex: -1\n                    }\n                ];\n            }\n        },\n        pull: {\n            show (dir) {\n                return dir < 0 ? [\n                    {\n                        transform: translate(30),\n                        zIndex: -1\n                    },\n                    {\n                        transform: translate(),\n                        zIndex: 0\n                    }\n                ] : [\n                    {\n                        transform: translate(-100),\n                        zIndex: 0\n                    },\n                    {\n                        transform: translate(),\n                        zIndex: -1\n                    }\n                ];\n            },\n            percent (current, next, dir) {\n                return dir < 0 ? 1 - translated(next) : translated(current);\n            },\n            translate (percent, dir) {\n                return dir < 0 ? [\n                    {\n                        transform: translate(30 * percent),\n                        zIndex: -1\n                    },\n                    {\n                        transform: translate(-100 * (1 - percent)),\n                        zIndex: 0\n                    }\n                ] : [\n                    {\n                        transform: translate(-percent * 100),\n                        zIndex: 0\n                    },\n                    {\n                        transform: translate(30 * (1 - percent)),\n                        zIndex: -1\n                    }\n                ];\n            }\n        },\n        push: {\n            show (dir) {\n                return dir < 0 ? [\n                    {\n                        transform: translate(100),\n                        zIndex: 0\n                    },\n                    {\n                        transform: translate(),\n                        zIndex: -1\n                    }\n                ] : [\n                    {\n                        transform: translate(-30),\n                        zIndex: -1\n                    },\n                    {\n                        transform: translate(),\n                        zIndex: 0\n                    }\n                ];\n            },\n            percent (current, next, dir) {\n                return dir > 0 ? 1 - translated(next) : translated(current);\n            },\n            translate (percent, dir) {\n                return dir < 0 ? [\n                    {\n                        transform: translate(percent * 100),\n                        zIndex: 0\n                    },\n                    {\n                        transform: translate(-30 * (1 - percent)),\n                        zIndex: -1\n                    }\n                ] : [\n                    {\n                        transform: translate(-30 * percent),\n                        zIndex: -1\n                    },\n                    {\n                        transform: translate(100 * (1 - percent)),\n                        zIndex: 0\n                    }\n                ];\n            }\n        }\n    };\n    const supportsAspectRatio = inBrowser && CSS.supports(\"aspect-ratio\", \"1/1\");\n    var slideshow = {\n        mixins: [\n            Class,\n            Slideshow,\n            SliderReactive,\n            SliderPreload\n        ],\n        props: {\n            ratio: String,\n            minHeight: Number,\n            maxHeight: Number\n        },\n        data: {\n            ratio: \"16:9\",\n            minHeight: false,\n            maxHeight: false,\n            selList: \".uk-slideshow-items\",\n            attrItem: \"uk-slideshow-item\",\n            selNav: \".uk-slideshow-nav\",\n            Animations: Animations\n        },\n        watch: {\n            list (list) {\n                if (list && supportsAspectRatio) css(list, {\n                    aspectRatio: this.ratio.replace(\":\", \"/\"),\n                    minHeight: this.minHeight || \"\",\n                    maxHeight: this.maxHeight || \"\",\n                    minWidth: \"100%\",\n                    maxWidth: \"100%\"\n                });\n            }\n        },\n        update: {\n            // deprecated: Remove with iOS 17\n            read () {\n                if (!this.list || supportsAspectRatio) return false;\n                let [width, height] = this.ratio.split(\":\").map(Number);\n                height = height * this.list.offsetWidth / width || 0;\n                if (this.minHeight) height = Math.max(this.minHeight, height);\n                if (this.maxHeight) height = Math.min(this.maxHeight, height);\n                return {\n                    height: height - boxModelAdjust(this.list, \"height\", \"content-box\")\n                };\n            },\n            write ({ height: height }) {\n                height > 0 && css(this.list, \"minHeight\", height);\n            },\n            events: [\n                \"resize\"\n            ]\n        },\n        methods: {\n            getAdjacentSlides () {\n                return [\n                    1,\n                    -1\n                ].map((i)=>this.slides[this.getIndex(this.index + i)]);\n            }\n        }\n    };\n    var sortable = {\n        mixins: [\n            Class,\n            Animate\n        ],\n        props: {\n            group: String,\n            threshold: Number,\n            clsItem: String,\n            clsPlaceholder: String,\n            clsDrag: String,\n            clsDragState: String,\n            clsBase: String,\n            clsNoDrag: String,\n            clsEmpty: String,\n            clsCustom: String,\n            handle: String\n        },\n        data: {\n            group: false,\n            threshold: 5,\n            clsItem: \"uk-sortable-item\",\n            clsPlaceholder: \"uk-sortable-placeholder\",\n            clsDrag: \"uk-sortable-drag\",\n            clsDragState: \"uk-drag\",\n            clsBase: \"uk-sortable\",\n            clsNoDrag: \"uk-sortable-nodrag\",\n            clsEmpty: \"uk-sortable-empty\",\n            clsCustom: \"\",\n            handle: false,\n            pos: {}\n        },\n        created () {\n            for (const key of [\n                \"init\",\n                \"start\",\n                \"move\",\n                \"end\"\n            ]){\n                const fn = this[key];\n                this[key] = (e)=>{\n                    assign(this.pos, getEventPos(e));\n                    fn(e);\n                };\n            }\n        },\n        events: {\n            name: pointerDown$1,\n            passive: false,\n            handler: \"init\"\n        },\n        computed: {\n            target: (_, $el)=>($el.tBodies || [\n                    $el\n                ])[0],\n            items () {\n                return children(this.target);\n            },\n            isEmpty () {\n                return isEmpty(this.items);\n            },\n            handles ({ handle: handle }, $el) {\n                return handle ? $$(handle, $el) : this.items;\n            }\n        },\n        watch: {\n            isEmpty (empty) {\n                toggleClass(this.target, this.clsEmpty, empty);\n            },\n            handles (handles, prev) {\n                css(prev, {\n                    touchAction: \"\",\n                    userSelect: \"\"\n                });\n                css(handles, {\n                    touchAction: hasTouch ? \"none\" : \"\",\n                    userSelect: \"none\"\n                });\n            }\n        },\n        update: {\n            write (data) {\n                if (!this.drag || !parent(this.placeholder)) return;\n                const { pos: { x: x, y: y }, origin: { offsetTop: offsetTop, offsetLeft: offsetLeft }, placeholder: placeholder } = this;\n                css(this.drag, {\n                    top: y - offsetTop,\n                    left: x - offsetLeft\n                });\n                const sortable = this.getSortable(document.elementFromPoint(x, y));\n                if (!sortable) return;\n                const { items: items } = sortable;\n                if (items.some(Transition.inProgress)) return;\n                const target = findTarget(items, {\n                    x: x,\n                    y: y\n                });\n                if (items.length && (!target || target === placeholder)) return;\n                const previous = this.getSortable(placeholder);\n                const insertTarget = findInsertTarget(sortable.target, target, placeholder, x, y, sortable === previous && data.moved !== target);\n                if (insertTarget === false) return;\n                if (insertTarget && placeholder === insertTarget) return;\n                if (sortable !== previous) {\n                    previous.remove(placeholder);\n                    data.moved = target;\n                } else delete data.moved;\n                sortable.insert(placeholder, insertTarget);\n                this.touched.add(sortable);\n            },\n            events: [\n                \"move\"\n            ]\n        },\n        methods: {\n            init (e) {\n                const { target: target, button: button, defaultPrevented: defaultPrevented } = e;\n                const [placeholder] = this.items.filter((el)=>el.contains(target));\n                if (!placeholder || defaultPrevented || button > 0 || isInput(target) || target.closest(`.${this.clsNoDrag}`) || this.handle && !target.closest(this.handle)) return;\n                e.preventDefault();\n                this.touched = /* @__PURE__ */ new Set([\n                    this\n                ]);\n                this.placeholder = placeholder;\n                this.origin = {\n                    target: target,\n                    index: index(placeholder),\n                    ...this.pos\n                };\n                on(document, pointerMove$1, this.move);\n                on(document, pointerUp$1, this.end);\n                if (!this.threshold) this.start(e);\n            },\n            start (e) {\n                this.drag = appendDrag(this.$container, this.placeholder);\n                const { left: left, top: top } = this.placeholder.getBoundingClientRect();\n                assign(this.origin, {\n                    offsetLeft: this.pos.x - left,\n                    offsetTop: this.pos.y - top\n                });\n                addClass(this.drag, this.clsDrag, this.clsCustom);\n                addClass(this.placeholder, this.clsPlaceholder);\n                addClass(this.items, this.clsItem);\n                addClass(document.documentElement, this.clsDragState);\n                trigger(this.$el, \"start\", [\n                    this,\n                    this.placeholder\n                ]);\n                trackScroll(this.pos);\n                this.move(e);\n            },\n            move (e) {\n                if (this.drag) this.$emit(\"move\");\n                else if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) this.start(e);\n            },\n            end () {\n                off(document, pointerMove$1, this.move);\n                off(document, pointerUp$1, this.end);\n                if (!this.drag) return;\n                untrackScroll();\n                const sortable = this.getSortable(this.placeholder);\n                if (this === sortable) {\n                    if (this.origin.index !== index(this.placeholder)) trigger(this.$el, \"moved\", [\n                        this,\n                        this.placeholder\n                    ]);\n                } else {\n                    trigger(sortable.$el, \"added\", [\n                        sortable,\n                        this.placeholder\n                    ]);\n                    trigger(this.$el, \"removed\", [\n                        this,\n                        this.placeholder\n                    ]);\n                }\n                trigger(this.$el, \"stop\", [\n                    this,\n                    this.placeholder\n                ]);\n                remove$1(this.drag);\n                this.drag = null;\n                for (const { clsPlaceholder: clsPlaceholder, clsItem: clsItem } of this.touched)for (const sortable2 of this.touched)removeClass(sortable2.items, clsPlaceholder, clsItem);\n                this.touched = null;\n                removeClass(document.documentElement, this.clsDragState);\n            },\n            insert (element, target) {\n                addClass(this.items, this.clsItem);\n                const insert = ()=>target ? before(target, element) : append(this.target, element);\n                this.animate(insert);\n            },\n            remove (element) {\n                if (!this.target.contains(element)) return;\n                this.animate(()=>remove$1(element));\n            },\n            getSortable (element) {\n                do {\n                    const sortable = this.$getComponent(element, \"sortable\");\n                    if (sortable && (sortable === this || this.group !== false && sortable.group === this.group)) return sortable;\n                }while (element = parent(element));\n            }\n        }\n    };\n    let trackTimer;\n    function trackScroll(pos) {\n        let last = Date.now();\n        trackTimer = setInterval(()=>{\n            let { x: x, y: y } = pos;\n            y += document.scrollingElement.scrollTop;\n            const dist = (Date.now() - last) * 0.3;\n            last = Date.now();\n            scrollParents(document.elementFromPoint(x, pos.y)).reverse().some((scrollEl)=>{\n                let { scrollTop: scroll, scrollHeight: scrollHeight } = scrollEl;\n                const { top: top, bottom: bottom, height: height2 } = offsetViewport(scrollEl);\n                if (top < y && top + 35 > y) scroll -= dist;\n                else if (bottom > y && bottom - 35 < y) scroll += dist;\n                else return;\n                if (scroll > 0 && scroll < scrollHeight - height2) {\n                    scrollEl.scrollTop = scroll;\n                    return true;\n                }\n            });\n        }, 15);\n    }\n    function untrackScroll() {\n        clearInterval(trackTimer);\n    }\n    function appendDrag(container, element) {\n        let clone;\n        if (isTag(element, \"li\", \"tr\")) {\n            clone = $(\"<div>\");\n            append(clone, element.cloneNode(true).children);\n            for (const attribute of element.getAttributeNames())attr(clone, attribute, element.getAttribute(attribute));\n        } else clone = element.cloneNode(true);\n        append(container, clone);\n        css(clone, \"margin\", \"0\", \"important\");\n        css(clone, {\n            boxSizing: \"border-box\",\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n            padding: css(element, \"padding\")\n        });\n        height(clone.firstElementChild, height(element.firstElementChild));\n        return clone;\n    }\n    function findTarget(items, point) {\n        return items[findIndex(items, (item)=>pointInRect(point, item.getBoundingClientRect()))];\n    }\n    function findInsertTarget(list, target, placeholder, x, y, sameList) {\n        if (!children(list).length) return;\n        const rect = target.getBoundingClientRect();\n        if (!sameList) {\n            if (!isHorizontal(list, placeholder)) return y < rect.top + rect.height / 2 ? target : target.nextElementSibling;\n            return target;\n        }\n        const placeholderRect = placeholder.getBoundingClientRect();\n        const sameRow = linesIntersect([\n            rect.top,\n            rect.bottom\n        ], [\n            placeholderRect.top,\n            placeholderRect.bottom\n        ]);\n        const [pointerPos, lengthProp, startProp, endProp] = sameRow ? [\n            x,\n            \"width\",\n            \"left\",\n            \"right\"\n        ] : [\n            y,\n            \"height\",\n            \"top\",\n            \"bottom\"\n        ];\n        const diff = placeholderRect[lengthProp] < rect[lengthProp] ? rect[lengthProp] - placeholderRect[lengthProp] : 0;\n        if (placeholderRect[startProp] < rect[startProp]) {\n            if (diff && pointerPos < rect[startProp] + diff) return false;\n            return target.nextElementSibling;\n        }\n        if (diff && pointerPos > rect[endProp] - diff) return false;\n        return target;\n    }\n    function isHorizontal(list, placeholder) {\n        const single = children(list).length === 1;\n        if (single) append(list, placeholder);\n        const items = children(list);\n        const isHorizontal2 = items.some((el, i)=>{\n            const rectA = el.getBoundingClientRect();\n            return items.slice(i + 1).some((el2)=>{\n                const rectB = el2.getBoundingClientRect();\n                return !linesIntersect([\n                    rectA.left,\n                    rectA.right\n                ], [\n                    rectB.left,\n                    rectB.right\n                ]);\n            });\n        });\n        if (single) remove$1(placeholder);\n        return isHorizontal2;\n    }\n    function linesIntersect(lineA, lineB) {\n        return lineA[1] > lineB[0] && lineB[1] > lineA[0];\n    }\n    var Position = {\n        props: {\n            pos: String,\n            offset: null,\n            flip: Boolean,\n            shift: Boolean,\n            inset: Boolean\n        },\n        data: {\n            pos: `bottom-${isRtl ? \"right\" : \"left\"}`,\n            offset: false,\n            flip: true,\n            shift: true,\n            inset: false\n        },\n        connected () {\n            this.pos = this.$props.pos.split(\"-\").concat(\"center\").slice(0, 2);\n            [this.dir, this.align] = this.pos;\n            this.axis = includes([\n                \"top\",\n                \"bottom\"\n            ], this.dir) ? \"y\" : \"x\";\n        },\n        methods: {\n            positionAt (element, target, boundary) {\n                let offset = [\n                    this.getPositionOffset(element),\n                    this.getShiftOffset(element)\n                ];\n                const placement = [\n                    this.flip && \"flip\",\n                    this.shift && \"shift\"\n                ];\n                const attach = {\n                    element: [\n                        this.inset ? this.dir : flipPosition(this.dir),\n                        this.align\n                    ],\n                    target: [\n                        this.dir,\n                        this.align\n                    ]\n                };\n                if (this.axis === \"y\") {\n                    for(const prop in attach)attach[prop].reverse();\n                    offset.reverse();\n                    placement.reverse();\n                }\n                const restoreScrollPosition = storeScrollPosition(element);\n                const elDim = dimensions$1(element);\n                css(element, {\n                    top: -elDim.height,\n                    left: -elDim.width\n                });\n                positionAt(element, target, {\n                    attach: attach,\n                    offset: offset,\n                    boundary: boundary,\n                    placement: placement,\n                    viewportOffset: this.getViewportOffset(element)\n                });\n                restoreScrollPosition();\n            },\n            getPositionOffset (element) {\n                return toPx(this.offset === false ? css(element, \"--uk-position-offset\") : this.offset, this.axis === \"x\" ? \"width\" : \"height\", element) * (includes([\n                    \"left\",\n                    \"top\"\n                ], this.dir) ? -1 : 1) * (this.inset ? -1 : 1);\n            },\n            getShiftOffset (element) {\n                return this.align === \"center\" ? 0 : toPx(css(element, \"--uk-position-shift-offset\"), this.axis === \"y\" ? \"width\" : \"height\", element) * (includes([\n                    \"left\",\n                    \"top\"\n                ], this.align) ? 1 : -1);\n            },\n            getViewportOffset (element) {\n                return toPx(css(element, \"--uk-position-viewport-offset\"));\n            }\n        }\n    };\n    function storeScrollPosition(element) {\n        const scrollElement = scrollParent(element);\n        const { scrollTop: scrollTop } = scrollElement;\n        return ()=>{\n            if (scrollTop !== scrollElement.scrollTop) scrollElement.scrollTop = scrollTop;\n        };\n    }\n    var tooltip = {\n        mixins: [\n            Container,\n            Togglable,\n            Position\n        ],\n        data: {\n            pos: \"top\",\n            animation: [\n                \"uk-animation-scale-up\"\n            ],\n            duration: 100,\n            cls: \"uk-active\"\n        },\n        connected () {\n            makeFocusable(this.$el);\n        },\n        disconnected () {\n            this.hide();\n        },\n        methods: {\n            show () {\n                if (this.isToggled(this.tooltip || null)) return;\n                const { delay: delay = 0, title: title } = parseProps(this.$options);\n                if (!title) return;\n                const titleAttr = attr(this.$el, \"title\");\n                const off = on(this.$el, [\n                    \"blur\",\n                    pointerLeave\n                ], (e)=>!isTouch(e) && this.hide());\n                this.reset = ()=>{\n                    attr(this.$el, {\n                        title: titleAttr,\n                        \"aria-describedby\": null\n                    });\n                    off();\n                };\n                const id = generateId(this);\n                attr(this.$el, {\n                    title: null,\n                    \"aria-describedby\": id\n                });\n                clearTimeout(this.showTimer);\n                this.showTimer = setTimeout(()=>this._show(title, id), delay);\n            },\n            async hide () {\n                var _a;\n                if (matches(this.$el, \"input:focus\")) return;\n                clearTimeout(this.showTimer);\n                if (this.isToggled(this.tooltip || null)) await this.toggleElement(this.tooltip, false, false);\n                (_a = this.reset) == null || _a.call(this);\n                remove$1(this.tooltip);\n                this.tooltip = null;\n            },\n            async _show (title, id) {\n                this.tooltip = append(this.container, `<div id=\"${id}\" class=\"uk-${this.$options.name}\" role=\"tooltip\"> <div class=\"uk-${this.$options.name}-inner\">${title}</div> </div>`);\n                on(this.tooltip, \"toggled\", (e, toggled)=>{\n                    if (!toggled) return;\n                    const update = ()=>this.positionAt(this.tooltip, this.$el);\n                    update();\n                    const [dir, align] = getAlignment(this.tooltip, this.$el, this.pos);\n                    this.origin = this.axis === \"y\" ? `${flipPosition(dir)}-${align}` : `${align}-${flipPosition(dir)}`;\n                    const handlers = [\n                        once(document, `keydown ${pointerDown$1}`, this.hide, false, (e2)=>e2.type === pointerDown$1 && !this.$el.contains(e2.target) || e2.type === \"keydown\" && e2.keyCode === keyMap.ESC),\n                        on([\n                            document,\n                            ...overflowParents(this.$el)\n                        ], \"scroll\", update, {\n                            passive: true\n                        })\n                    ];\n                    once(this.tooltip, \"hide\", ()=>handlers.forEach((handler)=>handler()), {\n                        self: true\n                    });\n                });\n                if (!await this.toggleElement(this.tooltip, true)) this.hide();\n            }\n        },\n        events: {\n            // Clicking a button does not give it focus on all browsers and platforms\n            // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#clicking_and_focus\n            [`focus ${pointerEnter} ${pointerDown$1}`] (e) {\n                if (!isTouch(e)) this.show();\n            }\n        }\n    };\n    function makeFocusable(el) {\n        if (!isFocusable(el)) attr(el, \"tabindex\", \"0\");\n    }\n    function getAlignment(el, target, [dir, align]) {\n        const elOffset = offset(el);\n        const targetOffset = offset(target);\n        const properties = [\n            [\n                \"left\",\n                \"right\"\n            ],\n            [\n                \"top\",\n                \"bottom\"\n            ]\n        ];\n        for (const props2 of properties){\n            if (elOffset[props2[0]] >= targetOffset[props2[1]]) {\n                dir = props2[1];\n                break;\n            }\n            if (elOffset[props2[1]] <= targetOffset[props2[0]]) {\n                dir = props2[0];\n                break;\n            }\n        }\n        const props = includes(properties[0], dir) ? properties[1] : properties[0];\n        if (elOffset[props[0]] === targetOffset[props[0]]) align = props[0];\n        else if (elOffset[props[1]] === targetOffset[props[1]]) align = props[1];\n        else align = \"center\";\n        return [\n            dir,\n            align\n        ];\n    }\n    function parseProps(options) {\n        const { el: el, id: id, data: data$1 } = options;\n        return [\n            \"delay\",\n            \"title\"\n        ].reduce((obj, key)=>({\n                [key]: data(el, key),\n                ...obj\n            }), {\n            ...parseOptions(data(el, id), [\n                \"title\"\n            ]),\n            ...data$1\n        });\n    }\n    var upload = {\n        mixins: [\n            I18n\n        ],\n        i18n: {\n            invalidMime: \"Invalid File Type: %s\",\n            invalidName: \"Invalid File Name: %s\",\n            invalidSize: \"Invalid File Size: %s Kilobytes Max\"\n        },\n        props: {\n            allow: String,\n            clsDragover: String,\n            concurrent: Number,\n            maxSize: Number,\n            method: String,\n            mime: String,\n            multiple: Boolean,\n            name: String,\n            params: Object,\n            type: String,\n            url: String\n        },\n        data: {\n            allow: false,\n            clsDragover: \"uk-dragover\",\n            concurrent: 1,\n            maxSize: 0,\n            method: \"POST\",\n            mime: false,\n            multiple: false,\n            name: \"files[]\",\n            params: {},\n            type: \"\",\n            url: \"\",\n            abort: noop,\n            beforeAll: noop,\n            beforeSend: noop,\n            complete: noop,\n            completeAll: noop,\n            error: noop,\n            fail: noop,\n            load: noop,\n            loadEnd: noop,\n            loadStart: noop,\n            progress: noop\n        },\n        events: {\n            change (e) {\n                if (!matches(e.target, 'input[type=\"file\"]')) return;\n                e.preventDefault();\n                if (e.target.files) this.upload(e.target.files);\n                e.target.value = \"\";\n            },\n            drop (e) {\n                stop(e);\n                const transfer = e.dataTransfer;\n                if (!(transfer == null ? void 0 : transfer.files)) return;\n                removeClass(this.$el, this.clsDragover);\n                this.upload(transfer.files);\n            },\n            dragenter (e) {\n                stop(e);\n            },\n            dragover (e) {\n                stop(e);\n                addClass(this.$el, this.clsDragover);\n            },\n            dragleave (e) {\n                stop(e);\n                removeClass(this.$el, this.clsDragover);\n            }\n        },\n        methods: {\n            async upload (files) {\n                files = toArray(files);\n                if (!files.length) return;\n                trigger(this.$el, \"upload\", [\n                    files\n                ]);\n                for (const file of files){\n                    if (this.maxSize && this.maxSize * 1e3 < file.size) {\n                        this.fail(this.t(\"invalidSize\", this.maxSize));\n                        return;\n                    }\n                    if (this.allow && !match$1(this.allow, file.name)) {\n                        this.fail(this.t(\"invalidName\", this.allow));\n                        return;\n                    }\n                    if (this.mime && !match$1(this.mime, file.type)) {\n                        this.fail(this.t(\"invalidMime\", this.mime));\n                        return;\n                    }\n                }\n                if (!this.multiple) files = files.slice(0, 1);\n                this.beforeAll(this, files);\n                const chunks = chunk(files, this.concurrent);\n                const upload = async (files2)=>{\n                    const data = new FormData();\n                    files2.forEach((file)=>data.append(this.name, file));\n                    for(const key in this.params)data.append(key, this.params[key]);\n                    try {\n                        const xhr = await ajax(this.url, {\n                            data: data,\n                            method: this.method,\n                            responseType: this.type,\n                            beforeSend: (env)=>{\n                                const { xhr: xhr2 } = env;\n                                on(xhr2.upload, \"progress\", this.progress);\n                                for (const type of [\n                                    \"loadStart\",\n                                    \"load\",\n                                    \"loadEnd\",\n                                    \"abort\"\n                                ])on(xhr2, type.toLowerCase(), this[type]);\n                                return this.beforeSend(env);\n                            }\n                        });\n                        this.complete(xhr);\n                        if (chunks.length) await upload(chunks.shift());\n                        else this.completeAll(xhr);\n                    } catch (e) {\n                        this.error(e);\n                    }\n                };\n                await upload(chunks.shift());\n            }\n        }\n    };\n    function match$1(pattern, path) {\n        return path.match(new RegExp(`^${pattern.replace(/\\//g, \"\\\\/\").replace(/\\*\\*/g, \"(\\\\/[^\\\\/]+)*\").replace(/\\*/g, \"[^\\\\/]+\").replace(/((?!\\\\))\\?/g, \"$1.\")}$`, \"i\"));\n    }\n    function chunk(files, size) {\n        const chunks = [];\n        for(let i = 0; i < files.length; i += size)chunks.push(files.slice(i, i + size));\n        return chunks;\n    }\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n    function ajax(url, options) {\n        const env = {\n            data: null,\n            method: \"GET\",\n            headers: {},\n            xhr: new XMLHttpRequest(),\n            beforeSend: noop,\n            responseType: \"\",\n            ...options\n        };\n        return Promise.resolve().then(()=>env.beforeSend(env)).then(()=>send(url, env));\n    }\n    function send(url, env) {\n        return new Promise((resolve, reject)=>{\n            const { xhr: xhr } = env;\n            for(const prop in env){\n                if (prop in xhr) try {\n                    xhr[prop] = env[prop];\n                } catch (e) {}\n            }\n            xhr.open(env.method.toUpperCase(), url);\n            for(const header in env.headers)xhr.setRequestHeader(header, env.headers[header]);\n            on(xhr, \"load\", ()=>{\n                if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) resolve(xhr);\n                else reject(assign(Error(xhr.statusText), {\n                    xhr: xhr,\n                    status: xhr.status\n                }));\n            });\n            on(xhr, \"error\", ()=>reject(assign(Error(\"Network Error\"), {\n                    xhr: xhr\n                })));\n            on(xhr, \"timeout\", ()=>reject(assign(Error(\"Network Timeout\"), {\n                    xhr: xhr\n                })));\n            xhr.send(env.data);\n        });\n    }\n    var components$1 = /*#__PURE__*/ Object.freeze({\n        __proto__: null,\n        Countdown: countdown,\n        Filter: filter,\n        Lightbox: lightbox,\n        LightboxPanel: LightboxPanel,\n        Notification: notification,\n        Parallax: parallax,\n        Slider: slider,\n        SliderParallax: sliderParallax,\n        Slideshow: slideshow,\n        SlideshowParallax: sliderParallax,\n        Sortable: sortable,\n        Tooltip: tooltip,\n        Upload: upload\n    });\n    function boot(App) {\n        if (inBrowser && window.MutationObserver) {\n            if (document.body) requestAnimationFrame(()=>init(App));\n            else new MutationObserver((records, observer)=>{\n                if (document.body) {\n                    init(App);\n                    observer.disconnect();\n                }\n            }).observe(document.documentElement, {\n                childList: true\n            });\n        }\n    }\n    function init(App) {\n        trigger(document, \"uikit:init\", App);\n        if (document.body) apply(document.body, connect);\n        new MutationObserver((records)=>records.forEach(applyChildListMutation)).observe(document, {\n            subtree: true,\n            childList: true\n        });\n        new MutationObserver((records)=>records.forEach(applyAttributeMutation)).observe(document, {\n            subtree: true,\n            attributes: true\n        });\n        App._initialized = true;\n    }\n    function applyChildListMutation({ addedNodes: addedNodes, removedNodes: removedNodes }) {\n        for (const node of addedNodes)apply(node, connect);\n        for (const node of removedNodes)apply(node, disconnect);\n    }\n    function applyAttributeMutation({ target: target, attributeName: attributeName }) {\n        var _a;\n        const name = getComponentName(attributeName);\n        if (name) {\n            if (hasAttr(target, attributeName)) {\n                createComponent(name, target);\n                return;\n            }\n            (_a = getComponent(target, name)) == null || _a.$destroy();\n        }\n    }\n    function connect(node) {\n        const components2 = getComponents(node);\n        for(const name in getComponents(node))callConnected(components2[name]);\n        for (const attributeName of node.getAttributeNames()){\n            const name = getComponentName(attributeName);\n            name && createComponent(name, node);\n        }\n    }\n    function disconnect(node) {\n        const components2 = getComponents(node);\n        for(const name in getComponents(node))callDisconnected(components2[name]);\n    }\n    function getComponentName(attribute) {\n        if (startsWith(attribute, \"data-\")) attribute = attribute.slice(5);\n        const cmp = components$2[attribute];\n        return cmp && (isPlainObject(cmp) ? cmp : cmp.options).name;\n    }\n    globalApi(App);\n    instanceApi(App);\n    var Accordion = {\n        mixins: [\n            Class,\n            Togglable\n        ],\n        props: {\n            animation: Boolean,\n            targets: String,\n            active: null,\n            collapsible: Boolean,\n            multiple: Boolean,\n            toggle: String,\n            content: String,\n            offset: Number\n        },\n        data: {\n            targets: \"> *\",\n            active: false,\n            animation: true,\n            collapsible: true,\n            multiple: false,\n            clsOpen: \"uk-open\",\n            toggle: \"> .uk-accordion-title\",\n            content: \"> .uk-accordion-content\",\n            offset: 0\n        },\n        computed: {\n            items: ({ targets: targets }, $el)=>$$(targets, $el),\n            toggles ({ toggle: toggle }) {\n                return this.items.map((item)=>$(toggle, item));\n            },\n            contents ({ content: content }) {\n                return this.items.map((item)=>{\n                    var _a;\n                    return ((_a = item._wrapper) == null ? void 0 : _a.firstElementChild) || $(content, item);\n                });\n            }\n        },\n        watch: {\n            items (items, prev) {\n                if (prev || hasClass(items, this.clsOpen)) return;\n                const active = this.active !== false && items[Number(this.active)] || !this.collapsible && items[0];\n                if (active) this.toggle(active, false);\n            },\n            toggles () {\n                this.$emit();\n            },\n            contents (items) {\n                for (const el of items){\n                    const isOpen = hasClass(this.items.find((item)=>item.contains(el)), this.clsOpen);\n                    hide(el, !isOpen);\n                }\n                this.$emit();\n            }\n        },\n        observe: lazyload(),\n        events: [\n            {\n                name: \"click keydown\",\n                delegate () {\n                    return `${this.targets} ${this.$props.toggle}`;\n                },\n                async handler (e) {\n                    var _a;\n                    if (e.type === \"keydown\" && e.keyCode !== keyMap.SPACE) return;\n                    e.preventDefault();\n                    (_a = this._off) == null || _a.call(this);\n                    this._off = keepScrollPosition(e.target);\n                    await this.toggle(index(this.toggles, e.current));\n                    this._off();\n                }\n            },\n            {\n                name: \"shown hidden\",\n                self: true,\n                delegate () {\n                    return this.targets;\n                },\n                handler () {\n                    this.$emit();\n                }\n            }\n        ],\n        update () {\n            const activeItems = filter$1(this.items, `.${this.clsOpen}`);\n            for(const index2 in this.items){\n                const toggle = this.toggles[index2];\n                const content = this.contents[index2];\n                if (!toggle || !content) continue;\n                toggle.id = generateId(this, toggle);\n                content.id = generateId(this, content);\n                const active = includes(activeItems, this.items[index2]);\n                attr(toggle, {\n                    role: isTag(toggle, \"a\") ? \"button\" : null,\n                    \"aria-controls\": content.id,\n                    \"aria-expanded\": active,\n                    \"aria-disabled\": !this.collapsible && activeItems.length < 2 && active\n                });\n                attr(content, {\n                    role: \"region\",\n                    \"aria-labelledby\": toggle.id\n                });\n                if (isTag(content, \"ul\")) attr(children(content), \"role\", \"presentation\");\n            }\n        },\n        methods: {\n            toggle (item, animate) {\n                item = this.items[getIndex(item, this.items)];\n                let items = [\n                    item\n                ];\n                const activeItems = filter$1(this.items, `.${this.clsOpen}`);\n                if (!this.multiple && !includes(activeItems, items[0])) items = items.concat(activeItems);\n                if (!this.collapsible && activeItems.length < 2 && includes(activeItems, item)) return;\n                return Promise.all(items.map((el)=>this.toggleElement(el, !includes(activeItems, el), (el2, show)=>{\n                        toggleClass(el2, this.clsOpen, show);\n                        if (animate === false || !this.animation) {\n                            hide($(this.content, el2), !show);\n                            return;\n                        }\n                        return transition(el2, show, this);\n                    })));\n            }\n        }\n    };\n    function hide(el, hide2) {\n        el && (el.hidden = hide2);\n    }\n    async function transition(el, show, { content: content, duration: duration, velocity: velocity, transition: transition2 }) {\n        var _a;\n        content = ((_a = el._wrapper) == null ? void 0 : _a.firstElementChild) || $(content, el);\n        if (!el._wrapper) el._wrapper = wrapAll(content, \"<div>\");\n        const wrapper = el._wrapper;\n        css(wrapper, \"overflow\", \"hidden\");\n        const currentHeight = toFloat(css(wrapper, \"height\"));\n        await Transition.cancel(wrapper);\n        hide(content, false);\n        const endHeight = sumBy([\n            \"marginTop\",\n            \"marginBottom\"\n        ], (prop)=>css(content, prop)) + dimensions$1(content).height;\n        const percent = currentHeight / endHeight;\n        duration = (velocity * endHeight + duration) * (show ? 1 - percent : percent);\n        css(wrapper, \"height\", currentHeight);\n        await Transition.start(wrapper, {\n            height: show ? endHeight : 0\n        }, duration, transition2);\n        unwrap(content);\n        delete el._wrapper;\n        if (!show) hide(content, true);\n    }\n    function keepScrollPosition(el) {\n        const scrollElement = scrollParent(el, true);\n        let frame;\n        (function scroll() {\n            frame = requestAnimationFrame(()=>{\n                const { top: top } = el.getBoundingClientRect();\n                if (top < 0) scrollElement.scrollTop += top;\n                scroll();\n            });\n        })();\n        return ()=>requestAnimationFrame(()=>cancelAnimationFrame(frame));\n    }\n    var alert = {\n        mixins: [\n            Class,\n            Togglable\n        ],\n        args: \"animation\",\n        props: {\n            animation: Boolean,\n            close: String\n        },\n        data: {\n            animation: true,\n            selClose: \".uk-alert-close\",\n            duration: 150\n        },\n        events: {\n            name: \"click\",\n            delegate () {\n                return this.selClose;\n            },\n            handler (e) {\n                e.preventDefault();\n                this.close();\n            }\n        },\n        methods: {\n            async close () {\n                await this.toggleElement(this.$el, false, animate);\n                this.$destroy(true);\n            }\n        }\n    };\n    function animate(el, show, { duration: duration, transition: transition, velocity: velocity }) {\n        const height = toFloat(css(el, \"height\"));\n        css(el, \"height\", height);\n        return Transition.start(el, {\n            height: 0,\n            marginTop: 0,\n            marginBottom: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            borderTop: 0,\n            borderBottom: 0,\n            opacity: 0\n        }, velocity * height + duration, transition);\n    }\n    var Video = {\n        args: \"autoplay\",\n        props: {\n            automute: Boolean,\n            autoplay: Boolean\n        },\n        data: {\n            automute: false,\n            autoplay: true\n        },\n        connected () {\n            if (this.autoplay === \"inview\" && !hasAttr(this.$el, \"preload\")) this.$el.preload = \"none\";\n            if (isTag(this.$el, \"iframe\") && !hasAttr(this.$el, \"allow\")) this.$el.allow = \"autoplay\";\n            if (this.automute) mute(this.$el);\n        },\n        observe: [\n            intersection({\n                filter: ({ $el: $el, autoplay: autoplay })=>autoplay && isVideo($el),\n                handler ([{ isIntersecting: isIntersecting }]) {\n                    if (isIntersecting) play(this.$el);\n                    else pause(this.$el);\n                },\n                args: {\n                    intersecting: false\n                },\n                options: ({ $el: $el, autoplay: autoplay })=>({\n                        root: autoplay === \"inview\" ? null : parent($el)\n                    })\n            })\n        ]\n    };\n    var cover = {\n        mixins: [\n            Video\n        ],\n        props: {\n            width: Number,\n            height: Number\n        },\n        data: {\n            automute: true\n        },\n        events: {\n            \"load loadedmetadata\" () {\n                this.$emit(\"resize\");\n            }\n        },\n        observe: resize({\n            target: ({ $el: $el })=>[\n                    getPositionedParent($el) || parent($el)\n                ],\n            filter: ({ $el: $el })=>!useObjectFit($el)\n        }),\n        update: {\n            read () {\n                if (useObjectFit(this.$el)) return;\n                const { ratio: ratio, cover: cover } = Dimensions;\n                const { $el: $el, width: width, height: height } = this;\n                let dim = {\n                    width: width,\n                    height: height\n                };\n                if (!width || !height) {\n                    const intrinsic = {\n                        width: $el.naturalWidth || $el.videoWidth || $el.clientWidth,\n                        height: $el.naturalHeight || $el.videoHeight || $el.clientHeight\n                    };\n                    if (width) dim = ratio(intrinsic, \"width\", width);\n                    else if (height) dim = ratio(intrinsic, \"height\", height);\n                    else dim = intrinsic;\n                }\n                const { offsetHeight: coverHeight, offsetWidth: coverWidth } = getPositionedParent($el) || parent($el);\n                const coverDim = cover(dim, {\n                    width: coverWidth + (coverWidth % 2 ? 1 : 0),\n                    height: coverHeight + (coverHeight % 2 ? 1 : 0)\n                });\n                if (!coverDim.width || !coverDim.height) return false;\n                return coverDim;\n            },\n            write ({ height: height, width: width }) {\n                css(this.$el, {\n                    height: height,\n                    width: width\n                });\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    function getPositionedParent(el) {\n        while(el = parent(el)){\n            if (css(el, \"position\") !== \"static\") return el;\n        }\n    }\n    function useObjectFit(el) {\n        return isTag(el, \"img\", \"video\");\n    }\n    let active;\n    var drop = {\n        mixins: [\n            Container,\n            Position,\n            Togglable\n        ],\n        args: \"pos\",\n        props: {\n            mode: \"list\",\n            toggle: Boolean,\n            boundary: Boolean,\n            boundaryX: Boolean,\n            boundaryY: Boolean,\n            target: Boolean,\n            targetX: Boolean,\n            targetY: Boolean,\n            stretch: Boolean,\n            delayShow: Number,\n            delayHide: Number,\n            autoUpdate: Boolean,\n            clsDrop: String,\n            animateOut: Boolean,\n            bgScroll: Boolean,\n            closeOnScroll: Boolean\n        },\n        data: {\n            mode: [\n                \"click\",\n                \"hover\"\n            ],\n            toggle: \"- *\",\n            boundary: false,\n            boundaryX: false,\n            boundaryY: false,\n            target: false,\n            targetX: false,\n            targetY: false,\n            stretch: false,\n            delayShow: 0,\n            delayHide: 800,\n            autoUpdate: true,\n            clsDrop: false,\n            animateOut: false,\n            bgScroll: true,\n            animation: [\n                \"uk-animation-fade\"\n            ],\n            cls: \"uk-open\",\n            container: false,\n            closeOnScroll: false\n        },\n        computed: {\n            boundary ({ boundary: boundary, boundaryX: boundaryX, boundaryY: boundaryY }, $el) {\n                return [\n                    query(boundaryX || boundary, $el) || window,\n                    query(boundaryY || boundary, $el) || window\n                ];\n            },\n            target ({ target: target, targetX: targetX, targetY: targetY }, $el) {\n                targetX || (targetX = target || this.targetEl);\n                targetY || (targetY = target || this.targetEl);\n                return [\n                    targetX === true ? window : query(targetX, $el),\n                    targetY === true ? window : query(targetY, $el)\n                ];\n            }\n        },\n        created () {\n            this.tracker = new MouseTracker();\n        },\n        beforeConnect () {\n            this.clsDrop = this.$props.clsDrop || `uk-${this.$options.name}`;\n        },\n        connected () {\n            addClass(this.$el, \"uk-drop\", this.clsDrop);\n            if (this.toggle && !this.targetEl) this.targetEl = createToggleComponent(this);\n            this._style = pick(this.$el.style, [\n                \"width\",\n                \"height\"\n            ]);\n        },\n        disconnected () {\n            if (this.isActive()) {\n                this.hide(false);\n                active = null;\n            }\n            css(this.$el, this._style);\n        },\n        observe: lazyload({\n            target: ({ toggle: toggle, $el: $el })=>query(toggle, $el),\n            targets: ({ $el: $el })=>$el\n        }),\n        events: [\n            {\n                name: \"click\",\n                delegate () {\n                    return \".uk-drop-close\";\n                },\n                handler (e) {\n                    e.preventDefault();\n                    this.hide(false);\n                }\n            },\n            {\n                name: \"click\",\n                delegate () {\n                    return 'a[href*=\"#\"]';\n                },\n                handler ({ defaultPrevented: defaultPrevented, current: current }) {\n                    const { hash: hash } = current;\n                    if (!defaultPrevented && hash && isSameSiteAnchor(current) && !this.$el.contains($(hash))) this.hide(false);\n                }\n            },\n            {\n                name: \"beforescroll\",\n                handler () {\n                    this.hide(false);\n                }\n            },\n            {\n                name: \"toggle\",\n                self: true,\n                handler (e, toggle) {\n                    e.preventDefault();\n                    if (this.isToggled()) this.hide(false);\n                    else this.show(toggle == null ? void 0 : toggle.$el, false);\n                }\n            },\n            {\n                name: \"toggleshow\",\n                self: true,\n                handler (e, toggle) {\n                    e.preventDefault();\n                    this.show(toggle == null ? void 0 : toggle.$el);\n                }\n            },\n            {\n                name: \"togglehide\",\n                self: true,\n                handler (e) {\n                    e.preventDefault();\n                    if (!matches(this.$el, \":focus,:hover\")) this.hide();\n                }\n            },\n            {\n                name: `${pointerEnter} focusin`,\n                filter () {\n                    return includes(this.mode, \"hover\");\n                },\n                handler (e) {\n                    if (!isTouch(e)) this.clearTimers();\n                }\n            },\n            {\n                name: `${pointerLeave} focusout`,\n                filter () {\n                    return includes(this.mode, \"hover\");\n                },\n                handler (e) {\n                    if (!isTouch(e) && e.relatedTarget) this.hide();\n                }\n            },\n            {\n                name: \"toggled\",\n                self: true,\n                handler (e, toggled) {\n                    if (toggled) {\n                        this.clearTimers();\n                        this.position();\n                    }\n                }\n            },\n            {\n                name: \"show\",\n                self: true,\n                handler () {\n                    active = this;\n                    this.tracker.init();\n                    attr(this.targetEl, \"aria-expanded\", true);\n                    const handlers = [\n                        listenForResize(this),\n                        listenForEscClose(this),\n                        listenForBackgroundClose(this),\n                        this.autoUpdate && listenForScroll(this),\n                        this.closeOnScroll && listenForScrollClose(this),\n                        !this.bgScroll && preventBackgroundScroll(this.$el)\n                    ];\n                    once(this.$el, \"hide\", ()=>handlers.forEach((handler)=>handler && handler()), {\n                        self: true\n                    });\n                }\n            },\n            {\n                name: \"beforehide\",\n                self: true,\n                handler () {\n                    this.clearTimers();\n                }\n            },\n            {\n                name: \"hide\",\n                handler ({ target: target }) {\n                    if (this.$el !== target) {\n                        active = active === null && this.$el.contains(target) && this.isToggled() ? this : active;\n                        return;\n                    }\n                    active = this.isActive() ? null : active;\n                    this.tracker.cancel();\n                    attr(this.targetEl, \"aria-expanded\", null);\n                }\n            }\n        ],\n        update: {\n            write () {\n                if (this.isToggled() && !hasClass(this.$el, this.clsEnter)) this.position();\n            }\n        },\n        methods: {\n            show (target = this.targetEl, delay = true) {\n                if (this.isToggled() && target && this.targetEl && target !== this.targetEl) this.hide(false, false);\n                this.targetEl = target;\n                this.clearTimers();\n                if (this.isActive()) return;\n                if (active) {\n                    if (delay && active.isDelaying) {\n                        this.showTimer = setTimeout(()=>matches(target, \":hover\") && this.show(), 10);\n                        return;\n                    }\n                    let prev;\n                    while(active && prev !== active && !active.$el.contains(this.$el)){\n                        prev = active;\n                        active.hide(false, false);\n                    }\n                }\n                if (this.container && parent(this.$el) !== this.container) append(this.container, this.$el);\n                this.showTimer = setTimeout(()=>this.toggleElement(this.$el, true), delay && this.delayShow || 0);\n            },\n            hide (delay = true, animate = true) {\n                const hide = ()=>this.toggleElement(this.$el, false, this.animateOut && animate);\n                this.clearTimers();\n                this.isDelayedHide = delay;\n                this.isDelaying = getPositionedElements(this.$el).some((el)=>this.tracker.movesTo(el));\n                if (delay && this.isDelaying) this.hideTimer = setTimeout(this.hide, 50);\n                else if (delay && this.delayHide) this.hideTimer = setTimeout(hide, this.delayHide);\n                else hide();\n            },\n            clearTimers () {\n                clearTimeout(this.showTimer);\n                clearTimeout(this.hideTimer);\n                this.showTimer = null;\n                this.hideTimer = null;\n                this.isDelaying = false;\n            },\n            isActive () {\n                return active === this;\n            },\n            position () {\n                removeClass(this.$el, \"uk-drop-stack\");\n                css(this.$el, this._style);\n                this.$el.hidden = true;\n                const viewports = this.target.map((target)=>getViewport$1(this.$el, target));\n                const viewportOffset = this.getViewportOffset(this.$el);\n                const dirs = [\n                    [\n                        0,\n                        [\n                            \"x\",\n                            \"width\",\n                            \"left\",\n                            \"right\"\n                        ]\n                    ],\n                    [\n                        1,\n                        [\n                            \"y\",\n                            \"height\",\n                            \"top\",\n                            \"bottom\"\n                        ]\n                    ]\n                ];\n                for (const [i, [axis, prop]] of dirs)if (this.axis !== axis && includes([\n                    axis,\n                    true\n                ], this.stretch)) css(this.$el, {\n                    [prop]: Math.min(offset(this.boundary[i])[prop], viewports[i][prop] - 2 * viewportOffset),\n                    [`overflow-${axis}`]: \"auto\"\n                });\n                const maxWidth = viewports[0].width - 2 * viewportOffset;\n                this.$el.hidden = false;\n                css(this.$el, \"maxWidth\", \"\");\n                if (this.$el.offsetWidth > maxWidth) addClass(this.$el, \"uk-drop-stack\");\n                css(this.$el, \"maxWidth\", maxWidth);\n                this.positionAt(this.$el, this.target, this.boundary);\n                for (const [i, [axis, prop, start, end]] of dirs)if (this.axis === axis && includes([\n                    axis,\n                    true\n                ], this.stretch)) {\n                    const positionOffset = Math.abs(this.getPositionOffset(this.$el));\n                    const targetOffset = offset(this.target[i]);\n                    const elOffset = offset(this.$el);\n                    css(this.$el, {\n                        [prop]: (targetOffset[start] > elOffset[start] ? targetOffset[this.inset ? end : start] - Math.max(offset(this.boundary[i])[start], viewports[i][start] + viewportOffset) : Math.min(offset(this.boundary[i])[end], viewports[i][end] - viewportOffset) - targetOffset[this.inset ? start : end]) - positionOffset,\n                        [`overflow-${axis}`]: \"auto\"\n                    });\n                    this.positionAt(this.$el, this.target, this.boundary);\n                }\n            }\n        }\n    };\n    function getPositionedElements(el) {\n        const result = [];\n        apply(el, (el2)=>css(el2, \"position\") !== \"static\" && result.push(el2));\n        return result;\n    }\n    function getViewport$1(el, target) {\n        return offsetViewport(overflowParents(target).find((parent2)=>parent2.contains(el)));\n    }\n    function createToggleComponent(drop) {\n        const { $el: $el } = drop.$create(\"toggle\", query(drop.toggle, drop.$el), {\n            target: drop.$el,\n            mode: drop.mode\n        });\n        attr($el, \"aria-haspopup\", true);\n        return $el;\n    }\n    function listenForResize(drop) {\n        const update = ()=>drop.$emit();\n        const off = [\n            observeViewportResize(update),\n            observeResize(overflowParents(drop.$el).concat(drop.target), update)\n        ];\n        return ()=>off.map((observer)=>observer.disconnect());\n    }\n    function listenForScroll(drop, fn = ()=>drop.$emit()) {\n        return on([\n            document,\n            ...overflowParents(drop.$el)\n        ], \"scroll\", fn, {\n            passive: true\n        });\n    }\n    function listenForEscClose(drop) {\n        return on(document, \"keydown\", (e)=>{\n            if (e.keyCode === keyMap.ESC) drop.hide(false);\n        });\n    }\n    function listenForScrollClose(drop) {\n        return listenForScroll(drop, ()=>drop.hide(false));\n    }\n    function listenForBackgroundClose(drop) {\n        return on(document, pointerDown$1, ({ target: target })=>{\n            if (drop.$el.contains(target)) return;\n            once(document, `${pointerUp$1} ${pointerCancel} scroll`, ({ defaultPrevented: defaultPrevented, type: type, target: newTarget })=>{\n                if (!defaultPrevented && type === pointerUp$1 && target === newTarget && !(drop.targetEl && within(target, drop.targetEl))) drop.hide(false);\n            }, true);\n        });\n    }\n    var Dropnav = {\n        mixins: [\n            Class,\n            Container\n        ],\n        props: {\n            align: String,\n            clsDrop: String,\n            boundary: Boolean,\n            dropbar: Boolean,\n            dropbarAnchor: Boolean,\n            duration: Number,\n            mode: Boolean,\n            offset: Boolean,\n            stretch: Boolean,\n            delayShow: Boolean,\n            delayHide: Boolean,\n            target: Boolean,\n            targetX: Boolean,\n            targetY: Boolean,\n            animation: Boolean,\n            animateOut: Boolean,\n            closeOnScroll: Boolean\n        },\n        data: {\n            align: isRtl ? \"right\" : \"left\",\n            clsDrop: \"uk-dropdown\",\n            clsDropbar: \"uk-dropnav-dropbar\",\n            boundary: true,\n            dropbar: false,\n            dropbarAnchor: false,\n            duration: 200,\n            container: false,\n            selNavItem: \"> li > a, > ul > li > a\"\n        },\n        computed: {\n            dropbarAnchor: ({ dropbarAnchor: dropbarAnchor }, $el)=>query(dropbarAnchor, $el) || $el,\n            dropbar ({ dropbar: dropbar }) {\n                if (!dropbar) return null;\n                dropbar = this._dropbar || query(dropbar, this.$el) || $(`+ .${this.clsDropbar}`, this.$el);\n                return dropbar ? dropbar : this._dropbar = $(\"<div></div>\");\n            },\n            dropbarOffset () {\n                return 0;\n            },\n            dropContainer (_, $el) {\n                return this.container || $el;\n            },\n            dropdowns ({ clsDrop: clsDrop }, $el) {\n                var _a;\n                const dropdowns = $$(`.${clsDrop}`, $el);\n                if (this.dropContainer !== $el) for (const el of $$(`.${clsDrop}`, this.dropContainer)){\n                    const target = (_a = this.getDropdown(el)) == null ? void 0 : _a.targetEl;\n                    if (!includes(dropdowns, el) && target && this.$el.contains(target)) dropdowns.push(el);\n                }\n                return dropdowns;\n            },\n            items ({ selNavItem: selNavItem }, $el) {\n                return $$(selNavItem, $el);\n            }\n        },\n        watch: {\n            dropbar (dropbar) {\n                addClass(dropbar, \"uk-dropbar\", \"uk-dropbar-top\", this.clsDropbar, `uk-${this.$options.name}-dropbar`);\n            },\n            dropdowns () {\n                this.initializeDropdowns();\n            }\n        },\n        connected () {\n            this.initializeDropdowns();\n        },\n        disconnected () {\n            remove$1(this._dropbar);\n            delete this._dropbar;\n        },\n        events: [\n            {\n                name: \"mouseover focusin\",\n                delegate () {\n                    return this.selNavItem;\n                },\n                handler ({ current: current }) {\n                    const active2 = this.getActive();\n                    if (active2 && includes(active2.mode, \"hover\") && active2.targetEl && !current.contains(active2.targetEl) && !active2.isDelaying) active2.hide(false);\n                }\n            },\n            {\n                name: \"keydown\",\n                self: true,\n                delegate () {\n                    return this.selNavItem;\n                },\n                handler (e) {\n                    var _a;\n                    const { current: current, keyCode: keyCode } = e;\n                    const active2 = this.getActive();\n                    if (keyCode === keyMap.DOWN && (active2 == null ? void 0 : active2.targetEl) === current) {\n                        e.preventDefault();\n                        (_a = $(selFocusable, active2.$el)) == null || _a.focus();\n                    }\n                    handleNavItemNavigation(e, this.items, active2);\n                }\n            },\n            {\n                name: \"keydown\",\n                el () {\n                    return this.dropContainer;\n                },\n                delegate () {\n                    return `.${this.clsDrop}`;\n                },\n                handler (e) {\n                    var _a;\n                    const { current: current, keyCode: keyCode } = e;\n                    if (!includes(this.dropdowns, current)) return;\n                    const active2 = this.getActive();\n                    let next = -1;\n                    if (keyCode === keyMap.HOME) next = 0;\n                    else if (keyCode === keyMap.END) next = \"last\";\n                    else if (keyCode === keyMap.UP) next = \"previous\";\n                    else if (keyCode === keyMap.DOWN) next = \"next\";\n                    else if (keyCode === keyMap.ESC) (_a = active2.targetEl) == null || _a.focus();\n                    if (~next) {\n                        e.preventDefault();\n                        const elements = $$(selFocusable, current);\n                        elements[getIndex(next, elements, findIndex(elements, (el)=>matches(el, \":focus\")))].focus();\n                    }\n                    handleNavItemNavigation(e, this.items, active2);\n                }\n            },\n            {\n                name: \"mouseleave\",\n                el () {\n                    return this.dropbar;\n                },\n                filter () {\n                    return this.dropbar;\n                },\n                handler () {\n                    const active2 = this.getActive();\n                    if (active2 && includes(active2.mode, \"hover\") && !this.dropdowns.some((el)=>matches(el, \":hover\"))) active2.hide();\n                }\n            },\n            {\n                name: \"beforeshow\",\n                el () {\n                    return this.dropContainer;\n                },\n                filter () {\n                    return this.dropbar;\n                },\n                handler ({ target: target }) {\n                    if (!this.isDropbarDrop(target)) return;\n                    if (this.dropbar.previousElementSibling !== this.dropbarAnchor) after(this.dropbarAnchor, this.dropbar);\n                    addClass(target, `${this.clsDrop}-dropbar`);\n                }\n            },\n            {\n                name: \"show\",\n                el () {\n                    return this.dropContainer;\n                },\n                filter () {\n                    return this.dropbar;\n                },\n                handler ({ target: target }) {\n                    if (!this.isDropbarDrop(target)) return;\n                    const drop = this.getDropdown(target);\n                    const adjustHeight = ()=>{\n                        const targetOffsets = parents(target, `.${this.clsDrop}`).concat(target).map((el)=>offset(el));\n                        const minTop = Math.min(...targetOffsets.map(({ top: top })=>top));\n                        const maxBottom = Math.max(...targetOffsets.map(({ bottom: bottom })=>bottom));\n                        const dropbarOffset = offset(this.dropbar);\n                        css(this.dropbar, \"top\", this.dropbar.offsetTop - (dropbarOffset.top - minTop) - this.dropbarOffset);\n                        this.transitionTo(maxBottom - minTop + toFloat(css(target, \"marginBottom\")) + this.dropbarOffset, target);\n                    };\n                    this._observer = observeResize([\n                        drop.$el,\n                        ...drop.target\n                    ], adjustHeight);\n                    adjustHeight();\n                }\n            },\n            {\n                name: \"beforehide\",\n                el () {\n                    return this.dropContainer;\n                },\n                filter () {\n                    return this.dropbar;\n                },\n                handler (e) {\n                    const active2 = this.getActive();\n                    if (matches(this.dropbar, \":hover\") && active2.$el === e.target && includes(active2.mode, \"hover\") && active2.isDelayedHide && !this.items.some((el)=>active2.targetEl !== el && matches(el, \":focus\"))) e.preventDefault();\n                }\n            },\n            {\n                name: \"hide\",\n                el () {\n                    return this.dropContainer;\n                },\n                filter () {\n                    return this.dropbar;\n                },\n                handler ({ target: target }) {\n                    var _a;\n                    if (!this.isDropbarDrop(target)) return;\n                    (_a = this._observer) == null || _a.disconnect();\n                    const active2 = this.getActive();\n                    if (!active2 || active2.$el === target) this.transitionTo(0);\n                }\n            }\n        ],\n        methods: {\n            getActive () {\n                var _a;\n                return includes(this.dropdowns, (_a = active) == null ? void 0 : _a.$el) && active;\n            },\n            async transitionTo (newHeight, el) {\n                const { dropbar: dropbar } = this;\n                const oldHeight = height(dropbar);\n                el = oldHeight < newHeight && el;\n                await Transition.cancel([\n                    el,\n                    dropbar\n                ]);\n                css(el, \"clipPath\", `polygon(0 0,100% 0,100% ${oldHeight}px,0 ${oldHeight}px)`);\n                height(dropbar, oldHeight);\n                await Promise.all([\n                    Transition.start(dropbar, {\n                        height: newHeight\n                    }, this.duration),\n                    Transition.start(el, {\n                        clipPath: `polygon(0 0,100% 0,100% ${newHeight}px,0 ${newHeight}px)`\n                    }, this.duration).finally(()=>css(el, {\n                            clipPath: \"\"\n                        }))\n                ]).catch(noop);\n            },\n            getDropdown (el) {\n                return this.$getComponent(el, \"drop\") || this.$getComponent(el, \"dropdown\");\n            },\n            isDropbarDrop (el) {\n                return this.getDropdown(el) && hasClass(el, this.clsDrop);\n            },\n            initializeDropdowns () {\n                this.$create(\"drop\", this.dropdowns.filter((el)=>!this.getDropdown(el)), {\n                    ...this.$props,\n                    flip: false,\n                    shift: true,\n                    pos: `bottom-${this.align}`,\n                    boundary: this.boundary === true ? this.$el : this.boundary\n                });\n            }\n        }\n    };\n    function handleNavItemNavigation(e, toggles, active2) {\n        var _a, _b, _c;\n        const { current: current, keyCode: keyCode } = e;\n        let next = -1;\n        if (keyCode === keyMap.HOME) next = 0;\n        else if (keyCode === keyMap.END) next = \"last\";\n        else if (keyCode === keyMap.LEFT) next = \"previous\";\n        else if (keyCode === keyMap.RIGHT) next = \"next\";\n        else if (keyCode === keyMap.TAB) {\n            (_a = active2.targetEl) == null || _a.focus();\n            (_b = active2.hide) == null || _b.call(active2, false);\n        }\n        if (~next) {\n            e.preventDefault();\n            (_c = active2.hide) == null || _c.call(active2, false);\n            toggles[getIndex(next, toggles, toggles.indexOf(active2.targetEl || current))].focus();\n        }\n    }\n    var formCustom = {\n        mixins: [\n            Class\n        ],\n        args: \"target\",\n        props: {\n            target: Boolean\n        },\n        data: {\n            target: false\n        },\n        computed: {\n            input: (_, $el)=>$(selInput, $el),\n            state () {\n                return this.input.nextElementSibling;\n            },\n            target ({ target: target }, $el) {\n                return target && (target === true && parent(this.input) === $el && this.input.nextElementSibling || $(target, $el));\n            }\n        },\n        update () {\n            var _a;\n            const { target: target, input: input } = this;\n            if (!target) return;\n            let option;\n            const prop = isInput(target) ? \"value\" : \"textContent\";\n            const prev = target[prop];\n            const value = ((_a = input.files) == null ? void 0 : _a[0]) ? input.files[0].name : matches(input, \"select\") && (option = $$(\"option\", input).filter((el)=>el.selected)[0]) ? option.textContent : input.value;\n            if (prev !== value) target[prop] = value;\n        },\n        events: [\n            {\n                name: \"change\",\n                handler () {\n                    this.$emit();\n                }\n            },\n            {\n                name: \"reset\",\n                el () {\n                    return this.$el.closest(\"form\");\n                },\n                handler () {\n                    this.$emit();\n                }\n            }\n        ]\n    };\n    var grid = {\n        extends: Margin,\n        mixins: [\n            Class\n        ],\n        name: \"grid\",\n        props: {\n            masonry: Boolean,\n            parallax: String,\n            parallaxStart: String,\n            parallaxEnd: String,\n            parallaxJustify: Boolean\n        },\n        data: {\n            margin: \"uk-grid-margin\",\n            clsStack: \"uk-grid-stack\",\n            masonry: false,\n            parallax: 0,\n            parallaxStart: 0,\n            parallaxEnd: 0,\n            parallaxJustify: false\n        },\n        connected () {\n            this.masonry && addClass(this.$el, \"uk-flex-top\", \"uk-flex-wrap-top\");\n        },\n        observe: scroll$1({\n            filter: ({ parallax: parallax, parallaxJustify: parallaxJustify })=>parallax || parallaxJustify\n        }),\n        update: [\n            {\n                write ({ rows: rows }) {\n                    toggleClass(this.$el, this.clsStack, !rows.some((row)=>row.length > 1));\n                },\n                events: [\n                    \"resize\"\n                ]\n            },\n            {\n                read (data) {\n                    const { rows: rows } = data;\n                    let { masonry: masonry, parallax: parallax, parallaxJustify: parallaxJustify, margin: margin } = this;\n                    parallax = Math.max(0, toPx(parallax));\n                    if (!(masonry || parallax || parallaxJustify) || positionedAbsolute(rows) || rows[0].some((el, i)=>rows.some((row)=>row[i] && row[i].offsetWidth !== el.offsetWidth))) return data.translates = data.scrollColumns = false;\n                    let gutter = getGutter(rows, margin);\n                    let columns;\n                    let translates;\n                    if (masonry) [columns, translates] = applyMasonry(rows, gutter, masonry === \"next\");\n                    else columns = transpose(rows);\n                    const columnHeights = columns.map((column)=>sumBy(column, \"offsetHeight\") + gutter * (column.length - 1));\n                    const height = Math.max(0, ...columnHeights);\n                    let scrollColumns;\n                    let parallaxStart;\n                    let parallaxEnd;\n                    if (parallax || parallaxJustify) {\n                        scrollColumns = columnHeights.map((hgt, i)=>parallaxJustify ? height - hgt + parallax : parallax / (i % 2 || 8));\n                        if (!parallaxJustify) parallax = Math.max(...columnHeights.map((hgt, i)=>hgt + scrollColumns[i] - height));\n                        parallaxStart = toPx(this.parallaxStart, \"height\", this.$el, true);\n                        parallaxEnd = toPx(this.parallaxEnd, \"height\", this.$el, true);\n                    }\n                    return {\n                        columns: columns,\n                        translates: translates,\n                        scrollColumns: scrollColumns,\n                        parallaxStart: parallaxStart,\n                        parallaxEnd: parallaxEnd,\n                        padding: parallax,\n                        height: translates ? height : \"\"\n                    };\n                },\n                write ({ height: height, padding: padding }) {\n                    css(this.$el, \"paddingBottom\", padding || \"\");\n                    height !== false && css(this.$el, \"height\", height);\n                },\n                events: [\n                    \"resize\"\n                ]\n            },\n            {\n                read ({ rows: rows, scrollColumns: scrollColumns, parallaxStart: parallaxStart, parallaxEnd: parallaxEnd }) {\n                    if (scrollColumns && positionedAbsolute(rows)) return false;\n                    return {\n                        scrolled: scrollColumns ? scrolledOver(this.$el, parallaxStart, parallaxEnd) : false\n                    };\n                },\n                write ({ columns: columns, scrolled: scrolled, scrollColumns: scrollColumns, translates: translates }) {\n                    if (!scrolled && !translates) return;\n                    columns.forEach((column, i)=>column.forEach((el, j)=>{\n                            let [x, y] = translates && translates[i][j] || [\n                                0,\n                                0\n                            ];\n                            if (scrolled) y += scrolled * scrollColumns[i];\n                            css(el, \"transform\", `translate(${x}px, ${y}px)`);\n                        }));\n                },\n                events: [\n                    \"scroll\",\n                    \"resize\"\n                ]\n            }\n        ]\n    };\n    function positionedAbsolute(rows) {\n        return rows.flat().some((el)=>css(el, \"position\") === \"absolute\");\n    }\n    function applyMasonry(rows, gutter, next) {\n        const columns = [];\n        const translates = [];\n        const columnHeights = Array(rows[0].length).fill(0);\n        let rowHeights = 0;\n        for (let row of rows){\n            if (isRtl) row = row.reverse();\n            let height = 0;\n            for(const j in row){\n                const { offsetWidth: offsetWidth, offsetHeight: offsetHeight } = row[j];\n                const index = next ? j : columnHeights.indexOf(Math.min(...columnHeights));\n                push(columns, index, row[j]);\n                push(translates, index, [\n                    (index - j) * offsetWidth * (isRtl ? -1 : 1),\n                    columnHeights[index] - rowHeights\n                ]);\n                columnHeights[index] += offsetHeight + gutter;\n                height = Math.max(height, offsetHeight);\n            }\n            rowHeights += height + gutter;\n        }\n        return [\n            columns,\n            translates\n        ];\n    }\n    function getGutter(rows, cls) {\n        const node = rows.flat().find((el)=>hasClass(el, cls));\n        return toFloat(node ? css(node, \"marginTop\") : css(rows[0][0], \"paddingLeft\"));\n    }\n    function transpose(rows) {\n        const columns = [];\n        for (const row of rows)for(const i in row)push(columns, i, row[i]);\n        return columns;\n    }\n    function push(array, index, value) {\n        if (!array[index]) array[index] = [];\n        array[index].push(value);\n    }\n    var heightMatch = {\n        args: \"target\",\n        props: {\n            target: String,\n            row: Boolean\n        },\n        data: {\n            target: \"> *\",\n            row: true\n        },\n        computed: {\n            elements: ({ target: target }, $el)=>$$(target, $el)\n        },\n        observe: resize({\n            target: ({ $el: $el, elements: elements })=>elements.reduce((elements2, el)=>elements2.concat(el, ...el.children), [\n                    $el\n                ])\n        }),\n        update: {\n            read () {\n                return {\n                    rows: (this.row ? getRows(this.elements) : [\n                        this.elements\n                    ]).map(match)\n                };\n            },\n            write ({ rows: rows }) {\n                for (const { heights: heights, elements: elements } of rows)elements.forEach((el, i)=>css(el, \"minHeight\", heights[i]));\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    function match(elements) {\n        if (elements.length < 2) return {\n            heights: [\n                \"\"\n            ],\n            elements: elements\n        };\n        let heights = elements.map(getHeight);\n        const max = Math.max(...heights);\n        return {\n            heights: elements.map((el, i)=>heights[i].toFixed(2) === max.toFixed(2) ? \"\" : max),\n            elements: elements\n        };\n    }\n    function getHeight(element) {\n        const style = pick(element.style, [\n            \"display\",\n            \"minHeight\"\n        ]);\n        if (!isVisible(element)) css(element, \"display\", \"block\", \"important\");\n        css(element, \"minHeight\", \"\");\n        const height = dimensions$1(element).height - boxModelAdjust(element, \"height\", \"content-box\");\n        css(element, style);\n        return height;\n    }\n    var heightViewport = {\n        props: {\n            expand: Boolean,\n            offsetTop: Boolean,\n            offsetBottom: Boolean,\n            minHeight: Number\n        },\n        data: {\n            expand: false,\n            offsetTop: false,\n            offsetBottom: false,\n            minHeight: 0\n        },\n        // check for offsetTop change\n        observe: [\n            viewport({\n                filter: ({ expand: expand })=>expand\n            }),\n            resize({\n                target: ({ $el: $el })=>scrollParents($el)\n            })\n        ],\n        update: {\n            read () {\n                if (!isVisible(this.$el)) return false;\n                let minHeight = \"\";\n                const box = boxModelAdjust(this.$el, \"height\", \"content-box\");\n                const { body: body, scrollingElement: scrollingElement } = document;\n                const scrollElement = scrollParent(this.$el);\n                const { height: viewportHeight } = offsetViewport(scrollElement === body ? scrollingElement : scrollElement);\n                const isScrollingElement = scrollingElement === scrollElement || body === scrollElement;\n                minHeight = `calc(${isScrollingElement ? \"100vh\" : `${viewportHeight}px`}`;\n                if (this.expand) {\n                    const diff = dimensions$1(scrollElement).height - dimensions$1(this.$el).height;\n                    minHeight += ` - ${diff}px`;\n                } else {\n                    if (this.offsetTop) {\n                        if (isScrollingElement) {\n                            const offsetTopEl = this.offsetTop === true ? this.$el : query(this.offsetTop, this.$el);\n                            const top = offsetPosition(offsetTopEl)[0] - offsetPosition(scrollElement)[0];\n                            minHeight += top > 0 && top < viewportHeight / 2 ? ` - ${top}px` : \"\";\n                        } else minHeight += ` - ${css(scrollElement, \"paddingTop\")}`;\n                    }\n                    if (this.offsetBottom === true) minHeight += ` - ${dimensions$1(this.$el.nextElementSibling).height}px`;\n                    else if (isNumeric(this.offsetBottom)) minHeight += ` - ${this.offsetBottom}vh`;\n                    else if (this.offsetBottom && endsWith(this.offsetBottom, \"px\")) minHeight += ` - ${toFloat(this.offsetBottom)}px`;\n                    else if (isString(this.offsetBottom)) minHeight += ` - ${dimensions$1(query(this.offsetBottom, this.$el)).height}px`;\n                }\n                minHeight += `${box ? ` - ${box}px` : \"\"})`;\n                return {\n                    minHeight: minHeight\n                };\n            },\n            write ({ minHeight: minHeight }) {\n                css(this.$el, \"minHeight\", `max(${this.minHeight || 0}px, ${minHeight})`);\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    var closeIcon = '<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"1\" y1=\"1\" x2=\"13\" y2=\"13\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13\" y1=\"1\" x2=\"1\" y2=\"13\"/></svg>';\n    var closeLarge = '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" x1=\"1\" y1=\"1\" x2=\"19\" y2=\"19\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" x1=\"19\" y1=\"1\" x2=\"1\" y2=\"19\"/></svg>';\n    var dropParentIcon = '<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"1 3.5 6 8.5 11 3.5\"/></svg>';\n    var marker = '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"9\" y=\"4\" width=\"1\" height=\"11\"/><rect x=\"4\" y=\"9\" width=\"11\" height=\"1\"/></svg>';\n    var navParentIconLarge = '<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"1 4 7 10 13 4\"/></svg>';\n    var navParentIcon = '<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"1 3.5 6 8.5 11 3.5\"/></svg>';\n    var navbarParentIcon = '<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"1 3.5 6 8.5 11 3.5\"/></svg>';\n    var navbarToggleIcon = '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><style>.uk-navbar-toggle-animate svg&gt;[class*=&quot;line-&quot;]{transition:0.2s ease-in-out;transition-property:transform, opacity;transform-origin:center;opacity:1}.uk-navbar-toggle svg&gt;.line-3{opacity:0}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-3{opacity:1}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-2{transform:rotate(45deg)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-3{transform:rotate(-45deg)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-1,.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-4{opacity:0}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-1{transform:translateY(6px) scaleX(0)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-4{transform:translateY(-6px) scaleX(0)}</style><rect class=\"line-1\" y=\"3\" width=\"20\" height=\"2\"/><rect class=\"line-2\" y=\"9\" width=\"20\" height=\"2\"/><rect class=\"line-3\" y=\"9\" width=\"20\" height=\"2\"/><rect class=\"line-4\" y=\"15\" width=\"20\" height=\"2\"/></svg>';\n    var overlayIcon = '<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><rect x=\"19\" y=\"0\" width=\"1\" height=\"40\"/><rect x=\"0\" y=\"19\" width=\"40\" height=\"1\"/></svg>';\n    var paginationNext = '<svg width=\"7\" height=\"12\" viewBox=\"0 0 7 12\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"1 1 6 6 1 11\"/></svg>';\n    var paginationPrevious = '<svg width=\"7\" height=\"12\" viewBox=\"0 0 7 12\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"6 1 1 6 6 11\"/></svg>';\n    var searchIcon = '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9\" cy=\"9\" r=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M14,14 L18,18 L14,14 Z\"/></svg>';\n    var searchLarge = '<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.8\" cx=\"17.5\" cy=\"17.5\" r=\"16.5\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.8\" x1=\"38\" y1=\"39\" x2=\"29\" y2=\"30\"/></svg>';\n    var searchNavbar = '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"23\" y1=\"23\" x2=\"17\" y2=\"17\"/></svg>';\n    var slidenavNextLarge = '<svg width=\"25\" height=\"40\" viewBox=\"0 0 25 40\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"2\" points=\"4.002,38.547 22.527,20.024 4,1.5\"/></svg>';\n    var slidenavNext = '<svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" points=\"1.225,23 12.775,12 1.225,1\"/></svg>';\n    var slidenavPreviousLarge = '<svg width=\"25\" height=\"40\" viewBox=\"0 0 25 40\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"2\" points=\"20.527,1.5 2,20.024 20.525,38.547\"/></svg>';\n    var slidenavPrevious = '<svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" points=\"12.775,1 1.225,12 12.775,23\"/></svg>';\n    var spinner = '<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><circle fill=\"none\" stroke=\"#000\" cx=\"15\" cy=\"15\" r=\"14\"/></svg>';\n    var totop = '<svg width=\"18\" height=\"10\" viewBox=\"0 0 18 10\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" points=\"1 9 9 1 17 9\"/></svg>';\n    var Svg = {\n        args: \"src\",\n        props: {\n            width: Number,\n            height: Number,\n            ratio: Number\n        },\n        data: {\n            ratio: 1\n        },\n        connected () {\n            this.svg = this.getSvg().then((el)=>{\n                if (!this._connected) return;\n                const svg = insertSVG(el, this.$el);\n                if (this.svgEl && svg !== this.svgEl) remove$1(this.svgEl);\n                applyWidthAndHeight.call(this, svg, el);\n                return this.svgEl = svg;\n            }, noop);\n        },\n        disconnected () {\n            this.svg.then((svg)=>{\n                if (this._connected) return;\n                if (isVoidElement(this.$el)) this.$el.hidden = false;\n                remove$1(svg);\n                this.svgEl = null;\n            });\n            this.svg = null;\n        },\n        methods: {\n            async getSvg () {}\n        }\n    };\n    function insertSVG(el, root) {\n        if (isVoidElement(root) || isTag(root, \"canvas\")) {\n            root.hidden = true;\n            const next = root.nextElementSibling;\n            return equals(el, next) ? next : after(root, el);\n        }\n        const last = root.lastElementChild;\n        return equals(el, last) ? last : append(root, el);\n    }\n    function equals(el, other) {\n        return isTag(el, \"svg\") && isTag(other, \"svg\") && el.innerHTML === other.innerHTML;\n    }\n    function applyWidthAndHeight(el, ref) {\n        const props = [\n            \"width\",\n            \"height\"\n        ];\n        let dimensions = props.map((prop)=>this[prop]);\n        if (!dimensions.some((val)=>val)) dimensions = props.map((prop)=>attr(ref, prop));\n        const viewBox = attr(ref, \"viewBox\");\n        if (viewBox && !dimensions.some((val)=>val)) dimensions = viewBox.split(\" \").slice(2);\n        dimensions.forEach((val, i)=>attr(el, props[i], toFloat(val) * this.ratio || null));\n    }\n    const icons = {\n        spinner: spinner,\n        totop: totop,\n        marker: marker,\n        \"close-icon\": closeIcon,\n        \"close-large\": closeLarge,\n        \"drop-parent-icon\": dropParentIcon,\n        \"nav-parent-icon\": navParentIcon,\n        \"nav-parent-icon-large\": navParentIconLarge,\n        \"navbar-parent-icon\": navbarParentIcon,\n        \"navbar-toggle-icon\": navbarToggleIcon,\n        \"overlay-icon\": overlayIcon,\n        \"pagination-next\": paginationNext,\n        \"pagination-previous\": paginationPrevious,\n        \"search-icon\": searchIcon,\n        \"search-large\": searchLarge,\n        \"search-navbar\": searchNavbar,\n        \"slidenav-next\": slidenavNext,\n        \"slidenav-next-large\": slidenavNextLarge,\n        \"slidenav-previous\": slidenavPrevious,\n        \"slidenav-previous-large\": slidenavPreviousLarge\n    };\n    const Icon = {\n        install: install$1,\n        mixins: [\n            Svg\n        ],\n        args: \"icon\",\n        props: {\n            icon: String\n        },\n        isIcon: true,\n        beforeConnect () {\n            addClass(this.$el, \"uk-icon\");\n        },\n        methods: {\n            async getSvg () {\n                const icon = getIcon(this.icon);\n                if (!icon) throw \"Icon not found.\";\n                return icon;\n            }\n        }\n    };\n    const IconComponent = {\n        args: false,\n        extends: Icon,\n        data: (vm)=>({\n                icon: hyphenate(vm.constructor.options.name)\n            }),\n        beforeConnect () {\n            addClass(this.$el, this.$options.id);\n        }\n    };\n    const NavParentIcon = {\n        extends: IconComponent,\n        beforeConnect () {\n            const icon = this.$props.icon;\n            this.icon = this.$el.closest(\".uk-nav-primary\") ? `${icon}-large` : icon;\n        }\n    };\n    const Search = {\n        extends: IconComponent,\n        mixins: [\n            I18n\n        ],\n        i18n: {\n            toggle: \"Open Search\",\n            submit: \"Submit Search\"\n        },\n        beforeConnect () {\n            this.icon = hasClass(this.$el, \"uk-search-icon\") && parents(this.$el, \".uk-search-large\").length ? \"search-large\" : parents(this.$el, \".uk-search-navbar\").length ? \"search-navbar\" : this.$props.icon;\n            if (hasAttr(this.$el, \"aria-label\")) return;\n            if (hasClass(this.$el, \"uk-search-toggle\") || hasClass(this.$el, \"uk-navbar-toggle\")) {\n                const label = this.t(\"toggle\");\n                attr(this.$el, \"aria-label\", label);\n            } else {\n                const button = this.$el.closest(\"a,button\");\n                if (button) {\n                    const label = this.t(\"submit\");\n                    attr(button, \"aria-label\", label);\n                }\n            }\n        }\n    };\n    const Spinner = {\n        extends: IconComponent,\n        beforeConnect () {\n            attr(this.$el, \"role\", \"status\");\n        },\n        methods: {\n            async getSvg () {\n                const icon = await Icon.methods.getSvg.call(this);\n                if (this.ratio !== 1) css($(\"circle\", icon), \"strokeWidth\", 1 / this.ratio);\n                return icon;\n            }\n        }\n    };\n    const ButtonComponent = {\n        extends: IconComponent,\n        mixins: [\n            I18n\n        ],\n        beforeConnect () {\n            const button = this.$el.closest(\"a,button\");\n            attr(button, \"role\", this.role !== null && isTag(button, \"a\") ? \"button\" : this.role);\n            const label = this.t(\"label\");\n            if (label && !hasAttr(button, \"aria-label\")) attr(button, \"aria-label\", label);\n        }\n    };\n    const Slidenav = {\n        extends: ButtonComponent,\n        beforeConnect () {\n            addClass(this.$el, \"uk-slidenav\");\n            const icon = this.$props.icon;\n            this.icon = hasClass(this.$el, \"uk-slidenav-large\") ? `${icon}-large` : icon;\n        }\n    };\n    const NavbarToggleIcon = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Open menu\"\n        }\n    };\n    const Close = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Close\"\n        },\n        beforeConnect () {\n            this.icon = `close-${hasClass(this.$el, \"uk-close-large\") ? \"large\" : \"icon\"}`;\n        }\n    };\n    const Marker = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Open\"\n        }\n    };\n    const Totop = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Back to top\"\n        }\n    };\n    const PaginationNext = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Next page\"\n        },\n        data: {\n            role: null\n        }\n    };\n    const PaginationPrevious = {\n        extends: ButtonComponent,\n        i18n: {\n            label: \"Previous page\"\n        },\n        data: {\n            role: null\n        }\n    };\n    const parsed = {};\n    function install$1(UIkit) {\n        UIkit.icon.add = (name, svg)=>{\n            const added = isString(name) ? {\n                [name]: svg\n            } : name;\n            each(added, (svg2, name2)=>{\n                icons[name2] = svg2;\n                delete parsed[name2];\n            });\n            if (UIkit._initialized) apply(document.body, (el)=>each(UIkit.getComponents(el), (cmp)=>{\n                    cmp.$options.isIcon && cmp.icon in added && cmp.$reset();\n                }));\n        };\n    }\n    function getIcon(icon) {\n        if (!icons[icon]) return null;\n        if (!parsed[icon]) parsed[icon] = $((icons[applyRtl(icon)] || icons[icon]).trim());\n        return parsed[icon].cloneNode(true);\n    }\n    function applyRtl(icon) {\n        return isRtl ? swap(swap(icon, \"left\", \"right\"), \"previous\", \"next\") : icon;\n    }\n    const nativeLazyLoad = inBrowser && \"loading\" in HTMLImageElement.prototype;\n    var img = {\n        args: \"dataSrc\",\n        props: {\n            dataSrc: String,\n            sources: String,\n            margin: String,\n            target: String,\n            loading: String\n        },\n        data: {\n            dataSrc: \"\",\n            sources: false,\n            margin: \"50%\",\n            target: false,\n            loading: \"lazy\"\n        },\n        connected () {\n            if (this.loading !== \"lazy\") {\n                this.load();\n                return;\n            }\n            if (nativeLazyLoad && isImg(this.$el)) {\n                this.$el.loading = \"lazy\";\n                setSrcAttrs(this.$el);\n            }\n            ensureSrcAttribute(this.$el);\n        },\n        disconnected () {\n            if (this.img) this.img.onload = \"\";\n            delete this.img;\n        },\n        observe: intersection({\n            target: ({ $el: $el, $props: $props })=>[\n                    $el,\n                    ...queryAll($props.target, $el)\n                ],\n            handler (entries, observer) {\n                this.load();\n                observer.disconnect();\n            },\n            options: ({ margin: margin })=>({\n                    rootMargin: margin\n                }),\n            filter: ({ loading: loading })=>loading === \"lazy\"\n        }),\n        methods: {\n            load () {\n                if (this.img) return this.img;\n                const image = isImg(this.$el) ? this.$el : getImageFromElement(this.$el, this.dataSrc, this.sources);\n                removeAttr(image, \"loading\");\n                setSrcAttrs(this.$el, image.currentSrc);\n                return this.img = image;\n            }\n        }\n    };\n    function setSrcAttrs(el, src) {\n        if (isImg(el)) {\n            const parentNode = parent(el);\n            const elements = isTag(parentNode, \"picture\") ? children(parentNode) : [\n                el\n            ];\n            elements.forEach((el2)=>setSourceProps(el2, el2));\n        } else if (src) {\n            const change = !includes(el.style.backgroundImage, src);\n            if (change) {\n                css(el, \"backgroundImage\", `url(${escape(src)})`);\n                trigger(el, createEvent(\"load\", false));\n            }\n        }\n    }\n    const srcProps = [\n        \"data-src\",\n        \"data-srcset\",\n        \"sizes\"\n    ];\n    function setSourceProps(sourceEl, targetEl) {\n        for (const prop of srcProps){\n            const value = data(sourceEl, prop);\n            if (value) attr(targetEl, prop.replace(/^(data-)+/, \"\"), value);\n        }\n    }\n    function getImageFromElement(el, src, sources) {\n        const img = new Image();\n        wrapInPicture(img, sources);\n        setSourceProps(el, img);\n        img.onload = ()=>{\n            setSrcAttrs(el, img.currentSrc);\n        };\n        attr(img, \"src\", src);\n        return img;\n    }\n    function wrapInPicture(img, sources) {\n        sources = parseSources(sources);\n        if (sources.length) {\n            const picture = fragment(\"<picture>\");\n            for (const attrs of sources){\n                const source = fragment(\"<source>\");\n                attr(source, attrs);\n                append(picture, source);\n            }\n            append(picture, img);\n        }\n    }\n    function parseSources(sources) {\n        if (!sources) return [];\n        if (startsWith(sources, \"[\")) try {\n            sources = JSON.parse(sources);\n        } catch (e) {\n            sources = [];\n        }\n        else sources = parseOptions(sources);\n        if (!isArray(sources)) sources = [\n            sources\n        ];\n        return sources.filter((source)=>!isEmpty(source));\n    }\n    function ensureSrcAttribute(el) {\n        if (isImg(el) && !hasAttr(el, \"src\")) attr(el, \"src\", 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>');\n    }\n    function isImg(el) {\n        return isTag(el, \"img\");\n    }\n    var leader = {\n        mixins: [\n            Class,\n            Media\n        ],\n        props: {\n            fill: String\n        },\n        data: {\n            fill: \"\",\n            clsWrapper: \"uk-leader-fill\",\n            clsHide: \"uk-leader-hide\",\n            attrFill: \"data-fill\"\n        },\n        computed: {\n            fill: ({ fill: fill }, $el)=>fill || css($el, \"--uk-leader-fill-content\")\n        },\n        connected () {\n            [this.wrapper] = wrapInner(this.$el, `<span class=\"${this.clsWrapper}\">`);\n        },\n        disconnected () {\n            unwrap(this.wrapper.childNodes);\n        },\n        observe: resize(),\n        update: {\n            read () {\n                const width = Math.trunc(this.$el.offsetWidth / 2);\n                return {\n                    width: width,\n                    fill: this.fill,\n                    hide: !this.matchMedia\n                };\n            },\n            write ({ width: width, fill: fill, hide: hide }) {\n                toggleClass(this.wrapper, this.clsHide, hide);\n                attr(this.wrapper, this.attrFill, new Array(width).join(fill));\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    var modal = {\n        install: install,\n        mixins: [\n            Modal\n        ],\n        data: {\n            clsPage: \"uk-modal-page\",\n            selPanel: \".uk-modal-dialog\",\n            selClose: \".uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full\"\n        },\n        events: [\n            {\n                name: \"show\",\n                self: true,\n                handler () {\n                    if (hasClass(this.panel, \"uk-margin-auto-vertical\")) addClass(this.$el, \"uk-flex\");\n                    else css(this.$el, \"display\", \"block\");\n                    height(this.$el);\n                }\n            },\n            {\n                name: \"hidden\",\n                self: true,\n                handler () {\n                    css(this.$el, \"display\", \"\");\n                    removeClass(this.$el, \"uk-flex\");\n                }\n            }\n        ]\n    };\n    function install({ modal: modal }) {\n        modal.dialog = function(content, options) {\n            const dialog = modal(`<div class=\"uk-modal\"> <div class=\"uk-modal-dialog\">${content}</div> </div>`, {\n                stack: true,\n                role: \"alertdialog\",\n                ...options\n            });\n            dialog.show();\n            on(dialog.$el, \"hidden\", async ()=>{\n                await Promise.resolve();\n                dialog.$destroy(true);\n            }, {\n                self: true\n            });\n            return dialog;\n        };\n        modal.alert = function(message, options) {\n            return openDialog(({ i18n: i18n })=>`<div class=\"uk-modal-body\">${isString(message) ? message : html(message)}</div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-primary uk-modal-close\" autofocus>${i18n.ok}</button> </div>`, options);\n        };\n        modal.confirm = function(message, options) {\n            return openDialog(({ i18n: i18n })=>`<form> <div class=\"uk-modal-body\">${isString(message) ? message : html(message)}</div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">${i18n.cancel}</button> <button class=\"uk-button uk-button-primary\" autofocus>${i18n.ok}</button> </div> </form>`, options, ()=>Promise.reject());\n        };\n        modal.prompt = function(message, value, options) {\n            const promise = openDialog(({ i18n: i18n })=>`<form class=\"uk-form-stacked\"> <div class=\"uk-modal-body\"> <label>${isString(message) ? message : html(message)}</label> <input class=\"uk-input\" value=\"${value || \"\"}\" autofocus> </div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">${i18n.cancel}</button> <button class=\"uk-button uk-button-primary\">${i18n.ok}</button> </div> </form>`, options, ()=>null, ()=>input.value);\n            const { $el: $el } = promise.dialog;\n            const input = $(\"input\", $el);\n            on($el, \"show\", ()=>input.select());\n            return promise;\n        };\n        modal.i18n = {\n            ok: \"Ok\",\n            cancel: \"Cancel\"\n        };\n        function openDialog(tmpl, options, hideFn = noop, submitFn = noop) {\n            options = {\n                bgClose: false,\n                escClose: true,\n                ...options,\n                i18n: {\n                    ...modal.i18n,\n                    ...options == null ? void 0 : options.i18n\n                }\n            };\n            const dialog = modal.dialog(tmpl(options), options);\n            return assign(new Promise((resolve)=>{\n                const off = on(dialog.$el, \"hide\", ()=>resolve(hideFn()));\n                on(dialog.$el, \"submit\", \"form\", (e)=>{\n                    e.preventDefault();\n                    resolve(submitFn(dialog));\n                    off();\n                    dialog.hide();\n                });\n            }), {\n                dialog: dialog\n            });\n        }\n    }\n    var nav = {\n        extends: Accordion,\n        data: {\n            targets: \"> .uk-parent\",\n            toggle: \"> a\",\n            content: \"> ul\"\n        }\n    };\n    var navbar = {\n        extends: Dropnav,\n        props: {\n            dropbarTransparentMode: Boolean\n        },\n        data: {\n            clsDrop: \"uk-navbar-dropdown\",\n            selNavItem: \".uk-navbar-nav > li > a,a.uk-navbar-item,button.uk-navbar-item,.uk-navbar-item a,.uk-navbar-item button,.uk-navbar-toggle\",\n            // Simplify with :where() selector once browser target is Safari 14+\n            selTransparentTarget: '[class*=\"uk-section\"]',\n            dropbarTransparentMode: false\n        },\n        computed: {\n            navbarContainer: (_, $el)=>$el.closest(\".uk-navbar-container\"),\n            dropbarOffset: ({ dropbarTransparentMode: dropbarTransparentMode }, $el)=>dropbarTransparentMode === \"behind\" ? $el.offsetHeight : 0\n        },\n        watch: {\n            items () {\n                const justify = hasClass(this.$el, \"uk-navbar-justify\");\n                for (const container of $$(\".uk-navbar-nav, .uk-navbar-left, .uk-navbar-right\", this.$el))css(container, \"flexGrow\", justify ? $$(\".uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle\", container).length : \"\");\n            }\n        },\n        disconnect () {\n            var _a;\n            (_a = this._colorListener) == null || _a.call(this);\n        },\n        observe: [\n            mutation({\n                target: ({ navbarContainer: navbarContainer })=>navbarContainer,\n                handler: \"registerColorListener\",\n                options: {\n                    attributes: true,\n                    attributeFilter: [\n                        \"class\"\n                    ],\n                    attributeOldValue: true\n                }\n            }),\n            intersection({\n                handler (records) {\n                    this._isIntersecting = records[0].isIntersecting;\n                    this.registerColorListener();\n                },\n                args: {\n                    intersecting: false\n                }\n            })\n        ],\n        events: [\n            {\n                name: \"show\",\n                el () {\n                    return this.dropContainer;\n                },\n                handler ({ target: target }) {\n                    const transparentMode = this.getTransparentMode(target);\n                    if (!transparentMode || this._mode) return;\n                    const storePrevColor = ()=>this._mode = removeClasses(this.navbarContainer, \"uk-light\", \"uk-dark\");\n                    if (transparentMode === \"behind\") {\n                        const mode = getDropbarBehindColor(this.$el);\n                        if (mode) {\n                            storePrevColor();\n                            addClass(this.navbarContainer, `uk-${mode}`);\n                        }\n                    }\n                    if (transparentMode === \"remove\") {\n                        storePrevColor();\n                        removeClass(this.navbarContainer, \"uk-navbar-transparent\");\n                    }\n                }\n            },\n            {\n                name: \"hide\",\n                el () {\n                    return this.dropContainer;\n                },\n                async handler ({ target: target }) {\n                    const transparentMode = this.getTransparentMode(target);\n                    if (!transparentMode || !this._mode) return;\n                    await awaitMacroTask();\n                    if (this.getActive()) return;\n                    if (transparentMode === \"behind\") {\n                        const mode = getDropbarBehindColor(this.$el);\n                        if (mode) removeClass(this.navbarContainer, `uk-${mode}`);\n                    }\n                    addClass(this.navbarContainer, this._mode);\n                    if (transparentMode === \"remove\") addClass(this.navbarContainer, \"uk-navbar-transparent\");\n                    this._mode = null;\n                }\n            }\n        ],\n        methods: {\n            getTransparentMode (el) {\n                if (!this.navbarContainer) return;\n                if (this.dropbar && this.isDropbarDrop(el)) return this.dropbarTransparentMode;\n                const drop = this.getDropdown(el);\n                if (!drop || !hasClass(el, \"uk-dropbar\")) return;\n                return drop.inset ? \"behind\" : \"remove\";\n            },\n            registerColorListener () {\n                const active = this._isIntersecting && hasClass(this.navbarContainer, \"uk-navbar-transparent\") && !isWithinMixBlendMode(this.navbarContainer) && !$$(\".uk-drop\", this.dropContainer).map(this.getDropdown).some((drop)=>drop.isToggled() && (drop.inset || this.getTransparentMode(drop.$el) === \"behind\"));\n                if (this._colorListener) {\n                    if (!active) {\n                        this._colorListener();\n                        this._colorListener = null;\n                    }\n                    return;\n                }\n                if (!active) return;\n                this._colorListener = listenForPositionChange(this.navbarContainer, ()=>{\n                    const { left: left, top: top, height: height } = offset(this.navbarContainer);\n                    const startPoint = {\n                        x: left,\n                        y: Math.max(0, top) + height / 2\n                    };\n                    const target = $$(this.selTransparentTarget).find((target2)=>pointInRect(startPoint, offset(target2)));\n                    const color = css(target, \"--uk-navbar-color\");\n                    if (color) replaceClass(this.navbarContainer, \"uk-light,uk-dark\", `uk-${color}`);\n                });\n            }\n        }\n    };\n    function removeClasses(el, ...classes) {\n        for (const cls of classes)if (hasClass(el, cls)) {\n            removeClass(el, cls);\n            return cls;\n        }\n    }\n    async function awaitMacroTask() {\n        return new Promise((resolve)=>setTimeout(resolve));\n    }\n    function getDropbarBehindColor(el) {\n        return css(el, \"--uk-navbar-dropbar-behind-color\");\n    }\n    function listenForPositionChange(el, handler) {\n        const parent2 = scrollParent(el, true);\n        const scrollEl = parent2 === document.documentElement ? document : parent2;\n        const off = on(scrollEl, \"scroll\", handler, {\n            passive: true\n        });\n        const observer = observeResize([\n            el,\n            parent2\n        ], handler);\n        return ()=>{\n            off();\n            observer.disconnect();\n        };\n    }\n    function isWithinMixBlendMode(el) {\n        do {\n            if (css(el, \"mixBlendMode\") !== \"normal\") return true;\n        }while (el = parent(el));\n    }\n    var offcanvas = {\n        mixins: [\n            Modal\n        ],\n        args: \"mode\",\n        props: {\n            mode: String,\n            flip: Boolean,\n            overlay: Boolean,\n            swiping: Boolean\n        },\n        data: {\n            mode: \"slide\",\n            flip: false,\n            overlay: false,\n            clsPage: \"uk-offcanvas-page\",\n            clsContainer: \"uk-offcanvas-container\",\n            selPanel: \".uk-offcanvas-bar\",\n            clsFlip: \"uk-offcanvas-flip\",\n            clsContainerAnimation: \"uk-offcanvas-container-animation\",\n            clsSidebarAnimation: \"uk-offcanvas-bar-animation\",\n            clsMode: \"uk-offcanvas\",\n            clsOverlay: \"uk-offcanvas-overlay\",\n            selClose: \".uk-offcanvas-close\",\n            container: false,\n            swiping: true\n        },\n        computed: {\n            clsFlip: ({ flip: flip, clsFlip: clsFlip })=>flip ? clsFlip : \"\",\n            clsOverlay: ({ overlay: overlay, clsOverlay: clsOverlay })=>overlay ? clsOverlay : \"\",\n            clsMode: ({ mode: mode, clsMode: clsMode })=>`${clsMode}-${mode}`,\n            clsSidebarAnimation: ({ mode: mode, clsSidebarAnimation: clsSidebarAnimation })=>mode === \"none\" || mode === \"reveal\" ? \"\" : clsSidebarAnimation,\n            clsContainerAnimation: ({ mode: mode, clsContainerAnimation: clsContainerAnimation })=>mode !== \"push\" && mode !== \"reveal\" ? \"\" : clsContainerAnimation,\n            transitionElement ({ mode: mode }) {\n                return mode === \"reveal\" ? parent(this.panel) : this.panel;\n            }\n        },\n        observe: swipe({\n            filter: ({ swiping: swiping })=>swiping\n        }),\n        update: {\n            read () {\n                if (this.isToggled() && !isVisible(this.$el)) this.hide();\n            },\n            events: [\n                \"resize\"\n            ]\n        },\n        events: [\n            {\n                name: \"touchmove\",\n                self: true,\n                passive: false,\n                filter () {\n                    return this.overlay;\n                },\n                handler (e) {\n                    e.cancelable && e.preventDefault();\n                }\n            },\n            {\n                name: \"show\",\n                self: true,\n                handler () {\n                    if (this.mode === \"reveal\" && !hasClass(parent(this.panel), this.clsMode)) {\n                        wrapAll(this.panel, \"<div>\");\n                        addClass(parent(this.panel), this.clsMode);\n                    }\n                    const { body: body, scrollingElement: scrollingElement } = document;\n                    addClass(body, this.clsContainer, this.clsFlip);\n                    css(body, \"touch-action\", \"pan-y pinch-zoom\");\n                    css(this.$el, \"display\", \"block\");\n                    css(this.panel, \"maxWidth\", scrollingElement.clientWidth);\n                    addClass(this.$el, this.clsOverlay);\n                    addClass(this.panel, this.clsSidebarAnimation, this.mode === \"reveal\" ? \"\" : this.clsMode);\n                    height(body);\n                    addClass(body, this.clsContainerAnimation);\n                    this.clsContainerAnimation && suppressUserScale();\n                }\n            },\n            {\n                name: \"hide\",\n                self: true,\n                handler () {\n                    removeClass(document.body, this.clsContainerAnimation);\n                    css(document.body, \"touch-action\", \"\");\n                }\n            },\n            {\n                name: \"hidden\",\n                self: true,\n                handler () {\n                    this.clsContainerAnimation && resumeUserScale();\n                    if (this.mode === \"reveal\") unwrap(this.panel);\n                    removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\n                    removeClass(this.$el, this.clsOverlay);\n                    css(this.$el, \"display\", \"\");\n                    css(this.panel, \"maxWidth\", \"\");\n                    removeClass(document.body, this.clsContainer, this.clsFlip);\n                }\n            },\n            {\n                name: \"swipeLeft swipeRight\",\n                handler (e) {\n                    if (this.isToggled() && endsWith(e.type, \"Left\") ^ this.flip) this.hide();\n                }\n            }\n        ]\n    };\n    function suppressUserScale() {\n        getViewport().content += \",user-scalable=0\";\n    }\n    function resumeUserScale() {\n        const viewport = getViewport();\n        viewport.content = viewport.content.replace(/,user-scalable=0$/, \"\");\n    }\n    function getViewport() {\n        return $('meta[name=\"viewport\"]', document.head) || append(document.head, '<meta name=\"viewport\">');\n    }\n    var overflowAuto = {\n        mixins: [\n            Class\n        ],\n        props: {\n            selContainer: String,\n            selContent: String,\n            minHeight: Number\n        },\n        data: {\n            selContainer: \".uk-modal\",\n            selContent: \".uk-modal-dialog\",\n            minHeight: 150\n        },\n        computed: {\n            container: ({ selContainer: selContainer }, $el)=>$el.closest(selContainer),\n            content: ({ selContent: selContent }, $el)=>$el.closest(selContent)\n        },\n        observe: resize({\n            target: ({ container: container, content: content })=>[\n                    container,\n                    content\n                ]\n        }),\n        update: {\n            read () {\n                if (!this.content || !this.container || !isVisible(this.$el)) return false;\n                return {\n                    max: Math.max(this.minHeight, height(this.container) - (dimensions$1(this.content).height - height(this.$el)))\n                };\n            },\n            write ({ max: max }) {\n                css(this.$el, {\n                    minHeight: this.minHeight,\n                    maxHeight: max\n                });\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    var responsive = {\n        props: [\n            \"width\",\n            \"height\"\n        ],\n        connected () {\n            addClass(this.$el, \"uk-responsive-width\");\n        },\n        observe: resize({\n            target: ({ $el: $el })=>[\n                    $el,\n                    parent($el)\n                ]\n        }),\n        update: {\n            read () {\n                return isVisible(this.$el) && this.width && this.height ? {\n                    width: width(parent(this.$el)),\n                    height: this.height\n                } : false;\n            },\n            write (dim) {\n                height(this.$el, Dimensions.contain({\n                    height: this.height,\n                    width: this.width\n                }, dim).height);\n            },\n            events: [\n                \"resize\"\n            ]\n        }\n    };\n    var scroll = {\n        props: {\n            offset: Number\n        },\n        data: {\n            offset: 0\n        },\n        connected () {\n            registerClick(this);\n        },\n        disconnected () {\n            unregisterClick(this);\n        },\n        methods: {\n            async scrollTo (el) {\n                el = el && $(el) || document.body;\n                if (trigger(this.$el, \"beforescroll\", [\n                    this,\n                    el\n                ])) {\n                    await scrollIntoView(el, {\n                        offset: this.offset\n                    });\n                    trigger(this.$el, \"scrolled\", [\n                        this,\n                        el\n                    ]);\n                }\n            }\n        }\n    };\n    const instances = /* @__PURE__ */ new Set();\n    function registerClick(cmp) {\n        if (!instances.size) on(document, \"click\", clickHandler);\n        instances.add(cmp);\n    }\n    function unregisterClick(cmp) {\n        instances.delete(cmp);\n        if (!instances.size) off(document, \"click\", clickHandler);\n    }\n    function clickHandler(e) {\n        if (e.defaultPrevented) return;\n        for (const instance of instances)if (instance.$el.contains(e.target) && isSameSiteAnchor(instance.$el)) {\n            e.preventDefault();\n            if (window.location.href !== instance.$el.href) window.history.pushState({}, \"\", instance.$el.href);\n            instance.scrollTo(getTargetedElement(instance.$el));\n        }\n    }\n    var scrollspy = {\n        args: \"cls\",\n        props: {\n            cls: String,\n            target: String,\n            hidden: Boolean,\n            margin: String,\n            repeat: Boolean,\n            delay: Number\n        },\n        data: ()=>({\n                cls: \"\",\n                target: false,\n                hidden: true,\n                margin: \"-1px\",\n                repeat: false,\n                delay: 0,\n                inViewClass: \"uk-scrollspy-inview\"\n            }),\n        computed: {\n            elements: ({ target: target }, $el)=>target ? $$(target, $el) : [\n                    $el\n                ]\n        },\n        watch: {\n            elements (elements) {\n                if (this.hidden) css(filter$1(elements, `:not(.${this.inViewClass})`), \"opacity\", 0);\n            }\n        },\n        connected () {\n            this.elementData = /* @__PURE__ */ new Map();\n        },\n        disconnected () {\n            for (const [el, state] of this.elementData.entries())removeClass(el, this.inViewClass, (state == null ? void 0 : state.cls) || \"\");\n            delete this.elementData;\n        },\n        observe: intersection({\n            target: ({ elements: elements })=>elements,\n            handler (records) {\n                const elements = this.elementData;\n                for (const { target: el, isIntersecting: isIntersecting } of records){\n                    if (!elements.has(el)) elements.set(el, {\n                        cls: data(el, \"uk-scrollspy-class\") || this.cls\n                    });\n                    const state = elements.get(el);\n                    if (!this.repeat && state.show) continue;\n                    state.show = isIntersecting;\n                }\n                this.$emit();\n            },\n            options: ({ margin: margin })=>({\n                    rootMargin: margin\n                }),\n            args: {\n                intersecting: false\n            }\n        }),\n        update: [\n            {\n                write (data) {\n                    for (const [el, state] of this.elementData.entries()){\n                        if (state.show && !state.inview && !state.queued) {\n                            state.queued = true;\n                            data.promise = (data.promise || Promise.resolve()).then(()=>new Promise((resolve)=>setTimeout(resolve, this.delay))).then(()=>{\n                                this.toggle(el, true);\n                                setTimeout(()=>{\n                                    state.queued = false;\n                                    this.$emit();\n                                }, 300);\n                            });\n                        } else if (!state.show && state.inview && !state.queued && this.repeat) this.toggle(el, false);\n                    }\n                }\n            }\n        ],\n        methods: {\n            toggle (el, inview) {\n                var _a;\n                const state = this.elementData.get(el);\n                if (!state) return;\n                (_a = state.off) == null || _a.call(state);\n                css(el, \"opacity\", !inview && this.hidden ? 0 : \"\");\n                toggleClass(el, this.inViewClass, inview);\n                toggleClass(el, state.cls);\n                if (/\\buk-animation-/.test(state.cls)) {\n                    const removeAnimationClasses = ()=>removeClasses$1(el, \"uk-animation-[\\\\w-]+\");\n                    if (inview) state.off = once(el, \"animationcancel animationend\", removeAnimationClasses);\n                    else removeAnimationClasses();\n                }\n                trigger(el, inview ? \"inview\" : \"outview\");\n                state.inview = inview;\n                this.$update(el);\n            }\n        }\n    };\n    var scrollspyNav = {\n        props: {\n            cls: String,\n            closest: Boolean,\n            scroll: Boolean,\n            overflow: Boolean,\n            offset: Number\n        },\n        data: {\n            cls: \"uk-active\",\n            closest: false,\n            scroll: false,\n            overflow: true,\n            offset: 0\n        },\n        computed: {\n            links: (_, $el)=>$$('a[href*=\"#\"]', $el).filter((el)=>el.hash && isSameSiteAnchor(el)),\n            elements ({ closest: selector }) {\n                return this.links.map((el)=>el.closest(selector || \"*\"));\n            }\n        },\n        watch: {\n            links (links) {\n                if (this.scroll) this.$create(\"scroll\", links, {\n                    offset: this.offset\n                });\n            }\n        },\n        observe: [\n            intersection(),\n            scroll$1()\n        ],\n        update: [\n            {\n                read () {\n                    const targets = this.links.map(getTargetedElement).filter(Boolean);\n                    const { length: length } = targets;\n                    if (!length || !isVisible(this.$el)) return false;\n                    const scrollElement = scrollParent(targets, true);\n                    const { scrollTop: scrollTop, scrollHeight: scrollHeight } = scrollElement;\n                    const viewport = offsetViewport(scrollElement);\n                    const max = scrollHeight - viewport.height;\n                    let active = false;\n                    if (scrollTop === max) active = length - 1;\n                    else {\n                        for(let i = 0; i < targets.length; i++){\n                            const fixedEl = getCoveringElement(targets[i]);\n                            const offsetBy = this.offset + (fixedEl ? offset(fixedEl).height : 0);\n                            if (offset(targets[i]).top - viewport.top - offsetBy > 0) break;\n                            active = +i;\n                        }\n                        if (active === false && this.overflow) active = 0;\n                    }\n                    return {\n                        active: active\n                    };\n                },\n                write ({ active: active }) {\n                    const changed = active !== false && !hasClass(this.elements[active], this.cls);\n                    this.links.forEach((el)=>el.blur());\n                    for(let i = 0; i < this.elements.length; i++)toggleClass(this.elements[i], this.cls, +i === active);\n                    if (changed) trigger(this.$el, \"active\", [\n                        active,\n                        this.elements[active]\n                    ]);\n                },\n                events: [\n                    \"scroll\",\n                    \"resize\"\n                ]\n            }\n        ]\n    };\n    var sticky = {\n        mixins: [\n            Class,\n            Media\n        ],\n        props: {\n            position: String,\n            top: null,\n            bottom: null,\n            start: null,\n            end: null,\n            offset: String,\n            overflowFlip: Boolean,\n            animation: String,\n            clsActive: String,\n            clsInactive: String,\n            clsFixed: String,\n            clsBelow: String,\n            selTarget: String,\n            showOnUp: Boolean,\n            targetOffset: Number\n        },\n        data: {\n            position: \"top\",\n            top: false,\n            bottom: false,\n            start: false,\n            end: false,\n            offset: 0,\n            overflowFlip: false,\n            animation: \"\",\n            clsActive: \"uk-active\",\n            clsInactive: \"\",\n            clsFixed: \"uk-sticky-fixed\",\n            clsBelow: \"uk-sticky-below\",\n            selTarget: \"\",\n            showOnUp: false,\n            targetOffset: false\n        },\n        computed: {\n            selTarget: ({ selTarget: selTarget }, $el)=>selTarget && $(selTarget, $el) || $el\n        },\n        connected () {\n            this.start = coerce(this.start || this.top);\n            this.end = coerce(this.end || this.bottom);\n            this.placeholder = $(\"+ .uk-sticky-placeholder\", this.$el) || $('<div class=\"uk-sticky-placeholder\"></div>');\n            this.isFixed = false;\n            this.setActive(false);\n        },\n        beforeDisconnect () {\n            if (this.isFixed) {\n                this.hide();\n                removeClass(this.selTarget, this.clsInactive);\n            }\n            reset(this.$el);\n            remove$1(this.placeholder);\n            this.placeholder = null;\n        },\n        observe: [\n            viewport(),\n            scroll$1({\n                target: ()=>document.scrollingElement\n            }),\n            resize({\n                target: ({ $el: $el })=>[\n                        $el,\n                        document.scrollingElement\n                    ]\n            })\n        ],\n        events: [\n            {\n                name: \"load hashchange popstate\",\n                el () {\n                    return window;\n                },\n                filter () {\n                    return this.targetOffset !== false;\n                },\n                handler () {\n                    const { scrollingElement: scrollingElement } = document;\n                    if (!location.hash || scrollingElement.scrollTop === 0) return;\n                    setTimeout(()=>{\n                        const targetOffset = offset($(location.hash));\n                        const elOffset = offset(this.$el);\n                        if (this.isFixed && intersectRect(targetOffset, elOffset)) scrollingElement.scrollTop = targetOffset.top - elOffset.height - toPx(this.targetOffset, \"height\", this.placeholder) - toPx(this.offset, \"height\", this.placeholder);\n                    });\n                }\n            },\n            {\n                name: \"transitionstart\",\n                handler () {\n                    this.transitionInProgress = once(this.$el, \"transitionend transitioncancel\", ()=>this.transitionInProgress = null);\n                }\n            }\n        ],\n        update: [\n            {\n                read ({ height: height$1, width: width, margin: margin, sticky: sticky }) {\n                    this.inactive = !this.matchMedia || !isVisible(this.$el);\n                    if (this.inactive) return;\n                    const hide = this.isFixed && !this.transitionInProgress;\n                    if (hide) {\n                        preventTransition(this.$el);\n                        this.hide();\n                    }\n                    if (!this.active) {\n                        ({ height: height$1, width: width } = offset(this.$el));\n                        margin = css(this.$el, \"margin\");\n                    }\n                    if (hide) this.show();\n                    const viewport2 = toPx(\"100vh\", \"height\");\n                    const dynamicViewport = height(window);\n                    const maxScrollHeight = Math.max(0, document.scrollingElement.scrollHeight - viewport2);\n                    let position = this.position;\n                    if (this.overflowFlip && height$1 > viewport2) position = position === \"top\" ? \"bottom\" : \"top\";\n                    const referenceElement = this.isFixed ? this.placeholder : this.$el;\n                    let offset$1 = toPx(this.offset, \"height\", sticky ? this.$el : referenceElement);\n                    if (position === \"bottom\" && (height$1 < dynamicViewport || this.overflowFlip)) offset$1 += dynamicViewport - height$1;\n                    const overflow = this.overflowFlip ? 0 : Math.max(0, height$1 + offset$1 - viewport2);\n                    const topOffset = offset(referenceElement).top;\n                    const elHeight = offset(this.$el).height;\n                    const start = (this.start === false ? topOffset : parseProp(this.start, this.$el, topOffset)) - offset$1;\n                    const end = this.end === false ? maxScrollHeight : Math.min(maxScrollHeight, parseProp(this.end, this.$el, topOffset + height$1, true) - elHeight - offset$1 + overflow);\n                    sticky = maxScrollHeight && !this.showOnUp && start + offset$1 === topOffset && end === Math.min(maxScrollHeight, parseProp(\"!*\", this.$el, 0, true) - elHeight - offset$1 + overflow) && css(parent(this.$el), \"overflowY\") === \"visible\";\n                    return {\n                        start: start,\n                        end: end,\n                        offset: offset$1,\n                        overflow: overflow,\n                        topOffset: topOffset,\n                        height: height$1,\n                        elHeight: elHeight,\n                        width: width,\n                        margin: margin,\n                        top: offsetPosition(referenceElement)[0],\n                        sticky: sticky\n                    };\n                },\n                write ({ height: height, width: width, margin: margin, offset: offset, sticky: sticky }) {\n                    if (this.inactive || sticky || !this.isFixed) reset(this.$el);\n                    if (this.inactive) return;\n                    if (sticky) {\n                        height = width = margin = 0;\n                        css(this.$el, {\n                            position: \"sticky\",\n                            top: offset\n                        });\n                    }\n                    const { placeholder: placeholder } = this;\n                    css(placeholder, {\n                        height: height,\n                        width: width,\n                        margin: margin\n                    });\n                    if (!document.contains(placeholder)) placeholder.hidden = true;\n                    (sticky ? before : after)(this.$el, placeholder);\n                },\n                events: [\n                    \"resize\"\n                ]\n            },\n            {\n                read ({ scroll: prevScroll = 0, dir: prevDir = \"down\", overflow: overflow, overflowScroll: overflowScroll = 0, start: start, end: end }) {\n                    const scroll2 = document.scrollingElement.scrollTop;\n                    const dir = prevScroll <= scroll2 ? \"down\" : \"up\";\n                    return {\n                        dir: dir,\n                        prevDir: prevDir,\n                        scroll: scroll2,\n                        prevScroll: prevScroll,\n                        offsetParentTop: offset((this.isFixed ? this.placeholder : this.$el).offsetParent).top,\n                        overflowScroll: clamp(overflowScroll + clamp(scroll2, start, end) - clamp(prevScroll, start, end), 0, overflow)\n                    };\n                },\n                write (data, types) {\n                    const isScrollUpdate = types.has(\"scroll\");\n                    const { initTimestamp: initTimestamp = 0, dir: dir, prevDir: prevDir, scroll: scroll2, prevScroll: prevScroll = 0, top: top, start: start, topOffset: topOffset, height: height } = data;\n                    if (scroll2 < 0 || scroll2 === prevScroll && isScrollUpdate || this.showOnUp && !isScrollUpdate && !this.isFixed) return;\n                    const now = Date.now();\n                    if (now - initTimestamp > 300 || dir !== prevDir) {\n                        data.initScroll = scroll2;\n                        data.initTimestamp = now;\n                    }\n                    if (this.showOnUp && !this.isFixed && Math.abs(data.initScroll - scroll2) <= 30 && Math.abs(prevScroll - scroll2) <= 10) return;\n                    if (this.inactive || scroll2 < start || this.showOnUp && (scroll2 <= start || dir === \"down\" && isScrollUpdate || dir === \"up\" && !this.isFixed && scroll2 <= topOffset + height)) {\n                        if (!this.isFixed) {\n                            if (Animation.inProgress(this.$el) && top > scroll2) {\n                                Animation.cancel(this.$el);\n                                this.hide();\n                            }\n                            return;\n                        }\n                        if (this.animation && scroll2 > topOffset) {\n                            if (hasClass(this.$el, \"uk-animation-leave\")) return;\n                            Animation.out(this.$el, this.animation).then(()=>this.hide(), noop);\n                        } else this.hide();\n                    } else if (this.isFixed) this.update();\n                    else if (this.animation && scroll2 > topOffset) {\n                        this.show();\n                        Animation.in(this.$el, this.animation).catch(noop);\n                    } else {\n                        preventTransition(this.selTarget);\n                        this.show();\n                    }\n                },\n                events: [\n                    \"resize\",\n                    \"resizeViewport\",\n                    \"scroll\"\n                ]\n            }\n        ],\n        methods: {\n            show () {\n                this.isFixed = true;\n                this.update();\n                this.placeholder.hidden = false;\n            },\n            hide () {\n                const { offset: offset, sticky: sticky } = this._data;\n                this.setActive(false);\n                removeClass(this.$el, this.clsFixed, this.clsBelow);\n                if (sticky) css(this.$el, \"top\", offset);\n                else css(this.$el, {\n                    position: \"\",\n                    top: \"\",\n                    width: \"\",\n                    marginTop: \"\"\n                });\n                this.placeholder.hidden = true;\n                this.isFixed = false;\n            },\n            update () {\n                let { width: width, scroll: scroll2 = 0, overflow: overflow, overflowScroll: overflowScroll = 0, start: start, end: end, offset: offset, topOffset: topOffset, height: height, elHeight: elHeight, offsetParentTop: offsetParentTop, sticky: sticky } = this._data;\n                const active = start !== 0 || scroll2 > start;\n                if (!sticky) {\n                    let position = \"fixed\";\n                    if (scroll2 > end) {\n                        offset += end - offsetParentTop + overflowScroll - overflow;\n                        position = \"absolute\";\n                    }\n                    css(this.$el, {\n                        position: position,\n                        width: width,\n                        marginTop: 0\n                    }, \"important\");\n                }\n                css(this.$el, \"top\", offset - overflowScroll);\n                this.setActive(active);\n                toggleClass(this.$el, this.clsBelow, scroll2 > topOffset + (sticky ? Math.min(height, elHeight) : height));\n                addClass(this.$el, this.clsFixed);\n            },\n            setActive (active) {\n                const prev = this.active;\n                this.active = active;\n                if (active) {\n                    replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n                    prev !== active && trigger(this.$el, \"active\");\n                } else {\n                    replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n                    prev !== active && trigger(this.$el, \"inactive\");\n                }\n            }\n        }\n    };\n    function parseProp(value, el, propOffset, padding) {\n        if (!value) return 0;\n        if (isNumeric(value) || isString(value) && value.match(/^-?\\d/)) return propOffset + toPx(value, \"height\", el, true);\n        else {\n            const refElement = value === true ? parent(el) : query(value, el);\n            return offset(refElement).bottom - (padding && (refElement == null ? void 0 : refElement.contains(el)) ? toFloat(css(refElement, \"paddingBottom\")) : 0);\n        }\n    }\n    function coerce(value) {\n        if (value === \"true\") return true;\n        else if (value === \"false\") return false;\n        return value;\n    }\n    function reset(el) {\n        css(el, {\n            position: \"\",\n            top: \"\",\n            marginTop: \"\",\n            width: \"\"\n        });\n    }\n    function preventTransition(el) {\n        addClass(el, \"uk-transition-disable\");\n        requestAnimationFrame(()=>removeClass(el, \"uk-transition-disable\"));\n    }\n    var svg = {\n        mixins: [\n            Svg\n        ],\n        args: \"src\",\n        props: {\n            src: String,\n            icon: String,\n            attributes: \"list\",\n            strokeAnimation: Boolean\n        },\n        data: {\n            strokeAnimation: false\n        },\n        observe: [\n            mutation({\n                async handler () {\n                    const svg = await this.svg;\n                    if (svg) applyAttributes.call(this, svg);\n                },\n                options: {\n                    attributes: true,\n                    attributeFilter: [\n                        \"id\",\n                        \"class\",\n                        \"style\"\n                    ]\n                }\n            })\n        ],\n        async connected () {\n            if (includes(this.src, \"#\")) [this.src, this.icon] = this.src.split(\"#\");\n            const svg = await this.svg;\n            if (svg) {\n                applyAttributes.call(this, svg);\n                if (this.strokeAnimation) applyAnimation(svg);\n            }\n        },\n        methods: {\n            async getSvg () {\n                if (isTag(this.$el, \"img\") && !this.$el.complete && this.$el.loading === \"lazy\") return new Promise((resolve)=>once(this.$el, \"load\", ()=>resolve(this.getSvg())));\n                return parseSVG(await loadSVG(this.src), this.icon) || Promise.reject(\"SVG not found.\");\n            }\n        }\n    };\n    function applyAttributes(el) {\n        const { $el: $el } = this;\n        addClass(el, attr($el, \"class\"), \"uk-svg\");\n        for(let i = 0; i < $el.style.length; i++){\n            const prop = $el.style[i];\n            css(el, prop, css($el, prop));\n        }\n        for(const attribute in this.attributes){\n            const [prop, value] = this.attributes[attribute].split(\":\", 2);\n            attr(el, prop, value);\n        }\n        if (!this.$el.id) removeAttr(el, \"id\");\n    }\n    const loadSVG = memoize(async (src)=>{\n        if (src) {\n            if (startsWith(src, \"data:\")) return decodeURIComponent(src.split(\",\")[1]);\n            else return (await fetch(src)).text();\n        } else return Promise.reject();\n    });\n    function parseSVG(svg, icon) {\n        if (icon && includes(svg, \"<symbol\")) svg = parseSymbols(svg)[icon] || svg;\n        svg = $(svg.substr(svg.indexOf(\"<svg\")));\n        return (svg == null ? void 0 : svg.hasChildNodes()) && svg;\n    }\n    const symbolRe = /<symbol([^]*?id=(['\"])(.+?)\\2[^]*?<\\/)symbol>/g;\n    const parseSymbols = memoize(function(svg) {\n        const symbols = {};\n        symbolRe.lastIndex = 0;\n        let match;\n        while(match = symbolRe.exec(svg))symbols[match[3]] = `<svg ${match[1]}svg>`;\n        return symbols;\n    });\n    function applyAnimation(el) {\n        const length = getMaxPathLength(el);\n        if (length) css(el, \"--uk-animation-stroke\", length);\n    }\n    const selDisabled = \".uk-disabled *, .uk-disabled, [disabled]\";\n    var Switcher = {\n        mixins: [\n            Togglable\n        ],\n        args: \"connect\",\n        props: {\n            connect: String,\n            toggle: String,\n            itemNav: String,\n            active: Number,\n            followFocus: Boolean,\n            swiping: Boolean\n        },\n        data: {\n            connect: \"~.uk-switcher\",\n            toggle: \"> * > :first-child\",\n            itemNav: false,\n            active: 0,\n            cls: \"uk-active\",\n            attrItem: \"uk-switcher-item\",\n            selVertical: \".uk-nav\",\n            followFocus: false,\n            swiping: true\n        },\n        computed: {\n            connects: ({ connect: connect }, $el)=>queryAll(connect, $el),\n            connectChildren () {\n                return this.connects.map((el)=>children(el)).flat();\n            },\n            toggles: ({ toggle: toggle }, $el)=>$$(toggle, $el),\n            children (_, $el) {\n                return children($el).filter((child)=>this.toggles.some((toggle)=>child.contains(toggle)));\n            }\n        },\n        watch: {\n            connects (connects) {\n                if (this.swiping) css(connects, \"touchAction\", \"pan-y pinch-zoom\");\n                this.$emit();\n            },\n            connectChildren () {\n                let index = Math.max(0, this.index());\n                for (const el of this.connects)children(el).forEach((child, i)=>toggleClass(child, this.cls, i === index));\n                this.$emit();\n            },\n            toggles (toggles) {\n                this.$emit();\n                const active = this.index();\n                this.show(~active ? active : toggles[this.active] || toggles[0]);\n            }\n        },\n        connected () {\n            attr(this.$el, \"role\", \"tablist\");\n        },\n        observe: [\n            lazyload({\n                targets: ({ connectChildren: connectChildren })=>connectChildren\n            }),\n            swipe({\n                target: ({ connects: connects })=>connects,\n                filter: ({ swiping: swiping })=>swiping\n            })\n        ],\n        events: [\n            {\n                name: \"click keydown\",\n                delegate () {\n                    return this.toggle;\n                },\n                handler (e) {\n                    if (!matches(e.current, selDisabled) && (e.type === \"click\" || e.keyCode === keyMap.SPACE)) {\n                        e.preventDefault();\n                        this.show(e.current);\n                    }\n                }\n            },\n            {\n                name: \"keydown\",\n                delegate () {\n                    return this.toggle;\n                },\n                handler (e) {\n                    const { current: current, keyCode: keyCode } = e;\n                    const isVertical = matches(this.$el, this.selVertical);\n                    let i = keyCode === keyMap.HOME ? 0 : keyCode === keyMap.END ? \"last\" : keyCode === keyMap.LEFT && !isVertical || keyCode === keyMap.UP && isVertical ? \"previous\" : keyCode === keyMap.RIGHT && !isVertical || keyCode === keyMap.DOWN && isVertical ? \"next\" : -1;\n                    if (~i) {\n                        e.preventDefault();\n                        const toggles = this.toggles.filter((el)=>!matches(el, selDisabled));\n                        const next = toggles[getIndex(i, toggles, toggles.indexOf(current))];\n                        next.focus();\n                        if (this.followFocus) this.show(next);\n                    }\n                }\n            },\n            {\n                name: \"click\",\n                el () {\n                    return this.connects.concat(this.itemNav ? queryAll(this.itemNav, this.$el) : []);\n                },\n                delegate () {\n                    return `[${this.attrItem}],[data-${this.attrItem}]`;\n                },\n                handler (e) {\n                    if (e.target.closest(\"a,button\")) {\n                        e.preventDefault();\n                        this.show(data(e.current, this.attrItem));\n                    }\n                }\n            },\n            {\n                name: \"swipeRight swipeLeft\",\n                filter () {\n                    return this.swiping;\n                },\n                el () {\n                    return this.connects;\n                },\n                handler ({ type: type }) {\n                    this.show(endsWith(type, \"Left\") ? \"next\" : \"previous\");\n                }\n            }\n        ],\n        update () {\n            var _a;\n            attr(this.connects, \"role\", \"presentation\");\n            attr(children(this.$el), \"role\", \"presentation\");\n            for(const index in this.toggles){\n                const toggle = this.toggles[index];\n                const item = (_a = this.connects[0]) == null ? void 0 : _a.children[index];\n                attr(toggle, \"role\", \"tab\");\n                if (!item) continue;\n                toggle.id = generateId(this, toggle);\n                item.id = generateId(this, item);\n                attr(toggle, \"aria-controls\", item.id);\n                attr(item, {\n                    role: \"tabpanel\",\n                    \"aria-labelledby\": toggle.id\n                });\n            }\n            attr(this.$el, \"aria-orientation\", matches(this.$el, this.selVertical) ? \"vertical\" : null);\n        },\n        methods: {\n            index () {\n                return findIndex(this.children, (el)=>hasClass(el, this.cls));\n            },\n            show (item) {\n                const toggles = this.toggles.filter((el)=>!matches(el, selDisabled));\n                const prev = this.index();\n                const next = getIndex(!isNode(item) || includes(toggles, item) ? item : 0, toggles, getIndex(this.toggles[prev], toggles));\n                const active = getIndex(toggles[next], this.toggles);\n                this.children.forEach((child, i)=>{\n                    toggleClass(child, this.cls, active === i);\n                    attr(this.toggles[i], {\n                        \"aria-selected\": active === i,\n                        tabindex: active === i ? null : -1\n                    });\n                });\n                const animate = prev >= 0 && prev !== next;\n                this.connects.forEach(async ({ children: children2 })=>{\n                    const actives = toArray(children2).filter((child, i)=>i !== active && hasClass(child, this.cls));\n                    await this.toggleElement(actives, false, animate);\n                    await this.toggleElement(children2[active], true, animate);\n                });\n            }\n        }\n    };\n    var tab = {\n        mixins: [\n            Class\n        ],\n        extends: Switcher,\n        props: {\n            media: Boolean\n        },\n        data: {\n            media: 960,\n            attrItem: \"uk-tab-item\",\n            selVertical: \".uk-tab-left,.uk-tab-right\"\n        },\n        connected () {\n            const cls = hasClass(this.$el, \"uk-tab-left\") ? \"uk-tab-left\" : hasClass(this.$el, \"uk-tab-right\") ? \"uk-tab-right\" : false;\n            if (cls) this.$create(\"toggle\", this.$el, {\n                cls: cls,\n                mode: \"media\",\n                media: this.media\n            });\n        }\n    };\n    const KEY_SPACE = 32;\n    var toggle = {\n        mixins: [\n            Media,\n            Togglable\n        ],\n        args: \"target\",\n        props: {\n            href: String,\n            target: null,\n            mode: \"list\",\n            queued: Boolean\n        },\n        data: {\n            href: false,\n            target: false,\n            mode: \"click\",\n            queued: true\n        },\n        computed: {\n            target ({ target: target }, $el) {\n                target = queryAll(target || $el.hash, $el);\n                return target.length ? target : [\n                    $el\n                ];\n            }\n        },\n        connected () {\n            if (!includes(this.mode, \"media\")) {\n                if (!isFocusable(this.$el)) attr(this.$el, \"tabindex\", \"0\");\n                if (!this.cls && isTag(this.$el, \"a\")) attr(this.$el, \"role\", \"button\");\n            }\n        },\n        observe: lazyload({\n            target: ({ target: target })=>target\n        }),\n        events: [\n            {\n                name: pointerDown$1,\n                filter () {\n                    return includes(this.mode, \"hover\");\n                },\n                handler (e) {\n                    this._preventClick = null;\n                    if (!isTouch(e) || isBoolean(this._showState) || this.$el.disabled) return;\n                    trigger(this.$el, \"focus\");\n                    once(document, pointerDown$1, ()=>trigger(this.$el, \"blur\"), true, (e2)=>!this.$el.contains(e2.target));\n                    if (includes(this.mode, \"click\")) this._preventClick = true;\n                }\n            },\n            {\n                // mouseenter mouseleave are added because of Firefox bug,\n                // where pointerleave is triggered immediately after pointerenter on scroll\n                name: `mouseenter mouseleave ${pointerEnter} ${pointerLeave} focus blur`,\n                filter () {\n                    return includes(this.mode, \"hover\");\n                },\n                handler (e) {\n                    if (isTouch(e) || this.$el.disabled) return;\n                    const show = includes([\n                        \"mouseenter\",\n                        pointerEnter,\n                        \"focus\"\n                    ], e.type);\n                    const expanded = this.isToggled(this.target);\n                    if (!show && (!isBoolean(this._showState) || e.type !== \"blur\" && matches(this.$el, \":focus\") || e.type === \"blur\" && matches(this.$el, \":hover\"))) {\n                        if (expanded === this._showState) this._showState = null;\n                        return;\n                    }\n                    if (show && isBoolean(this._showState) && expanded !== this._showState) return;\n                    this._showState = show ? expanded : null;\n                    this.toggle(`toggle${show ? \"show\" : \"hide\"}`);\n                }\n            },\n            {\n                name: \"keydown\",\n                filter () {\n                    return includes(this.mode, \"click\") && !isTag(this.$el, \"input\");\n                },\n                handler (e) {\n                    if (e.keyCode === KEY_SPACE) {\n                        e.preventDefault();\n                        this.$el.click();\n                    }\n                }\n            },\n            {\n                name: \"click\",\n                filter () {\n                    return [\n                        \"click\",\n                        \"hover\"\n                    ].some((mode)=>includes(this.mode, mode));\n                },\n                handler (e) {\n                    let link;\n                    if (this._preventClick || e.target.closest('a[href=\"#\"], a[href=\"\"]') || (link = e.target.closest(\"a[href]\")) && (!this.isToggled(this.target) || link.hash && matches(this.target, link.hash))) e.preventDefault();\n                    if (!this._preventClick && includes(this.mode, \"click\")) this.toggle();\n                }\n            },\n            {\n                name: \"mediachange\",\n                filter () {\n                    return includes(this.mode, \"media\");\n                },\n                el () {\n                    return this.target;\n                },\n                handler (e, mediaObj) {\n                    if (mediaObj.matches ^ this.isToggled(this.target)) this.toggle();\n                }\n            }\n        ],\n        methods: {\n            async toggle (type) {\n                if (!trigger(this.target, type || \"toggle\", [\n                    this\n                ])) return;\n                if (hasAttr(this.$el, \"aria-expanded\")) attr(this.$el, \"aria-expanded\", !this.isToggled(this.target));\n                if (!this.queued) return this.toggleElement(this.target);\n                const leaving = this.target.filter((el)=>hasClass(el, this.clsLeave));\n                if (leaving.length) {\n                    for (const el of this.target){\n                        const isLeaving = includes(leaving, el);\n                        this.toggleElement(el, isLeaving, isLeaving);\n                    }\n                    return;\n                }\n                const toggled = this.target.filter(this.isToggled);\n                if (await this.toggleElement(toggled, false)) await this.toggleElement(this.target.filter((el)=>!includes(toggled, el)), true);\n            }\n        }\n    };\n    var components = /*#__PURE__*/ Object.freeze({\n        __proto__: null,\n        Accordion: Accordion,\n        Alert: alert,\n        Close: Close,\n        Cover: cover,\n        Drop: drop,\n        DropParentIcon: IconComponent,\n        Dropdown: drop,\n        Dropnav: Dropnav,\n        FormCustom: formCustom,\n        Grid: grid,\n        HeightMatch: heightMatch,\n        HeightViewport: heightViewport,\n        Icon: Icon,\n        Img: img,\n        Leader: leader,\n        Margin: Margin,\n        Marker: Marker,\n        Modal: modal,\n        Nav: nav,\n        NavParentIcon: NavParentIcon,\n        Navbar: navbar,\n        NavbarParentIcon: IconComponent,\n        NavbarToggleIcon: NavbarToggleIcon,\n        Offcanvas: offcanvas,\n        OverflowAuto: overflowAuto,\n        OverlayIcon: IconComponent,\n        PaginationNext: PaginationNext,\n        PaginationPrevious: PaginationPrevious,\n        Responsive: responsive,\n        Scroll: scroll,\n        Scrollspy: scrollspy,\n        ScrollspyNav: scrollspyNav,\n        SearchIcon: Search,\n        SlidenavNext: Slidenav,\n        SlidenavPrevious: Slidenav,\n        Spinner: Spinner,\n        Sticky: sticky,\n        Svg: svg,\n        Switcher: Switcher,\n        Tab: tab,\n        Toggle: toggle,\n        Totop: Totop,\n        Video: Video\n    });\n    each(components, (component, name)=>App.component(name, component));\n    boot(App);\n    each(components$1, (component, name)=>App.component(name, component));\n    return App;\n});\n\n\nvar $bedd7f4d55ec3272$exports = {};\n/*! UIkit 3.17.11 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */ (function(global, factory) {\n    $bedd7f4d55ec3272$exports = factory();\n})($bedd7f4d55ec3272$exports, function() {\n    \"use strict\";\n    function plugin(UIkit) {\n        if (plugin.installed) return;\n        UIkit.icon.add({\n            \"youtube\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\"/></svg>',\n            \"yootheme\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m16.15,5.48c-1.37,0-2.45.61-3.11,1.54-.66-.93-1.74-1.54-3.11-1.54-1.75,0-3.03,1-3.57,2.41v-2.22h-2.01v4.45c0,.85-.31,1.35-1.18,1.35s-1.18-.5-1.18-1.35v-4.45H0v4.86c0,.7.17,1.33.53,1.82.34.49.88.85,1.6,1v3.16h2.1v-3.16c1.28-.28,1.96-1.17,2.1-2.35.52,1.44,1.81,2.48,3.59,2.48,1.37,0,2.45-.61,3.11-1.54.66.93,1.74,1.54,3.11,1.54,2.37,0,3.85-1.82,3.85-4s-1.49-4-3.85-4Zm-6.22,5.99c-1.11,0-1.85-.72-1.85-1.99s.74-1.99,1.85-1.99,1.85.72,1.85,1.99-.74,1.99-1.85,1.99Zm6.22,0c-1.11,0-1.85-.72-1.85-1.99s.74-1.99,1.85-1.99,1.85.72,1.85,1.99-.74,1.99-1.85,1.99Z\"/></svg>',\n            \"yelp\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\"/></svg>',\n            \"xing\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\"/><path d=\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\"/></svg>',\n            \"world\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M1,10.5 L19,10.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,15.5 L17.65,15.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,5.5 L17.523,5.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10.5\" r=\"9\"/></svg>',\n            \"wordpress\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\"/></svg>',\n            \"whatsapp\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\"/></svg>',\n            \"warning\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"14\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><path d=\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\"/></svg>',\n            \"vimeo\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\"/></svg>',\n            \"video-camera\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"19.5 5.9 19.5 14.1 14.5 10.4 14.5 15.5 .5 15.5 .5 4.5 14.5 4.5 14.5 9.6 19.5 5.9\"/></svg>',\n            \"users\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"7.7\" cy=\"8.6\" r=\"3.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\"/></svg>',\n            \"user\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.9\" cy=\"6.4\" r=\"4.4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\"/></svg>',\n            \"upload\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"5 8 9.5 3.5 14 8\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"15\" x2=\"9.5\" y2=\"4\"/></svg>',\n            \"unlock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"8.5\" width=\"13\" height=\"10\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\"/></svg>',\n            \"uikit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\"/><polygon points=\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\"/></svg>',\n            \"twitter\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\"/></svg>',\n            \"twitch\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5.23,1,2,4.23V15.85H5.88v3.23L9.1,15.85h2.59L17.5,10V1Zm11,8.4L13.62,12H11L8.78,14.24V12H5.88V2.29H16.21Z\"/><rect x=\"12.98\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/><rect x=\"9.43\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/></svg>',\n            \"tv\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"7\" y=\"16\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"3.5\" width=\"19\" height=\"11\"/></svg>',\n            \"tumblr\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\"/></svg>',\n            \"tripadvisor\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\"/></svg>',\n            \"triangle-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"5 13 10 8 15 13\"/></svg>',\n            \"triangle-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"8 5 13 10 8 15\"/></svg>',\n            \"triangle-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"12 5 7 10 12 15\"/></svg>',\n            \"triangle-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"5 7 15 7 10 12\"/></svg>',\n            \"trash\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\"/><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\"/><rect x=\"8\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"11\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"2\" y=\"3\" width=\"16\" height=\"1\"/></svg>',\n            \"tiktok\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.24,6V8.82a6.79,6.79,0,0,1-4-1.28v5.81A5.26,5.26,0,1,1,8,8.1a4.36,4.36,0,0,1,.72.05v2.9A2.57,2.57,0,0,0,7.64,11a2.4,2.4,0,1,0,2.77,2.38V2h2.86a4,4,0,0,0,1.84,3.38A4,4,0,0,0,17.24,6Z\"/></svg>',\n            \"thumbnails\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"11.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"11.5\" width=\"5\" height=\"5\"/></svg>',\n            \"tag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\"/><circle cx=\"14\" cy=\"6\" r=\"1\"/></svg>',\n            \"tablet\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\"/><circle cx=\"10.5\" cy=\"16.3\" r=\".8\"/></svg>',\n            \"tablet-landscape\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\"/><circle cx=\"3.7\" cy=\"10.5\" r=\".8\"/></svg>',\n            \"table\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"1\" y=\"3\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"11\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"18\" height=\"1\"/></svg>',\n            \"strikethrough\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\"/><rect x=\"3\" y=\"10\" width=\"15\" height=\"1\"/></svg>',\n            \"star\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\"/></svg>',\n            \"soundcloud\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\"/><rect x=\"6\" y=\"6.5\" width=\"1.5\" height=\"8.5\"/><rect x=\"3\" y=\"8\" width=\"1.5\" height=\"7\"/><rect y=\"10\" width=\"1.5\" height=\"5\"/></svg>',\n            \"social\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.4\" y1=\"14\" x2=\"6.3\" y2=\"10.7\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.5\" y1=\"5.5\" x2=\"6.5\" y2=\"8.8\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"4.6\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"14.8\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"4.5\" cy=\"9.8\" r=\"2.3\"/></svg>',\n            \"sign-out\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\"/><polygon points=\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\"/></svg>',\n            \"sign-in\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\"/><polygon points=\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\"/></svg>',\n            \"shrink\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"11 4 12 4 12 8 16 8 16 9 11 9\"/><polygon points=\"4 11 9 11 9 16 8 16 8 12 4 12\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M12,8 L18,2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2,18 L8,12\"/></svg>',\n            \"settings\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"3.55\" rx=\"2.11\" ry=\"2.15\"/><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"15.55\" rx=\"2.11\" ry=\"2.15\"/><circle fill=\"none\" stroke=\"#000\" cx=\"13.15\" cy=\"9.55\" r=\"2.15\"/><rect x=\"1\" y=\"3\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"3\" width=\"8\" height=\"1\"/><rect x=\"1\" y=\"9\" width=\"8\" height=\"1\"/><rect x=\"15\" y=\"9\" width=\"3\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"15\" width=\"8\" height=\"1\"/></svg>',\n            \"server\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"3\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"7\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"16\" y=\"3\" width=\"1\" height=\"1\"/><rect x=\"16\" y=\"10\" width=\"1\" height=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"9.9\" cy=\"17.4\" r=\"1.4\"/><rect x=\"3\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"9.5\" y=\"14\" width=\"1\" height=\"2\"/><rect x=\"3\" y=\"17\" width=\"6\" height=\"1\"/><rect x=\"11\" y=\"17\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"1.5\" width=\"17\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"8.5\" width=\"17\" height=\"5\"/></svg>',\n            \"search\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9\" cy=\"9\" r=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M14,14 L18,18 L14,14 Z\"/></svg>',\n            \"rss\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"3.12\" cy=\"16.8\" r=\"1.85\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\"/></svg>',\n            \"reply\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\"/></svg>',\n            \"refresh\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"9.9 2 12.79 4.89 9.79 7.9\"/></svg>',\n            \"reddit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z\"/><path d=\"M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z\"/><path d=\"M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z\"/><path d=\"M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z\"/></svg>',\n            \"receiver\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\"/></svg>',\n            \"quote-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\"/><path d=\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\"/></svg>',\n            \"question\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><circle cx=\"9.99\" cy=\"14.24\" r=\"1.05\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" d=\"m7.72,7.61c0-3.04,4.55-3.06,4.55-.07,0,.95-.91,1.43-1.49,2.03-.48.49-.72.98-.78,1.65-.01.13-.02.24-.02.35\"/></svg>',\n            \"push\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"10\" x2=\"9.5\" y2=\"1\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\"/></svg>',\n            \"pull\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"11\" x2=\"9.5\" y2=\"2\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\"/></svg>',\n            \"print\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5\"/><rect fill=\"none\" stroke=\"#000\" width=\"11\" height=\"6\" x=\"4.5\" y=\"11.5\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"13\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"15\"/></svg>',\n            \"plus\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"9\" y=\"1\" width=\"1\" height=\"17\"/><rect x=\"1\" y=\"9\" width=\"17\" height=\"1\"/></svg>',\n            \"plus-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"5\" x2=\"9.5\" y2=\"14\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>',\n            \"play\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"6.5,5 14.5,10 6.5,15\"/></svg>',\n            \"play-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"8.5 7 13.5 10 8.5 13\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n            \"pinterest\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\"/></svg>',\n            \"phone\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\"/><circle cx=\"10.5\" cy=\"16.5\" r=\".8\"/></svg>',\n            \"phone-landscape\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\"/><circle cx=\"3.8\" cy=\"10.5\" r=\".8\"/></svg>',\n            \"pencil\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M15.98,7.268 L13.851,5.148\"/></svg>',\n            \"paint-bucket\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"m6.42,2.16l5.28,5.28\"/><path d=\"m18.49,11.83s1.51,2.06,1.51,3.36c0,.92-.76,1.64-1.51,1.64h0c-.75,0-1.49-.72-1.49-1.64,0-1.3,1.49-3.36,1.49-3.36h0Z\"/><line fill=\"none\" stroke=\"#000\" x1=\"1.26\" y1=\"10.5\" x2=\"16\" y2=\"10.5\"/><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"10.2 1.55 17.6 8.93 8.08 18.45 .7 11.07 10.2 1.55\"/></svg>',\n            \"pagekit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19\"/></svg>',\n            \"nut\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"3.5\"/></svg>',\n            \"move\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"4,5 1,5 1,9 2,9 2,6 4,6\"/><polygon points=\"1,16 2,16 2,18 4,18 4,19 1,19\"/><polygon points=\"14,16 14,19 11,19 11,18 13,18 13,16\"/><rect fill=\"none\" stroke=\"#000\" x=\"5.5\" y=\"1.5\" width=\"13\" height=\"13\"/><rect x=\"1\" y=\"11\" width=\"1\" height=\"3\"/><rect x=\"6\" y=\"18\" width=\"3\" height=\"1\"/></svg>',\n            \"more\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"3\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"17\" cy=\"10\" r=\"2\"/></svg>',\n            \"more-vertical\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"3\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"17\" r=\"2\"/></svg>',\n            \"minus\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect height=\"1\" width=\"18\" y=\"9\" x=\"1\"/></svg>',\n            \"minus-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>',\n            \"microsoft\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m2,2h7.58v7.58H2V2Zm8.42,0h7.58v7.58h-7.58V2ZM2,10.42h7.58v7.58H2v-7.58Zm8.42,0h7.58v7.58h-7.58\"/></svg>',\n            \"microphone\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><line fill=\"none\" stroke=\"#000\" x1=\"10\" x2=\"10\" y1=\"16.44\" y2=\"18.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"7\" x2=\"13\" y1=\"18.5\" y2=\"18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6\"/></svg>',\n            \"menu\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"2\" y=\"4\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"16\" height=\"1\"/></svg>',\n            \"mastodon\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m18.5,6.87c0-3.95-2.59-5.11-2.59-5.11-1.31-.6-3.55-.85-5.88-.87h-.06c-2.33.02-4.57.27-5.88.87,0,0-2.59,1.16-2.59,5.11,0,.91-.02,1.99.01,3.14.09,3.87.71,7.68,4.28,8.62,1.65.44,3.06.53,4.2.47,2.07-.11,3.23-.74,3.23-.74l-.07-1.5s-1.48.47-3.14.41c-1.64-.06-3.38-.18-3.64-2.2-.02-.18-.04-.37-.04-.57,0,0,1.61.39,3.66.49,1.25.06,2.42-.07,3.61-.22,2.28-.27,4.27-1.68,4.52-2.97.39-2.02.36-4.94.36-4.94Zm-3.05,5.09h-1.9v-4.65c0-.98-.41-1.48-1.24-1.48-.91,0-1.37.59-1.37,1.76v2.54h-1.89v-2.54c0-1.17-.46-1.76-1.37-1.76-.82,0-1.24.5-1.24,1.48v4.65h-1.9v-4.79c0-.98.25-1.76.75-2.33.52-.58,1.19-.87,2.03-.87.97,0,1.71.37,2.19,1.12l.47.79.47-.79c.49-.75,1.22-1.12,2.19-1.12.84,0,1.51.29,2.03.87.5.58.75,1.35.75,2.33v4.79Z\"/></svg>',\n            \"mail\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"1.4,6.5 10,11 18.6,6.5\"/><path d=\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\"/></svg>',\n            \"lock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" height=\"10\" width=\"13\" y=\"8.5\" x=\"3.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\"/></svg>',\n            \"location\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"6.8\" r=\"2.3\"/></svg>',\n            \"list\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"6\" y=\"4\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"9\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"14\" width=\"12\" height=\"1\"/><rect x=\"2\" y=\"4\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"2\" height=\"1\"/></svg>',\n            \"linkedin\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\"/><path d=\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\"/></svg>',\n            \"link\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M7.925,11.875 L11.925,7.975\"/></svg>',\n            \"lifesaver\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"9\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"5\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"5.17\" y1=\"2.39\" x2=\"8.11\" y2=\"5.33\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"5.33\" y1=\"8.11\" x2=\"2.39\" y2=\"5.17\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"14.83\" y1=\"17.61\" x2=\"11.89\" y2=\"14.67\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"14.67\" y1=\"11.89\" x2=\"17.61\" y2=\"14.83\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"17.61\" y1=\"5.17\" x2=\"14.67\" y2=\"8.11\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"11.89\" y1=\"5.33\" x2=\"14.83\" y2=\"2.39\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"8.11\" y1=\"14.67\" x2=\"5.17\" y2=\"17.61\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"2.39\" y1=\"14.83\" x2=\"5.33\" y2=\"11.89\"/></svg>',\n            \"laptop\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect y=\"16\" width=\"20\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"2.5\" y=\"4.5\" width=\"15\" height=\"10\"/></svg>',\n            \"joomla\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\"/><path d=\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\"/><path d=\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\"/><path d=\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\"/></svg>',\n            \"italic\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\"/></svg>',\n            \"instagram\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\"/><circle cx=\"14.87\" cy=\"5.26\" r=\"1.09\"/><path d=\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\"/></svg>',\n            \"info\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n            \"image\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"16.1\" cy=\"6.1\" r=\"1.1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"2.5\" width=\"19\" height=\"15\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"4,13 8,9 13,14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"11,12 12.5,10.5 16,14\"/></svg>',\n            \"home\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\"/><polygon points=\"15 4 18 4 18 7 17 7 17 5 15 5\"/><polygon points=\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\"/></svg>',\n            \"history\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"#000\" points=\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>',\n            \"heart\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" d=\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\"/></svg>',\n            \"hashtag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\"/></svg>',\n            \"happy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"13\" cy=\"7\" r=\"1\"/><circle cx=\"7\" cy=\"7\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"8.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\"/></svg>',\n            \"grid\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"2\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"14\" width=\"3\" height=\"3\"/></svg>',\n            \"google\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\"/></svg>',\n            \"gitter\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"3.5\" y=\"1\" width=\"1.531\" height=\"11.471\"/><rect x=\"7.324\" y=\"4.059\" width=\"1.529\" height=\"15.294\"/><rect x=\"11.148\" y=\"4.059\" width=\"1.527\" height=\"15.294\"/><rect x=\"14.971\" y=\"4.059\" width=\"1.529\" height=\"8.412\"/></svg>',\n            \"github\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\"/></svg>',\n            \"github-alt\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\"/></svg>',\n            \"git-fork\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"5.79\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14.19\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"10.03\" cy=\"16.79\" r=\"1.79\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\"/></svg>',\n            \"git-branch\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"3\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14\" cy=\"6\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"17\" r=\"2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\"/></svg>',\n            \"future\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline points=\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path d=\"M13.018,14.197 L9.445,10.625\" fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\"/></svg>',\n            \"foursquare\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\"/></svg>',\n            \"forward\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\"/></svg>',\n            \"folder\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\"/></svg>',\n            \"flickr\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"5.5\" cy=\"9.5\" r=\"3.5\"/><circle cx=\"14.5\" cy=\"9.5\" r=\"3.5\"/></svg>',\n            \"file\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"1.5\" width=\"13\" height=\"17\"/></svg>',\n            \"file-text\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"12\" y1=\"12.5\" y2=\"12.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"8.5\" y2=\"8.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"6.5\" y2=\"6.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"10.5\" y2=\"10.5\"/></svg>',\n            \"file-pdf\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><path d=\"M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z\"/></svg>',\n            \"file-edit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\"/><polyline fill=\"none\" stroke=\"#000\" points=\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\"/></svg>',\n            \"facebook\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\"/></svg>',\n            \"eye\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"3.45\"/><path fill=\"none\" stroke=\"#000\" d=\"m19.5,10c-2.4,3.66-5.26,7-9.5,7h0,0,0c-4.24,0-7.1-3.34-9.49-7C2.89,6.34,5.75,3,9.99,3h0,0,0c4.25,0,7.11,3.34,9.5,7Z\"/></svg>',\n            \"eye-slash\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"m7.56,7.56c.62-.62,1.49-1.01,2.44-1.01,1.91,0,3.45,1.54,3.45,3.45,0,.95-.39,1.82-1.01,2.44\"/><path fill=\"none\" stroke=\"#000\" d=\"m19.5,10c-2.4,3.66-5.26,7-9.5,7h0,0,0c-4.24,0-7.1-3.34-9.49-7C2.89,6.34,5.75,3,9.99,3h0,0,0c4.25,0,7.11,3.34,9.5,7Z\"/><line fill=\"none\" stroke=\"#000\" x1=\"2.5\" y1=\"2.5\" x2=\"17.5\" y2=\"17.5\"/></svg>',\n            \"expand\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"13 2 18 2 18 7 17 7 17 3 13 3\"/><polygon points=\"2 13 3 13 3 17 7 17 7 18 2 18\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11,9 L17,3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M3,17 L9,11\"/></svg>',\n            \"etsy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z\"/></svg>',\n            \"dribbble\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n            \"download\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"14,10 9.5,14.5 5,10\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"13.91\" x2=\"9.5\" y2=\"3\"/></svg>',\n            \"discord\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M16.074,4.361a14.243,14.243,0,0,0-3.61-1.134,10.61,10.61,0,0,0-.463.96,13.219,13.219,0,0,0-4,0,10.138,10.138,0,0,0-.468-.96A14.206,14.206,0,0,0,3.919,4.364,15.146,15.146,0,0,0,1.324,14.5a14.435,14.435,0,0,0,4.428,2.269A10.982,10.982,0,0,0,6.7,15.21a9.294,9.294,0,0,1-1.494-.727c.125-.093.248-.19.366-.289a10.212,10.212,0,0,0,8.854,0c.119.1.242.2.366.289a9.274,9.274,0,0,1-1.5.728,10.8,10.8,0,0,0,.948,1.562,14.419,14.419,0,0,0,4.431-2.27A15.128,15.128,0,0,0,16.074,4.361Zm-8.981,8.1a1.7,1.7,0,0,1-1.573-1.79A1.689,1.689,0,0,1,7.093,8.881a1.679,1.679,0,0,1,1.573,1.791A1.687,1.687,0,0,1,7.093,12.462Zm5.814,0a1.7,1.7,0,0,1-1.573-1.79,1.689,1.689,0,0,1,1.573-1.791,1.679,1.679,0,0,1,1.573,1.791A1.688,1.688,0,0,1,12.907,12.462Z\"/></svg>',\n            \"desktop\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"8\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"11\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"16\" width=\"10\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"3.5\" width=\"17\" height=\"11\"/></svg>',\n            \"database\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"4.64\" rx=\"7.5\" ry=\"3.14\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\"/></svg>',\n            \"crosshairs\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"7.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"10\" x2=\"10\" y2=\"8\"/><line fill=\"none\" stroke=\"#000\" x1=\"10\" y1=\"12\" x2=\"10\" y2=\"20\"/><line fill=\"none\" stroke=\"#000\" y1=\"10\" x2=\"8\" y2=\"10\"/><line fill=\"none\" stroke=\"#000\" x1=\"12\" y1=\"10\" x2=\"20\" y2=\"10\"/></svg>',\n            \"credit-card\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"4.5\" width=\"17\" height=\"12\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"3\"/></svg>',\n            \"copy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"2.5\" width=\"12\" height=\"16\"/><polyline fill=\"none\" stroke=\"#000\" points=\"5 0.5 17.5 0.5 17.5 17\"/></svg>',\n            \"comments\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"2 0.5 19.5 0.5 19.5 13\"/><path d=\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\"/></svg>',\n            \"commenting\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\"/><circle cx=\"10\" cy=\"8\" r=\"1\"/><circle cx=\"6\" cy=\"8\" r=\"1\"/><circle cx=\"14\" cy=\"8\" r=\"1\"/></svg>',\n            \"comment\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\"/></svg>',\n            \"cog\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"9.997\" cy=\"10\" r=\"3.31\"/><path fill=\"none\" stroke=\"#000\" d=\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\"/></svg>',\n            \"code\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"13,4 19,10 13,16\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"7,4 1,10 7,16\"/></svg>',\n            \"cloud-upload\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"7.25 11.75 9.5 9.5 11.75 11.75\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>',\n            \"cloud-download\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"11.75 16 9.5 18.25 7.25 16\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>',\n            \"close\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,16 L4,4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,4 L4,16\"/></svg>',\n            \"clock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>',\n            \"chevron-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"4 13 10 7 16 13\"/></svg>',\n            \"chevron-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"7 4 13 10 7 16\"/></svg>',\n            \"chevron-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"13 16 7 10 13 4\"/></svg>',\n            \"chevron-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"16 7 10 13 4 7\"/></svg>',\n            \"chevron-double-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 6 14 10 10 14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"6 6 10 10 6 14\"/></svg>',\n            \"chevron-double-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 14 6 10 10 6\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"14 14 10 10 14 6\"/></svg>',\n            \"check\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"/></svg>',\n            \"cart\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"7.3\" cy=\"17.3\" r=\"1.4\"/><circle cx=\"13.3\" cy=\"17.3\" r=\"1.4\"/><polyline fill=\"none\" stroke=\"#000\" points=\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\"/></svg>',\n            \"camera\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10.8\" r=\"3.8\"/><path fill=\"none\" stroke=\"#000\" d=\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\"/></svg>',\n            \"calendar\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\"/><rect width=\"1\" height=\"3\" x=\"6\" y=\"2\"/><rect width=\"1\" height=\"3\" x=\"13\" y=\"2\"/></svg>',\n            \"bookmark\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\"/></svg>',\n            \"bolt\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\"/></svg>',\n            \"bold\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\"/></svg>',\n            \"bell\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\"/></svg>',\n            \"behance\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\"/><path d=\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\"/><rect x=\"13\" y=\"4\" width=\"5\" height=\"1.4\"/></svg>',\n            \"ban\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"4\" y1=\"3.5\" x2=\"16\" y2=\"16.5\"/></svg>',\n            \"bag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M7.5,7.5V4A2.48,2.48,0,0,1,10,1.5,2.54,2.54,0,0,1,12.5,4V7.5\"/><polygon fill=\"none\" stroke=\"#000\" points=\"16.5 7.5 3.5 7.5 2.5 18.5 17.5 18.5 16.5 7.5\"/></svg>',\n            \"arrow-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"16\" x2=\"10.5\" y2=\"5\"/></svg>',\n            \"arrow-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 5 15 9.5 10 14\"/><line fill=\"none\" stroke=\"#000\" x1=\"4\" y1=\"9.5\" x2=\"15\" y2=\"9.5\"/></svg>',\n            \"arrow-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 14 5 9.5 10 5\"/><line fill=\"none\" stroke=\"#000\" x1=\"16\" y1=\"9.5\" x2=\"5\" y2=\"9.52\"/></svg>',\n            \"arrow-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"4\" x2=\"10.5\" y2=\"15\"/></svg>',\n            \"apple\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m17.23,6.93c-.1.08-1.95,1.12-1.95,3.43,0,2.67,2.35,3.62,2.42,3.64-.01.06-.37,1.29-1.24,2.55-.77,1.11-1.58,2.22-2.8,2.22s-1.54-.71-2.95-.71-1.87.73-2.99.73-1.9-1.03-2.8-2.29c-1.04-1.48-1.88-3.78-1.88-5.96,0-3.5,2.28-5.36,4.51-5.36,1.19,0,2.18.78,2.93.78s1.82-.83,3.17-.83c.51,0,2.36.05,3.57,1.79h0Zm-4.21-3.27c.56-.66.96-1.59.96-2.51,0-.13-.01-.26-.03-.36-.91.03-1.99.61-2.65,1.36-.51.58-.99,1.5-.99,2.44,0,.14.02.28.03.33.06.01.15.02.24.02.82,0,1.85-.55,2.44-1.28h0Z\"/></svg>',\n            \"android\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m14.88,6.77l1.66-2.87c.09-.16.04-.37-.12-.46-.16-.09-.37-.04-.46.12l-1.68,2.91c-1.28-.59-2.73-.91-4.28-.91s-3,.33-4.28.91l-1.68-2.91c-.09-.16-.3-.22-.46-.12-.16.09-.22.3-.12.46l1.66,2.87C2.26,8.32.32,11.22,0,14.61h20c-.32-3.39-2.26-6.29-5.12-7.84h0Zm-9.47,5.03c-.46,0-.84-.38-.84-.84s.38-.84.84-.84.84.38.84.84c0,.46-.37.84-.84.84Zm9.18,0c-.46,0-.84-.38-.84-.84s.38-.84.84-.84.84.38.84.84c0,.46-.37.84-.84.84Z\"/></svg>',\n            \"android-robot\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m17.61,7.96v4.64c-.06,1.48-2.17,1.48-2.23,0v-4.64c.06-1.48,2.17-1.48,2.23,0Z\"/><path d=\"m4.62,7.96v4.64c-.06,1.48-2.17,1.48-2.23,0v-4.64c.06-1.48,2.17-1.48,2.23,0Z\"/><path d=\"m12.78,2.85c-.11-.07-.23-.13-.34-.19.13-.23.65-1.17.79-1.42.07-.12-.05-.27-.18-.23-.04.01-.07.04-.09.08l-.79,1.43c-1.32-.6-2.98-.6-4.3,0-.13-.23-.65-1.18-.79-1.43-.04-.07-.14-.1-.21-.06-.08.04-.1.14-.06.21,0,0,.79,1.42.79,1.42-1.49.77-2.53,2.28-2.53,3.99-.02,0,9.93,0,9.93,0,.01-1.55-.87-2.98-2.19-3.8Zm-5.07,1.98c-.23,0-.41-.19-.41-.41.01-.27.21-.41.41-.41s.4.14.42.41c0,.22-.18.42-.41.41Zm4.58,0c-.23,0-.42-.19-.41-.41.01-.28.21-.41.41-.41s.4.14.41.41c0,.23-.19.41-.41.41Z\"/><path d=\"m14.97,7.03v7.2c0,.66-.54,1.2-1.2,1.2h-.8v2.46c-.06,1.48-2.16,1.48-2.23,0,0,0,0-2.46,0-2.46h-1.48v2.46c0,.61-.5,1.11-1.11,1.11s-1.11-.5-1.11-1.11v-2.46h-.8c-.66,0-1.2-.54-1.2-1.2,0,0,0-7.2,0-7.2h9.93Z\"/></svg>',\n            \"album\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"5\" y=\"2\" width=\"10\" height=\"1\"/><rect x=\"3\" y=\"4\" width=\"14\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"6.5\" width=\"17\" height=\"11\"/></svg>',\n            \"500px\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\"/><path d=\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\"/><path d=\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\"/><path d=\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\"/></svg>'\n        });\n    }\n    if (typeof window !== \"undefined\" && window.UIkit) window.UIkit.use(plugin);\n    return plugin;\n});\n\n\n// loads the Icon plugin\n(0, (/*@__PURE__*/$parcel$interopDefault($0efce4e7257869d3$exports))).use((0, (/*@__PURE__*/$parcel$interopDefault($bedd7f4d55ec3272$exports))));\nconst $b8f9b7833fa37166$var$date = new Date();\ndocument.getElementsByTagName(\"year\")[0].innerHTML = $b8f9b7833fa37166$var$date.getFullYear(); // const expiry = new Date(\"2024-03-01T00:00:00-08:00\");\n // const expires = document.querySelectorAll('.expires');\n // if(date >= expiry) {\n //     expires.forEach(element => {\n //         element.style.display = 'none';\n //     });\n // }\n\n})();\n//# sourceMappingURL=index.e07e076c.js.map\n","import UIkit from 'uikit';\r\nimport Icons from 'uikit/dist/js/uikit-icons';\r\n\r\n// loads the Icon plugin\r\nUIkit.use(Icons);\r\n\r\nconst date = new Date();\r\ndocument.getElementsByTagName('year')[0].innerHTML = date.getFullYear();\r\n\r\n// const expiry = new Date(\"2024-03-01T00:00:00-08:00\");\r\n// const expires = document.querySelectorAll('.expires');\r\n\r\n// if(date >= expiry) {\r\n//     expires.forEach(element => {\r\n//         element.style.display = 'none';\r\n//     });\r\n// }","/*! UIkit 3.17.11 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('uikit', factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.UIkit = factory());\n})(this, (function () { 'use strict';\n\n    const { hasOwnProperty, toString } = Object.prototype;\n    function hasOwn(obj, key) {\n      return hasOwnProperty.call(obj, key);\n    }\n    const hyphenateRe = /\\B([A-Z])/g;\n    const hyphenate = memoize((str) => str.replace(hyphenateRe, \"-$1\").toLowerCase());\n    const camelizeRe = /-(\\w)/g;\n    const camelize = memoize(\n      (str) => (str.charAt(0).toLowerCase() + str.slice(1)).replace(camelizeRe, (_, c) => c.toUpperCase())\n    );\n    const ucfirst = memoize((str) => str.charAt(0).toUpperCase() + str.slice(1));\n    function startsWith(str, search) {\n      var _a;\n      return (_a = str == null ? void 0 : str.startsWith) == null ? void 0 : _a.call(str, search);\n    }\n    function endsWith(str, search) {\n      var _a;\n      return (_a = str == null ? void 0 : str.endsWith) == null ? void 0 : _a.call(str, search);\n    }\n    function includes(obj, search) {\n      var _a;\n      return (_a = obj == null ? void 0 : obj.includes) == null ? void 0 : _a.call(obj, search);\n    }\n    function findIndex(array, predicate) {\n      var _a;\n      return (_a = array == null ? void 0 : array.findIndex) == null ? void 0 : _a.call(array, predicate);\n    }\n    const { isArray, from: toArray } = Array;\n    const { assign } = Object;\n    function isFunction(obj) {\n      return typeof obj === \"function\";\n    }\n    function isObject(obj) {\n      return obj !== null && typeof obj === \"object\";\n    }\n    function isPlainObject(obj) {\n      return toString.call(obj) === \"[object Object]\";\n    }\n    function isWindow(obj) {\n      return isObject(obj) && obj === obj.window;\n    }\n    function isDocument(obj) {\n      return nodeType(obj) === 9;\n    }\n    function isNode(obj) {\n      return nodeType(obj) >= 1;\n    }\n    function isElement(obj) {\n      return nodeType(obj) === 1;\n    }\n    function nodeType(obj) {\n      return !isWindow(obj) && isObject(obj) && obj.nodeType;\n    }\n    function isBoolean(value) {\n      return typeof value === \"boolean\";\n    }\n    function isString(value) {\n      return typeof value === \"string\";\n    }\n    function isNumber(value) {\n      return typeof value === \"number\";\n    }\n    function isNumeric(value) {\n      return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n    }\n    function isEmpty(obj) {\n      return !(isArray(obj) ? obj.length : isObject(obj) ? Object.keys(obj).length : false);\n    }\n    function isUndefined(value) {\n      return value === void 0;\n    }\n    function toBoolean(value) {\n      return isBoolean(value) ? value : value === \"true\" || value === \"1\" || value === \"\" ? true : value === \"false\" || value === \"0\" ? false : value;\n    }\n    function toNumber(value) {\n      const number = Number(value);\n      return isNaN(number) ? false : number;\n    }\n    function toFloat(value) {\n      return parseFloat(value) || 0;\n    }\n    function toNode(element) {\n      return toNodes(element)[0];\n    }\n    function toNodes(element) {\n      return isNode(element) ? [element] : Array.from(element || []).filter(isNode);\n    }\n    function toWindow(element) {\n      if (isWindow(element)) {\n        return element;\n      }\n      element = toNode(element);\n      const document = isDocument(element) ? element : element == null ? void 0 : element.ownerDocument;\n      return (document == null ? void 0 : document.defaultView) || window;\n    }\n    function isEqual(value, other) {\n      return value === other || isObject(value) && isObject(other) && Object.keys(value).length === Object.keys(other).length && each(value, (val, key) => val === other[key]);\n    }\n    function swap(value, a, b) {\n      return value.replace(new RegExp(`${a}|${b}`, \"g\"), (match) => match === a ? b : a);\n    }\n    function last(array) {\n      return array[array.length - 1];\n    }\n    function each(obj, cb) {\n      for (const key in obj) {\n        if (false === cb(obj[key], key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function sortBy(array, prop) {\n      return array.slice().sort(\n        ({ [prop]: propA = 0 }, { [prop]: propB = 0 }) => propA > propB ? 1 : propB > propA ? -1 : 0\n      );\n    }\n    function sumBy(array, iteratee) {\n      return array.reduce(\n        (sum, item) => sum + toFloat(isFunction(iteratee) ? iteratee(item) : item[iteratee]),\n        0\n      );\n    }\n    function uniqueBy(array, prop) {\n      const seen = /* @__PURE__ */ new Set();\n      return array.filter(({ [prop]: check }) => seen.has(check) ? false : seen.add(check));\n    }\n    function pick(obj, props) {\n      return props.reduce((res, prop) => ({ ...res, [prop]: obj[prop] }), {});\n    }\n    function clamp(number, min = 0, max = 1) {\n      return Math.min(Math.max(toNumber(number) || 0, min), max);\n    }\n    function noop() {\n    }\n    function intersectRect(...rects) {\n      return [\n        [\"bottom\", \"top\"],\n        [\"right\", \"left\"]\n      ].every(\n        ([minProp, maxProp]) => Math.min(...rects.map(({ [minProp]: min }) => min)) - Math.max(...rects.map(({ [maxProp]: max }) => max)) > 0\n      );\n    }\n    function pointInRect(point, rect) {\n      return point.x <= rect.right && point.x >= rect.left && point.y <= rect.bottom && point.y >= rect.top;\n    }\n    function ratio(dimensions, prop, value) {\n      const aProp = prop === \"width\" ? \"height\" : \"width\";\n      return {\n        [aProp]: dimensions[prop] ? Math.round(value * dimensions[aProp] / dimensions[prop]) : dimensions[aProp],\n        [prop]: value\n      };\n    }\n    function contain(dimensions, maxDimensions) {\n      dimensions = { ...dimensions };\n      for (const prop in dimensions) {\n        dimensions = dimensions[prop] > maxDimensions[prop] ? ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n      }\n      return dimensions;\n    }\n    function cover$1(dimensions, maxDimensions) {\n      dimensions = contain(dimensions, maxDimensions);\n      for (const prop in dimensions) {\n        dimensions = dimensions[prop] < maxDimensions[prop] ? ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n      }\n      return dimensions;\n    }\n    const Dimensions = { ratio, contain, cover: cover$1 };\n    function getIndex(i, elements, current = 0, finite = false) {\n      elements = toNodes(elements);\n      const { length } = elements;\n      if (!length) {\n        return -1;\n      }\n      i = isNumeric(i) ? toNumber(i) : i === \"next\" ? current + 1 : i === \"previous\" ? current - 1 : i === \"last\" ? length - 1 : elements.indexOf(toNode(i));\n      if (finite) {\n        return clamp(i, 0, length - 1);\n      }\n      i %= length;\n      return i < 0 ? i + length : i;\n    }\n    function memoize(fn) {\n      const cache = /* @__PURE__ */ Object.create(null);\n      return (key, ...args) => cache[key] || (cache[key] = fn(key, ...args));\n    }\n\n    function attr(element, name, value) {\n      var _a;\n      if (isObject(name)) {\n        for (const key in name) {\n          attr(element, key, name[key]);\n        }\n        return;\n      }\n      if (isUndefined(value)) {\n        return (_a = toNode(element)) == null ? void 0 : _a.getAttribute(name);\n      } else {\n        for (const el of toNodes(element)) {\n          if (isFunction(value)) {\n            value = value.call(el, attr(el, name));\n          }\n          if (value === null) {\n            removeAttr(el, name);\n          } else {\n            el.setAttribute(name, value);\n          }\n        }\n      }\n    }\n    function hasAttr(element, name) {\n      return toNodes(element).some((element2) => element2.hasAttribute(name));\n    }\n    function removeAttr(element, name) {\n      toNodes(element).forEach((element2) => element2.removeAttribute(name));\n    }\n    function data(element, attribute) {\n      for (const name of [attribute, `data-${attribute}`]) {\n        if (hasAttr(element, name)) {\n          return attr(element, name);\n        }\n      }\n    }\n\n    function addClass(element, ...classes) {\n      for (const node of toNodes(element)) {\n        const add = toClasses(classes).filter((cls) => !hasClass(node, cls));\n        if (add.length) {\n          node.classList.add(...add);\n        }\n      }\n    }\n    function removeClass(element, ...classes) {\n      for (const node of toNodes(element)) {\n        const remove = toClasses(classes).filter((cls) => hasClass(node, cls));\n        if (remove.length) {\n          node.classList.remove(...remove);\n        }\n      }\n    }\n    function removeClasses$1(element, clsRegex) {\n      clsRegex = new RegExp(clsRegex);\n      for (const node of toNodes(element)) {\n        node.classList.remove(...toArray(node.classList).filter((cls) => cls.match(clsRegex)));\n      }\n    }\n    function replaceClass(element, oldClass, newClass) {\n      newClass = toClasses(newClass);\n      oldClass = toClasses(oldClass).filter((cls) => !includes(newClass, cls));\n      removeClass(element, oldClass);\n      addClass(element, newClass);\n    }\n    function hasClass(element, cls) {\n      [cls] = toClasses(cls);\n      return toNodes(element).some((node) => node.classList.contains(cls));\n    }\n    function toggleClass(element, cls, force) {\n      const classes = toClasses(cls);\n      if (!isUndefined(force)) {\n        force = !!force;\n      }\n      for (const node of toNodes(element)) {\n        for (const cls2 of classes) {\n          node.classList.toggle(cls2, force);\n        }\n      }\n    }\n    function toClasses(str) {\n      return str ? isArray(str) ? str.map(toClasses).flat() : String(str).split(/[ ,]/).filter(Boolean) : [];\n    }\n\n    const voidElements = {\n      area: true,\n      base: true,\n      br: true,\n      col: true,\n      embed: true,\n      hr: true,\n      img: true,\n      input: true,\n      keygen: true,\n      link: true,\n      meta: true,\n      param: true,\n      source: true,\n      track: true,\n      wbr: true\n    };\n    function isVoidElement(element) {\n      return toNodes(element).some((element2) => voidElements[element2.tagName.toLowerCase()]);\n    }\n    function isVisible(element) {\n      return toNodes(element).some(\n        (element2) => element2.offsetWidth || element2.offsetHeight || element2.getClientRects().length\n      );\n    }\n    const selInput = \"input,select,textarea,button\";\n    function isInput(element) {\n      return toNodes(element).some((element2) => matches(element2, selInput));\n    }\n    const selFocusable = `${selInput},a[href],[tabindex]`;\n    function isFocusable(element) {\n      return matches(element, selFocusable);\n    }\n    function parent(element) {\n      var _a;\n      return (_a = toNode(element)) == null ? void 0 : _a.parentElement;\n    }\n    function filter$1(element, selector) {\n      return toNodes(element).filter((element2) => matches(element2, selector));\n    }\n    function matches(element, selector) {\n      return toNodes(element).some((element2) => element2.matches(selector));\n    }\n    function closest(element, selector) {\n      var _a;\n      return (_a = toNode(element)) == null ? void 0 : _a.closest(startsWith(selector, \">\") ? selector.slice(1) : selector);\n    }\n    function within(element, selector) {\n      return isString(selector) ? !!closest(element, selector) : toNode(selector).contains(toNode(element));\n    }\n    function parents(element, selector) {\n      const elements = [];\n      while (element = parent(element)) {\n        if (!selector || matches(element, selector)) {\n          elements.push(element);\n        }\n      }\n      return elements;\n    }\n    function children(element, selector) {\n      element = toNode(element);\n      const children2 = element ? toArray(element.children) : [];\n      return selector ? filter$1(children2, selector) : children2;\n    }\n    function index(element, ref) {\n      return ref ? toNodes(element).indexOf(toNode(ref)) : children(parent(element)).indexOf(element);\n    }\n    function isSameSiteAnchor(el) {\n      el = toNode(el);\n      return el && [\"origin\", \"pathname\", \"search\"].every((part) => el[part] === location[part]);\n    }\n    function getTargetedElement(el) {\n      if (isSameSiteAnchor(el)) {\n        el = toNode(el);\n        const id = decodeURIComponent(el.hash).substring(1);\n        return document.getElementById(id) || document.getElementsByName(id)[0];\n      }\n    }\n\n    function query(selector, context) {\n      return find(selector, getContext(selector, context));\n    }\n    function queryAll(selector, context) {\n      return findAll(selector, getContext(selector, context));\n    }\n    function find(selector, context) {\n      return toNode(_query(selector, toNode(context), \"querySelector\"));\n    }\n    function findAll(selector, context) {\n      return toNodes(_query(selector, toNode(context), \"querySelectorAll\"));\n    }\n    const contextSelectorRe = /(^|[^\\\\],)\\s*[!>+~-]/;\n    const isContextSelector = memoize((selector) => selector.match(contextSelectorRe));\n    function getContext(selector, context = document) {\n      return isString(selector) && isContextSelector(selector) || isDocument(context) ? context : context.ownerDocument;\n    }\n    const contextSanitizeRe = /([!>+~-])(?=\\s+[!>+~-]|\\s*$)/g;\n    const sanatize = memoize((selector) => selector.replace(contextSanitizeRe, \"$1 *\"));\n    function _query(selector, context = document, queryFn) {\n      if (!selector || !isString(selector)) {\n        return selector;\n      }\n      selector = sanatize(selector);\n      if (isContextSelector(selector)) {\n        const split = splitSelector(selector);\n        selector = \"\";\n        for (let sel of split) {\n          let ctx = context;\n          if (sel[0] === \"!\") {\n            const selectors = sel.substr(1).trim().split(\" \");\n            ctx = parent(context).closest(selectors[0]);\n            sel = selectors.slice(1).join(\" \").trim();\n            if (!sel.length && split.length === 1) {\n              return ctx;\n            }\n          }\n          if (sel[0] === \"-\") {\n            const selectors = sel.substr(1).trim().split(\" \");\n            const prev = (ctx || context).previousElementSibling;\n            ctx = matches(prev, sel.substr(1)) ? prev : null;\n            sel = selectors.slice(1).join(\" \");\n          }\n          if (ctx) {\n            selector += `${selector ? \",\" : \"\"}${domPath(ctx)} ${sel}`;\n          }\n        }\n        context = document;\n      }\n      try {\n        return context[queryFn](selector);\n      } catch (e) {\n        return null;\n      }\n    }\n    const selectorRe = /.*?[^\\\\](?:,|$)/g;\n    const splitSelector = memoize(\n      (selector) => selector.match(selectorRe).map((selector2) => selector2.replace(/,$/, \"\").trim())\n    );\n    function domPath(element) {\n      const names = [];\n      while (element.parentNode) {\n        const id = attr(element, \"id\");\n        if (id) {\n          names.unshift(`#${escape(id)}`);\n          break;\n        } else {\n          let { tagName } = element;\n          if (tagName !== \"HTML\") {\n            tagName += `:nth-child(${index(element) + 1})`;\n          }\n          names.unshift(tagName);\n          element = element.parentNode;\n        }\n      }\n      return names.join(\" > \");\n    }\n    function escape(css) {\n      return isString(css) ? CSS.escape(css) : \"\";\n    }\n\n    function on(...args) {\n      let [targets, types, selector, listener, useCapture = false] = getArgs(args);\n      if (listener.length > 1) {\n        listener = detail(listener);\n      }\n      if (useCapture == null ? void 0 : useCapture.self) {\n        listener = selfFilter(listener);\n      }\n      if (selector) {\n        listener = delegate(selector, listener);\n      }\n      for (const type of types) {\n        for (const target of targets) {\n          target.addEventListener(type, listener, useCapture);\n        }\n      }\n      return () => off(targets, types, listener, useCapture);\n    }\n    function off(...args) {\n      let [targets, types, , listener, useCapture = false] = getArgs(args);\n      for (const type of types) {\n        for (const target of targets) {\n          target.removeEventListener(type, listener, useCapture);\n        }\n      }\n    }\n    function once(...args) {\n      const [element, types, selector, listener, useCapture = false, condition] = getArgs(args);\n      const off2 = on(\n        element,\n        types,\n        selector,\n        (e) => {\n          const result = !condition || condition(e);\n          if (result) {\n            off2();\n            listener(e, result);\n          }\n        },\n        useCapture\n      );\n      return off2;\n    }\n    function trigger(targets, event, detail2) {\n      return toEventTargets(targets).every(\n        (target) => target.dispatchEvent(createEvent(event, true, true, detail2))\n      );\n    }\n    function createEvent(e, bubbles = true, cancelable = false, detail2) {\n      if (isString(e)) {\n        e = new CustomEvent(e, { bubbles, cancelable, detail: detail2 });\n      }\n      return e;\n    }\n    function getArgs(args) {\n      args[0] = toEventTargets(args[0]);\n      if (isString(args[1])) {\n        args[1] = args[1].split(\" \");\n      }\n      if (isFunction(args[2])) {\n        args.splice(2, 0, false);\n      }\n      return args;\n    }\n    function delegate(selector, listener) {\n      return (e) => {\n        const current = selector[0] === \">\" ? findAll(selector, e.currentTarget).reverse().find((element) => element.contains(e.target)) : e.target.closest(selector);\n        if (current) {\n          e.current = current;\n          listener.call(this, e);\n          delete e.current;\n        }\n      };\n    }\n    function detail(listener) {\n      return (e) => isArray(e.detail) ? listener(e, ...e.detail) : listener(e);\n    }\n    function selfFilter(listener) {\n      return function(e) {\n        if (e.target === e.currentTarget || e.target === e.current) {\n          return listener.call(null, e);\n        }\n      };\n    }\n    function isEventTarget(target) {\n      return target && \"addEventListener\" in target;\n    }\n    function toEventTarget(target) {\n      return isEventTarget(target) ? target : toNode(target);\n    }\n    function toEventTargets(target) {\n      return isArray(target) ? target.map(toEventTarget).filter(Boolean) : isString(target) ? findAll(target) : isEventTarget(target) ? [target] : toNodes(target);\n    }\n    function isTouch(e) {\n      return e.pointerType === \"touch\" || !!e.touches;\n    }\n    function getEventPos(e) {\n      var _a, _b;\n      const { clientX: x, clientY: y } = ((_a = e.touches) == null ? void 0 : _a[0]) || ((_b = e.changedTouches) == null ? void 0 : _b[0]) || e;\n      return { x, y };\n    }\n\n    const cssNumber = {\n      \"animation-iteration-count\": true,\n      \"column-count\": true,\n      \"fill-opacity\": true,\n      \"flex-grow\": true,\n      \"flex-shrink\": true,\n      \"font-weight\": true,\n      \"line-height\": true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      \"stroke-dasharray\": true,\n      \"stroke-dashoffset\": true,\n      widows: true,\n      \"z-index\": true,\n      zoom: true\n    };\n    function css(element, property, value, priority) {\n      const elements = toNodes(element);\n      for (const element2 of elements) {\n        if (isString(property)) {\n          property = propName(property);\n          if (isUndefined(value)) {\n            return getComputedStyle(element2).getPropertyValue(property);\n          } else {\n            element2.style.setProperty(\n              property,\n              isNumeric(value) && !cssNumber[property] ? `${value}px` : value || isNumber(value) ? value : \"\",\n              priority\n            );\n          }\n        } else if (isArray(property)) {\n          const props = {};\n          for (const prop of property) {\n            props[prop] = css(element2, prop);\n          }\n          return props;\n        } else if (isObject(property)) {\n          priority = value;\n          each(property, (value2, property2) => css(element2, property2, value2, priority));\n        }\n      }\n      return elements[0];\n    }\n    const propName = memoize((name) => vendorPropName(name));\n    function vendorPropName(name) {\n      if (startsWith(name, \"--\")) {\n        return name;\n      }\n      name = hyphenate(name);\n      const { style } = document.documentElement;\n      if (name in style) {\n        return name;\n      }\n      for (const prefix of [\"webkit\", \"moz\"]) {\n        const prefixedName = `-${prefix}-${name}`;\n        if (prefixedName in style) {\n          return prefixedName;\n        }\n      }\n    }\n\n    const clsTransition = \"uk-transition\";\n    const clsTransitionEnd = \"transitionend\";\n    const clsTransitionCanceled = \"transitioncanceled\";\n    function transition$1(element, props, duration = 400, timing = \"linear\") {\n      duration = Math.round(duration);\n      return Promise.all(\n        toNodes(element).map(\n          (element2) => new Promise((resolve, reject) => {\n            for (const name in props) {\n              const value = css(element2, name);\n              if (value === \"\") {\n                css(element2, name, value);\n              }\n            }\n            const timer = setTimeout(() => trigger(element2, clsTransitionEnd), duration);\n            once(\n              element2,\n              [clsTransitionEnd, clsTransitionCanceled],\n              ({ type }) => {\n                clearTimeout(timer);\n                removeClass(element2, clsTransition);\n                css(element2, {\n                  transitionProperty: \"\",\n                  transitionDuration: \"\",\n                  transitionTimingFunction: \"\"\n                });\n                type === clsTransitionCanceled ? reject() : resolve(element2);\n              },\n              { self: true }\n            );\n            addClass(element2, clsTransition);\n            css(element2, {\n              transitionProperty: Object.keys(props).map(propName).join(\",\"),\n              transitionDuration: `${duration}ms`,\n              transitionTimingFunction: timing,\n              ...props\n            });\n          })\n        )\n      );\n    }\n    const Transition = {\n      start: transition$1,\n      async stop(element) {\n        trigger(element, clsTransitionEnd);\n        await Promise.resolve();\n      },\n      async cancel(element) {\n        trigger(element, clsTransitionCanceled);\n        await Promise.resolve();\n      },\n      inProgress(element) {\n        return hasClass(element, clsTransition);\n      }\n    };\n    const animationPrefix = \"uk-animation-\";\n    const clsAnimationEnd = \"animationend\";\n    const clsAnimationCanceled = \"animationcanceled\";\n    function animate$2(element, animation, duration = 200, origin, out) {\n      return Promise.all(\n        toNodes(element).map(\n          (element2) => new Promise((resolve, reject) => {\n            trigger(element2, clsAnimationCanceled);\n            const timer = setTimeout(() => trigger(element2, clsAnimationEnd), duration);\n            once(\n              element2,\n              [clsAnimationEnd, clsAnimationCanceled],\n              ({ type }) => {\n                clearTimeout(timer);\n                type === clsAnimationCanceled ? reject() : resolve(element2);\n                css(element2, \"animationDuration\", \"\");\n                removeClasses$1(element2, `${animationPrefix}\\\\S*`);\n              },\n              { self: true }\n            );\n            css(element2, \"animationDuration\", `${duration}ms`);\n            addClass(element2, animation, animationPrefix + (out ? \"leave\" : \"enter\"));\n            if (startsWith(animation, animationPrefix)) {\n              origin && addClass(element2, `uk-transform-origin-${origin}`);\n              out && addClass(element2, `${animationPrefix}reverse`);\n            }\n          })\n        )\n      );\n    }\n    const inProgressRe = new RegExp(`${animationPrefix}(enter|leave)`);\n    const Animation = {\n      in: animate$2,\n      out(element, animation, duration, origin) {\n        return animate$2(element, animation, duration, origin, true);\n      },\n      inProgress(element) {\n        return inProgressRe.test(attr(element, \"class\"));\n      },\n      cancel(element) {\n        trigger(element, clsAnimationCanceled);\n      }\n    };\n\n    function ready(fn) {\n      if (document.readyState !== \"loading\") {\n        fn();\n        return;\n      }\n      once(document, \"DOMContentLoaded\", fn);\n    }\n    function isTag(element, ...tagNames) {\n      return tagNames.some((tagName) => {\n        var _a;\n        return ((_a = element == null ? void 0 : element.tagName) == null ? void 0 : _a.toLowerCase()) === tagName.toLowerCase();\n      });\n    }\n    function empty(element) {\n      element = $(element);\n      element.innerHTML = \"\";\n      return element;\n    }\n    function html(parent2, html2) {\n      return isUndefined(html2) ? $(parent2).innerHTML : append(empty(parent2), html2);\n    }\n    const prepend = applyFn(\"prepend\");\n    const append = applyFn(\"append\");\n    const before = applyFn(\"before\");\n    const after = applyFn(\"after\");\n    function applyFn(fn) {\n      return function(ref, element) {\n        var _a;\n        const nodes = toNodes(isString(element) ? fragment(element) : element);\n        (_a = $(ref)) == null ? void 0 : _a[fn](...nodes);\n        return unwrapSingle(nodes);\n      };\n    }\n    function remove$1(element) {\n      toNodes(element).forEach((element2) => element2.remove());\n    }\n    function wrapAll(element, structure) {\n      structure = toNode(before(element, structure));\n      while (structure.firstChild) {\n        structure = structure.firstChild;\n      }\n      append(structure, element);\n      return structure;\n    }\n    function wrapInner(element, structure) {\n      return toNodes(\n        toNodes(element).map(\n          (element2) => element2.hasChildNodes() ? wrapAll(toArray(element2.childNodes), structure) : append(element2, structure)\n        )\n      );\n    }\n    function unwrap(element) {\n      toNodes(element).map(parent).filter((value, index, self) => self.indexOf(value) === index).forEach((parent2) => parent2.replaceWith(...parent2.childNodes));\n    }\n    const singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n    function fragment(html2) {\n      const matches = singleTagRe.exec(html2);\n      if (matches) {\n        return document.createElement(matches[1]);\n      }\n      const container = document.createElement(\"template\");\n      container.innerHTML = html2.trim();\n      return unwrapSingle(container.content.childNodes);\n    }\n    function unwrapSingle(nodes) {\n      return nodes.length > 1 ? nodes : nodes[0];\n    }\n    function apply(node, fn) {\n      if (!isElement(node)) {\n        return;\n      }\n      fn(node);\n      node = node.firstElementChild;\n      while (node) {\n        const next = node.nextElementSibling;\n        apply(node, fn);\n        node = next;\n      }\n    }\n    function $(selector, context) {\n      return isHtml(selector) ? toNode(fragment(selector)) : find(selector, context);\n    }\n    function $$(selector, context) {\n      return isHtml(selector) ? toNodes(fragment(selector)) : findAll(selector, context);\n    }\n    function isHtml(str) {\n      return isString(str) && startsWith(str.trim(), \"<\");\n    }\n\n    const dirs$1 = {\n      width: [\"left\", \"right\"],\n      height: [\"top\", \"bottom\"]\n    };\n    function dimensions$1(element) {\n      const rect = isElement(element) ? toNode(element).getBoundingClientRect() : { height: height(element), width: width(element), top: 0, left: 0 };\n      return {\n        height: rect.height,\n        width: rect.width,\n        top: rect.top,\n        left: rect.left,\n        bottom: rect.top + rect.height,\n        right: rect.left + rect.width\n      };\n    }\n    function offset(element, coordinates) {\n      if (coordinates) {\n        css(element, { left: 0, top: 0 });\n      }\n      const currentOffset = dimensions$1(element);\n      if (element) {\n        const { scrollY, scrollX } = toWindow(element);\n        const offsetBy = { height: scrollY, width: scrollX };\n        for (const dir in dirs$1) {\n          for (const prop of dirs$1[dir]) {\n            currentOffset[prop] += offsetBy[dir];\n          }\n        }\n      }\n      if (!coordinates) {\n        return currentOffset;\n      }\n      for (const prop of [\"left\", \"top\"]) {\n        css(element, prop, coordinates[prop] - currentOffset[prop]);\n      }\n    }\n    function position(element) {\n      let { top, left } = offset(element);\n      const {\n        ownerDocument: { body, documentElement },\n        offsetParent\n      } = toNode(element);\n      let parent = offsetParent || documentElement;\n      while (parent && (parent === body || parent === documentElement) && css(parent, \"position\") === \"static\") {\n        parent = parent.parentNode;\n      }\n      if (isElement(parent)) {\n        const parentOffset = offset(parent);\n        top -= parentOffset.top + toFloat(css(parent, \"borderTopWidth\"));\n        left -= parentOffset.left + toFloat(css(parent, \"borderLeftWidth\"));\n      }\n      return {\n        top: top - toFloat(css(element, \"marginTop\")),\n        left: left - toFloat(css(element, \"marginLeft\"))\n      };\n    }\n    function offsetPosition(element) {\n      element = toNode(element);\n      const offset2 = [element.offsetTop, element.offsetLeft];\n      while (element = element.offsetParent) {\n        offset2[0] += element.offsetTop + toFloat(css(element, `borderTopWidth`));\n        offset2[1] += element.offsetLeft + toFloat(css(element, `borderLeftWidth`));\n        if (css(element, \"position\") === \"fixed\") {\n          const win = toWindow(element);\n          offset2[0] += win.scrollY;\n          offset2[1] += win.scrollX;\n          return offset2;\n        }\n      }\n      return offset2;\n    }\n    const height = dimension(\"height\");\n    const width = dimension(\"width\");\n    function dimension(prop) {\n      const propName = ucfirst(prop);\n      return (element, value) => {\n        if (isUndefined(value)) {\n          if (isWindow(element)) {\n            return element[`inner${propName}`];\n          }\n          if (isDocument(element)) {\n            const doc = element.documentElement;\n            return Math.max(doc[`offset${propName}`], doc[`scroll${propName}`]);\n          }\n          element = toNode(element);\n          value = css(element, prop);\n          value = value === \"auto\" ? element[`offset${propName}`] : toFloat(value) || 0;\n          return value - boxModelAdjust(element, prop);\n        } else {\n          return css(\n            element,\n            prop,\n            !value && value !== 0 ? \"\" : +value + boxModelAdjust(element, prop) + \"px\"\n          );\n        }\n      };\n    }\n    function boxModelAdjust(element, prop, sizing = \"border-box\") {\n      return css(element, \"boxSizing\") === sizing ? sumBy(\n        dirs$1[prop].map(ucfirst),\n        (prop2) => toFloat(css(element, `padding${prop2}`)) + toFloat(css(element, `border${prop2}Width`))\n      ) : 0;\n    }\n    function flipPosition(pos) {\n      for (const dir in dirs$1) {\n        for (const i in dirs$1[dir]) {\n          if (dirs$1[dir][i] === pos) {\n            return dirs$1[dir][1 - i];\n          }\n        }\n      }\n      return pos;\n    }\n    function toPx(value, property = \"width\", element = window, offsetDim = false) {\n      if (!isString(value)) {\n        return toFloat(value);\n      }\n      return sumBy(parseCalc(value), (value2) => {\n        const unit = parseUnit(value2);\n        return unit ? percent(\n          unit === \"vh\" ? getViewportHeight() : unit === \"vw\" ? width(toWindow(element)) : offsetDim ? element[`offset${ucfirst(property)}`] : dimensions$1(element)[property],\n          value2\n        ) : value2;\n      });\n    }\n    const calcRe = /-?\\d+(?:\\.\\d+)?(?:v[wh]|%|px)?/g;\n    const parseCalc = memoize((calc) => calc.toString().replace(/\\s/g, \"\").match(calcRe) || []);\n    const unitRe$1 = /(?:v[hw]|%)$/;\n    const parseUnit = memoize((str) => (str.match(unitRe$1) || [])[0]);\n    function percent(base, value) {\n      return base * toFloat(value) / 100;\n    }\n    let vh;\n    let vhEl;\n    function getViewportHeight() {\n      if (vh) {\n        return vh;\n      }\n      if (!vhEl) {\n        vhEl = $(\"<div>\");\n        css(vhEl, {\n          height: \"100vh\",\n          position: \"fixed\"\n        });\n        on(window, \"resize\", () => vh = null);\n      }\n      append(document.body, vhEl);\n      vh = vhEl.clientHeight;\n      remove$1(vhEl);\n      return vh;\n    }\n\n    const inBrowser = typeof window !== \"undefined\";\n    const isRtl = inBrowser && document.dir === \"rtl\";\n    const hasTouch = inBrowser && \"ontouchstart\" in window;\n    const hasPointerEvents = inBrowser && window.PointerEvent;\n    const pointerDown$1 = hasPointerEvents ? \"pointerdown\" : hasTouch ? \"touchstart\" : \"mousedown\";\n    const pointerMove$1 = hasPointerEvents ? \"pointermove\" : hasTouch ? \"touchmove\" : \"mousemove\";\n    const pointerUp$1 = hasPointerEvents ? \"pointerup\" : hasTouch ? \"touchend\" : \"mouseup\";\n    const pointerEnter = hasPointerEvents ? \"pointerenter\" : hasTouch ? \"\" : \"mouseenter\";\n    const pointerLeave = hasPointerEvents ? \"pointerleave\" : hasTouch ? \"\" : \"mouseleave\";\n    const pointerCancel = hasPointerEvents ? \"pointercancel\" : \"touchcancel\";\n\n    const fastdom = {\n      reads: [],\n      writes: [],\n      read(task) {\n        this.reads.push(task);\n        scheduleFlush();\n        return task;\n      },\n      write(task) {\n        this.writes.push(task);\n        scheduleFlush();\n        return task;\n      },\n      clear(task) {\n        remove(this.reads, task);\n        remove(this.writes, task);\n      },\n      flush\n    };\n    function flush(recursion) {\n      runTasks(fastdom.reads);\n      runTasks(fastdom.writes.splice(0));\n      fastdom.scheduled = false;\n      if (fastdom.reads.length || fastdom.writes.length) {\n        scheduleFlush(recursion + 1);\n      }\n    }\n    const RECURSION_LIMIT = 4;\n    function scheduleFlush(recursion) {\n      if (fastdom.scheduled) {\n        return;\n      }\n      fastdom.scheduled = true;\n      if (recursion && recursion < RECURSION_LIMIT) {\n        Promise.resolve().then(() => flush(recursion));\n      } else {\n        requestAnimationFrame(() => flush(1));\n      }\n    }\n    function runTasks(tasks) {\n      let task;\n      while (task = tasks.shift()) {\n        try {\n          task();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    function remove(array, item) {\n      const index = array.indexOf(item);\n      return ~index && array.splice(index, 1);\n    }\n\n    function MouseTracker() {\n    }\n    MouseTracker.prototype = {\n      positions: [],\n      init() {\n        this.positions = [];\n        let position;\n        this.unbind = on(document, \"mousemove\", (e) => position = getEventPos(e));\n        this.interval = setInterval(() => {\n          if (!position) {\n            return;\n          }\n          this.positions.push(position);\n          if (this.positions.length > 5) {\n            this.positions.shift();\n          }\n        }, 50);\n      },\n      cancel() {\n        var _a;\n        (_a = this.unbind) == null ? void 0 : _a.call(this);\n        clearInterval(this.interval);\n      },\n      movesTo(target) {\n        if (this.positions.length < 2) {\n          return false;\n        }\n        const p = target.getBoundingClientRect();\n        const { left, right, top, bottom } = p;\n        const [prevPosition] = this.positions;\n        const position = last(this.positions);\n        const path = [prevPosition, position];\n        if (pointInRect(position, p)) {\n          return false;\n        }\n        const diagonals = [\n          [\n            { x: left, y: top },\n            { x: right, y: bottom }\n          ],\n          [\n            { x: left, y: bottom },\n            { x: right, y: top }\n          ]\n        ];\n        return diagonals.some((diagonal) => {\n          const intersection = intersect(path, diagonal);\n          return intersection && pointInRect(intersection, p);\n        });\n      }\n    };\n    function intersect([{ x: x1, y: y1 }, { x: x2, y: y2 }], [{ x: x3, y: y3 }, { x: x4, y: y4 }]) {\n      const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n      if (denominator === 0) {\n        return false;\n      }\n      const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n      if (ua < 0) {\n        return false;\n      }\n      return { x: x1 + ua * (x2 - x1), y: y1 + ua * (y2 - y1) };\n    }\n\n    function observeIntersection(targets, cb, options = {}, { intersecting = true } = {}) {\n      const observer = new IntersectionObserver(\n        intersecting ? (entries, observer2) => {\n          if (entries.some((entry) => entry.isIntersecting)) {\n            cb(entries, observer2);\n          }\n        } : cb,\n        options\n      );\n      for (const el of toNodes(targets)) {\n        observer.observe(el);\n      }\n      return observer;\n    }\n    const hasResizeObserver = inBrowser && window.ResizeObserver;\n    function observeResize(targets, cb, options = { box: \"border-box\" }) {\n      if (hasResizeObserver) {\n        return observe$1(ResizeObserver, targets, cb, options);\n      }\n      const off = [on(window, \"load resize\", cb), on(document, \"loadedmetadata load\", cb, true)];\n      return { disconnect: () => off.map((cb2) => cb2()) };\n    }\n    function observeViewportResize(cb) {\n      return { disconnect: on([window, window.visualViewport], \"resize\", cb) };\n    }\n    function observeMutation(targets, cb, options) {\n      return observe$1(MutationObserver, targets, cb, options);\n    }\n    function observe$1(Observer, targets, cb, options) {\n      const observer = new Observer(cb);\n      for (const el of toNodes(targets)) {\n        observer.observe(el, options);\n      }\n      return observer;\n    }\n\n    function play(el) {\n      if (isIFrame(el)) {\n        call(el, { func: \"playVideo\", method: \"play\" });\n      }\n      if (isHTML5(el)) {\n        el.play();\n      }\n    }\n    function pause(el) {\n      if (isIFrame(el)) {\n        call(el, { func: \"pauseVideo\", method: \"pause\" });\n      }\n      if (isHTML5(el)) {\n        el.pause();\n      }\n    }\n    function mute(el) {\n      if (isIFrame(el)) {\n        call(el, { func: \"mute\", method: \"setVolume\", value: 0 });\n      }\n      if (isHTML5(el)) {\n        el.muted = true;\n      }\n    }\n    function isVideo(el) {\n      return isHTML5(el) || isIFrame(el);\n    }\n    function isHTML5(el) {\n      return isTag(el, \"video\");\n    }\n    function isIFrame(el) {\n      return isTag(el, \"iframe\") && (isYoutube(el) || isVimeo(el));\n    }\n    function isYoutube(el) {\n      return !!el.src.match(\n        /\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/\n      );\n    }\n    function isVimeo(el) {\n      return !!el.src.match(/vimeo\\.com\\/video\\/.*/);\n    }\n    async function call(el, cmd) {\n      await enableApi(el);\n      post(el, cmd);\n    }\n    function post(el, cmd) {\n      el.contentWindow.postMessage(JSON.stringify({ event: \"command\", ...cmd }), \"*\");\n    }\n    const stateKey = \"_ukPlayer\";\n    let counter = 0;\n    function enableApi(el) {\n      if (el[stateKey]) {\n        return el[stateKey];\n      }\n      const youtube = isYoutube(el);\n      const vimeo = isVimeo(el);\n      const id = ++counter;\n      let poller;\n      return el[stateKey] = new Promise((resolve) => {\n        youtube && once(el, \"load\", () => {\n          const listener = () => post(el, { event: \"listening\", id });\n          poller = setInterval(listener, 100);\n          listener();\n        });\n        once(window, \"message\", resolve, false, ({ data }) => {\n          try {\n            data = JSON.parse(data);\n            return youtube && (data == null ? void 0 : data.id) === id && data.event === \"onReady\" || vimeo && Number(data == null ? void 0 : data.player_id) === id;\n          } catch (e) {\n          }\n        });\n        el.src = `${el.src}${includes(el.src, \"?\") ? \"&\" : \"?\"}${youtube ? \"enablejsapi=1\" : `api=1&player_id=${id}`}`;\n      }).then(() => clearInterval(poller));\n    }\n\n    function isInView(element, offsetTop = 0, offsetLeft = 0) {\n      if (!isVisible(element)) {\n        return false;\n      }\n      return intersectRect(\n        ...overflowParents(element).map((parent2) => {\n          const { top, left, bottom, right } = offsetViewport(parent2);\n          return {\n            top: top - offsetTop,\n            left: left - offsetLeft,\n            bottom: bottom + offsetTop,\n            right: right + offsetLeft\n          };\n        }).concat(offset(element))\n      );\n    }\n    function scrollIntoView(element, { offset: offsetBy = 0 } = {}) {\n      const parents2 = isVisible(element) ? scrollParents(element, false, [\"hidden\"]) : [];\n      return parents2.reduce(\n        (fn, scrollElement, i) => {\n          const { scrollTop, scrollHeight, offsetHeight } = scrollElement;\n          const viewport = offsetViewport(scrollElement);\n          const maxScroll = scrollHeight - viewport.height;\n          const { height: elHeight, top: elTop } = parents2[i - 1] ? offsetViewport(parents2[i - 1]) : offset(element);\n          let top = Math.ceil(elTop - viewport.top - offsetBy + scrollTop);\n          if (offsetBy > 0 && offsetHeight < elHeight + offsetBy) {\n            top += offsetBy;\n          } else {\n            offsetBy = 0;\n          }\n          if (top > maxScroll) {\n            offsetBy -= top - maxScroll;\n            top = maxScroll;\n          } else if (top < 0) {\n            offsetBy -= top;\n            top = 0;\n          }\n          return () => scrollTo(scrollElement, top - scrollTop, element, maxScroll).then(fn);\n        },\n        () => Promise.resolve()\n      )();\n      function scrollTo(element2, top, targetEl, maxScroll) {\n        return new Promise((resolve) => {\n          const scroll = element2.scrollTop;\n          const duration = getDuration(Math.abs(top));\n          const start = Date.now();\n          const isScrollingElement = scrollingElement(element2) === element2;\n          const targetTop = offset(targetEl).top + (isScrollingElement ? 0 : scroll);\n          let prev = 0;\n          let frames = 15;\n          (function step() {\n            const percent = ease(clamp((Date.now() - start) / duration));\n            let diff = 0;\n            if (parents2[0] === element2 && scroll + top < maxScroll) {\n              diff = offset(targetEl).top + (isScrollingElement ? 0 : element2.scrollTop) - targetTop;\n              const coverEl = getCoveringElement(targetEl);\n              diff -= coverEl ? offset(coverEl).height : 0;\n            }\n            element2.scrollTop = Math[top + diff > 0 ? \"max\" : \"min\"](\n              element2.scrollTop,\n              scroll + (top + diff) * percent\n            );\n            if (percent === 1 && (prev === diff || !frames--)) {\n              resolve();\n            } else {\n              prev = diff;\n              requestAnimationFrame(step);\n            }\n          })();\n        });\n      }\n      function getDuration(dist) {\n        return 40 * Math.pow(dist, 0.375);\n      }\n      function ease(k) {\n        return 0.5 * (1 - Math.cos(Math.PI * k));\n      }\n    }\n    function scrolledOver(element, startOffset = 0, endOffset = 0) {\n      if (!isVisible(element)) {\n        return 0;\n      }\n      const scrollElement = scrollParent(element, true);\n      const { scrollHeight, scrollTop } = scrollElement;\n      const { height: viewportHeight } = offsetViewport(scrollElement);\n      const maxScroll = scrollHeight - viewportHeight;\n      const elementOffsetTop = offsetPosition(element)[0] - offsetPosition(scrollElement)[0];\n      const start = Math.max(0, elementOffsetTop - viewportHeight + startOffset);\n      const end = Math.min(maxScroll, elementOffsetTop + element.offsetHeight - endOffset);\n      return clamp((scrollTop - start) / (end - start));\n    }\n    function scrollParents(element, scrollable = false, props = []) {\n      const scrollEl = scrollingElement(element);\n      let ancestors = parents(element).reverse();\n      ancestors = ancestors.slice(ancestors.indexOf(scrollEl) + 1);\n      const fixedIndex = findIndex(ancestors, (el) => css(el, \"position\") === \"fixed\");\n      if (~fixedIndex) {\n        ancestors = ancestors.slice(fixedIndex);\n      }\n      return [scrollEl].concat(\n        ancestors.filter(\n          (parent2) => css(parent2, \"overflow\").split(\" \").some((prop) => includes([\"auto\", \"scroll\", ...props], prop)) && (!scrollable || parent2.scrollHeight > offsetViewport(parent2).height)\n        )\n      ).reverse();\n    }\n    function scrollParent(...args) {\n      return scrollParents(...args)[0];\n    }\n    function overflowParents(element) {\n      return scrollParents(element, false, [\"hidden\", \"clip\"]);\n    }\n    function offsetViewport(scrollElement) {\n      const window = toWindow(scrollElement);\n      const {\n        visualViewport,\n        document: { documentElement }\n      } = window;\n      let viewportElement = scrollElement === scrollingElement(scrollElement) ? window : scrollElement;\n      if (isWindow(viewportElement) && visualViewport) {\n        let { height, width, scale, pageTop: top, pageLeft: left } = visualViewport;\n        height = Math.round(height * scale);\n        width = Math.round(width * scale);\n        return { height, width, top, left, bottom: top + height, right: left + width };\n      }\n      let rect = offset(viewportElement);\n      if (css(viewportElement, \"display\") === \"inline\") {\n        return rect;\n      }\n      for (let [prop, dir, start, end] of [\n        [\"width\", \"x\", \"left\", \"right\"],\n        [\"height\", \"y\", \"top\", \"bottom\"]\n      ]) {\n        if (isWindow(viewportElement)) {\n          viewportElement = documentElement;\n        } else {\n          rect[start] += toFloat(css(viewportElement, `border-${start}-width`));\n        }\n        const subpixel = rect[prop] % 1;\n        rect[prop] = rect[dir] = viewportElement[`client${ucfirst(prop)}`] - (subpixel ? subpixel < 0.5 ? -subpixel : 1 - subpixel : 0);\n        rect[end] = rect[prop] + rect[start];\n      }\n      return rect;\n    }\n    function getCoveringElement(target) {\n      return target.ownerDocument.elementsFromPoint(offset(target).left, 0).find(\n        (el) => !el.contains(target) && (hasPosition(el, \"fixed\") && zIndex(\n          parents(target).reverse().find((parent2) => !parent2.contains(el) && !hasPosition(parent2, \"static\"))\n        ) < zIndex(el) || hasPosition(el, \"sticky\") && parent(el).contains(target))\n      );\n    }\n    function zIndex(element) {\n      return toFloat(css(element, \"zIndex\"));\n    }\n    function hasPosition(element, position) {\n      return css(element, \"position\") === position;\n    }\n    function scrollingElement(element) {\n      return toWindow(element).document.scrollingElement;\n    }\n\n    const dirs = [\n      [\"width\", \"x\", \"left\", \"right\"],\n      [\"height\", \"y\", \"top\", \"bottom\"]\n    ];\n    function positionAt(element, target, options) {\n      options = {\n        attach: {\n          element: [\"left\", \"top\"],\n          target: [\"left\", \"top\"],\n          ...options.attach\n        },\n        offset: [0, 0],\n        placement: [],\n        ...options\n      };\n      if (!isArray(target)) {\n        target = [target, target];\n      }\n      offset(element, getPosition(element, target, options));\n    }\n    function getPosition(element, target, options) {\n      const position = attachTo(element, target, options);\n      const { boundary, viewportOffset = 0, placement } = options;\n      let offsetPosition = position;\n      for (const [i, [prop, , start, end]] of Object.entries(dirs)) {\n        const viewport = getViewport$2(element, target[i], viewportOffset, boundary, i);\n        if (isWithin(position, viewport, i)) {\n          continue;\n        }\n        let offsetBy = 0;\n        if (placement[i] === \"flip\") {\n          const attach = options.attach.target[i];\n          if (attach === end && position[end] <= viewport[end] || attach === start && position[start] >= viewport[start]) {\n            continue;\n          }\n          offsetBy = flip(element, target, options, i)[start] - position[start];\n          const scrollArea = getScrollArea(element, target[i], viewportOffset, i);\n          if (!isWithin(applyOffset(position, offsetBy, i), scrollArea, i)) {\n            if (isWithin(position, scrollArea, i)) {\n              continue;\n            }\n            if (options.recursion) {\n              return false;\n            }\n            const newPos = flipAxis(element, target, options);\n            if (newPos && isWithin(newPos, scrollArea, 1 - i)) {\n              return newPos;\n            }\n            continue;\n          }\n        } else if (placement[i] === \"shift\") {\n          const targetDim = offset(target[i]);\n          const { offset: elOffset } = options;\n          offsetBy = clamp(\n            clamp(position[start], viewport[start], viewport[end] - position[prop]),\n            targetDim[start] - position[prop] + elOffset[i],\n            targetDim[end] - elOffset[i]\n          ) - position[start];\n        }\n        offsetPosition = applyOffset(offsetPosition, offsetBy, i);\n      }\n      return offsetPosition;\n    }\n    function attachTo(element, target, options) {\n      let { attach, offset: offsetBy } = {\n        attach: {\n          element: [\"left\", \"top\"],\n          target: [\"left\", \"top\"],\n          ...options.attach\n        },\n        offset: [0, 0],\n        ...options\n      };\n      let elOffset = offset(element);\n      for (const [i, [prop, , start, end]] of Object.entries(dirs)) {\n        const targetOffset = attach.target[i] === attach.element[i] ? offsetViewport(target[i]) : offset(target[i]);\n        elOffset = applyOffset(\n          elOffset,\n          targetOffset[start] - elOffset[start] + moveBy(attach.target[i], end, targetOffset[prop]) - moveBy(attach.element[i], end, elOffset[prop]) + +offsetBy[i],\n          i\n        );\n      }\n      return elOffset;\n    }\n    function applyOffset(position, offset2, i) {\n      const [, dir, start, end] = dirs[i];\n      const newPos = { ...position };\n      newPos[start] = position[dir] = position[start] + offset2;\n      newPos[end] += offset2;\n      return newPos;\n    }\n    function moveBy(attach, end, dim) {\n      return attach === \"center\" ? dim / 2 : attach === end ? dim : 0;\n    }\n    function getViewport$2(element, target, viewportOffset, boundary, i) {\n      let viewport = getIntersectionArea(...commonScrollParents(element, target).map(offsetViewport));\n      if (viewportOffset) {\n        viewport[dirs[i][2]] += viewportOffset;\n        viewport[dirs[i][3]] -= viewportOffset;\n      }\n      if (boundary) {\n        viewport = getIntersectionArea(\n          viewport,\n          offset(isArray(boundary) ? boundary[i] : boundary)\n        );\n      }\n      return viewport;\n    }\n    function getScrollArea(element, target, viewportOffset, i) {\n      const [prop, axis, start, end] = dirs[i];\n      const [scrollElement] = commonScrollParents(element, target);\n      const viewport = offsetViewport(scrollElement);\n      if ([\"auto\", \"scroll\"].includes(css(scrollElement, `overflow-${axis}`))) {\n        viewport[start] -= scrollElement[`scroll${ucfirst(start)}`];\n        viewport[end] = viewport[start] + scrollElement[`scroll${ucfirst(prop)}`];\n      }\n      viewport[start] += viewportOffset;\n      viewport[end] -= viewportOffset;\n      return viewport;\n    }\n    function commonScrollParents(element, target) {\n      return overflowParents(target).filter((parent) => parent.contains(element));\n    }\n    function getIntersectionArea(...rects) {\n      let area = {};\n      for (const rect of rects) {\n        for (const [, , start, end] of dirs) {\n          area[start] = Math.max(area[start] || 0, rect[start]);\n          area[end] = Math.min(...[area[end], rect[end]].filter(Boolean));\n        }\n      }\n      return area;\n    }\n    function isWithin(positionA, positionB, i) {\n      const [, , start, end] = dirs[i];\n      return positionA[start] >= positionB[start] && positionA[end] <= positionB[end];\n    }\n    function flip(element, target, { offset: offset2, attach }, i) {\n      return attachTo(element, target, {\n        attach: {\n          element: flipAttach(attach.element, i),\n          target: flipAttach(attach.target, i)\n        },\n        offset: flipOffset(offset2, i)\n      });\n    }\n    function flipAxis(element, target, options) {\n      return getPosition(element, target, {\n        ...options,\n        attach: {\n          element: options.attach.element.map(flipAttachAxis).reverse(),\n          target: options.attach.target.map(flipAttachAxis).reverse()\n        },\n        offset: options.offset.reverse(),\n        placement: options.placement.reverse(),\n        recursion: true\n      });\n    }\n    function flipAttach(attach, i) {\n      const newAttach = [...attach];\n      const index = dirs[i].indexOf(attach[i]);\n      if (~index) {\n        newAttach[i] = dirs[i][1 - index % 2 + 2];\n      }\n      return newAttach;\n    }\n    function flipAttachAxis(prop) {\n      for (let i = 0; i < dirs.length; i++) {\n        const index = dirs[i].indexOf(prop);\n        if (~index) {\n          return dirs[1 - i][index % 2 + 2];\n        }\n      }\n    }\n    function flipOffset(offset2, i) {\n      offset2 = [...offset2];\n      offset2[i] *= -1;\n      return offset2;\n    }\n\n    var util = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        $: $,\n        $$: $$,\n        Animation: Animation,\n        Dimensions: Dimensions,\n        MouseTracker: MouseTracker,\n        Transition: Transition,\n        addClass: addClass,\n        after: after,\n        append: append,\n        apply: apply,\n        assign: assign,\n        attr: attr,\n        before: before,\n        boxModelAdjust: boxModelAdjust,\n        camelize: camelize,\n        children: children,\n        clamp: clamp,\n        closest: closest,\n        createEvent: createEvent,\n        css: css,\n        data: data,\n        dimensions: dimensions$1,\n        each: each,\n        empty: empty,\n        endsWith: endsWith,\n        escape: escape,\n        fastdom: fastdom,\n        filter: filter$1,\n        find: find,\n        findAll: findAll,\n        findIndex: findIndex,\n        flipPosition: flipPosition,\n        fragment: fragment,\n        getCoveringElement: getCoveringElement,\n        getEventPos: getEventPos,\n        getIndex: getIndex,\n        getTargetedElement: getTargetedElement,\n        hasAttr: hasAttr,\n        hasClass: hasClass,\n        hasOwn: hasOwn,\n        hasTouch: hasTouch,\n        height: height,\n        html: html,\n        hyphenate: hyphenate,\n        inBrowser: inBrowser,\n        includes: includes,\n        index: index,\n        intersectRect: intersectRect,\n        isArray: isArray,\n        isBoolean: isBoolean,\n        isDocument: isDocument,\n        isElement: isElement,\n        isEmpty: isEmpty,\n        isEqual: isEqual,\n        isFocusable: isFocusable,\n        isFunction: isFunction,\n        isInView: isInView,\n        isInput: isInput,\n        isNode: isNode,\n        isNumber: isNumber,\n        isNumeric: isNumeric,\n        isObject: isObject,\n        isPlainObject: isPlainObject,\n        isRtl: isRtl,\n        isSameSiteAnchor: isSameSiteAnchor,\n        isString: isString,\n        isTag: isTag,\n        isTouch: isTouch,\n        isUndefined: isUndefined,\n        isVideo: isVideo,\n        isVisible: isVisible,\n        isVoidElement: isVoidElement,\n        isWindow: isWindow,\n        last: last,\n        matches: matches,\n        memoize: memoize,\n        mute: mute,\n        noop: noop,\n        observeIntersection: observeIntersection,\n        observeMutation: observeMutation,\n        observeResize: observeResize,\n        observeViewportResize: observeViewportResize,\n        off: off,\n        offset: offset,\n        offsetPosition: offsetPosition,\n        offsetViewport: offsetViewport,\n        on: on,\n        once: once,\n        overflowParents: overflowParents,\n        parent: parent,\n        parents: parents,\n        pause: pause,\n        pick: pick,\n        play: play,\n        pointInRect: pointInRect,\n        pointerCancel: pointerCancel,\n        pointerDown: pointerDown$1,\n        pointerEnter: pointerEnter,\n        pointerLeave: pointerLeave,\n        pointerMove: pointerMove$1,\n        pointerUp: pointerUp$1,\n        position: position,\n        positionAt: positionAt,\n        prepend: prepend,\n        propName: propName,\n        query: query,\n        queryAll: queryAll,\n        ready: ready,\n        remove: remove$1,\n        removeAttr: removeAttr,\n        removeClass: removeClass,\n        removeClasses: removeClasses$1,\n        replaceClass: replaceClass,\n        scrollIntoView: scrollIntoView,\n        scrollParent: scrollParent,\n        scrollParents: scrollParents,\n        scrolledOver: scrolledOver,\n        selFocusable: selFocusable,\n        selInput: selInput,\n        sortBy: sortBy,\n        startsWith: startsWith,\n        sumBy: sumBy,\n        swap: swap,\n        toArray: toArray,\n        toBoolean: toBoolean,\n        toEventTargets: toEventTargets,\n        toFloat: toFloat,\n        toNode: toNode,\n        toNodes: toNodes,\n        toNumber: toNumber,\n        toPx: toPx,\n        toWindow: toWindow,\n        toggleClass: toggleClass,\n        trigger: trigger,\n        ucfirst: ucfirst,\n        uniqueBy: uniqueBy,\n        unwrap: unwrap,\n        width: width,\n        within: within,\n        wrapAll: wrapAll,\n        wrapInner: wrapInner\n    });\n\n    var Class = {\n      connected() {\n        addClass(this.$el, this.$options.id);\n      }\n    };\n\n    const units = [\"days\", \"hours\", \"minutes\", \"seconds\"];\n    var countdown = {\n      mixins: [Class],\n      props: {\n        date: String,\n        clsWrapper: String,\n        role: String\n      },\n      data: {\n        date: \"\",\n        clsWrapper: \".uk-countdown-%unit%\",\n        role: \"timer\"\n      },\n      connected() {\n        attr(this.$el, \"role\", this.role);\n        this.date = toFloat(Date.parse(this.$props.date));\n        this.end = false;\n        this.start();\n      },\n      disconnected() {\n        this.stop();\n      },\n      events: {\n        name: \"visibilitychange\",\n        el() {\n          return document;\n        },\n        handler() {\n          if (document.hidden) {\n            this.stop();\n          } else {\n            this.start();\n          }\n        }\n      },\n      methods: {\n        start() {\n          this.stop();\n          this.update();\n          if (!this.timer) {\n            trigger(this.$el, \"countdownstart\");\n            this.timer = setInterval(this.update, 1e3);\n          }\n        },\n        stop() {\n          if (this.timer) {\n            clearInterval(this.timer);\n            trigger(this.$el, \"countdownstop\");\n            this.timer = null;\n          }\n        },\n        update() {\n          const timespan = getTimeSpan(this.date);\n          if (!timespan.total) {\n            this.stop();\n            if (!this.end) {\n              trigger(this.$el, \"countdownend\");\n              this.end = true;\n            }\n          }\n          for (const unit of units) {\n            const el = $(this.clsWrapper.replace(\"%unit%\", unit), this.$el);\n            if (!el) {\n              continue;\n            }\n            let digits = String(Math.trunc(timespan[unit]));\n            digits = digits.length < 2 ? `0${digits}` : digits;\n            if (el.textContent !== digits) {\n              digits = digits.split(\"\");\n              if (digits.length !== el.children.length) {\n                html(el, digits.map(() => \"<span></span>\").join(\"\"));\n              }\n              digits.forEach((digit, i) => el.children[i].textContent = digit);\n            }\n          }\n        }\n      }\n    };\n    function getTimeSpan(date) {\n      const total = Math.max(0, date - Date.now()) / 1e3;\n      return {\n        total,\n        seconds: total % 60,\n        minutes: total / 60 % 60,\n        hours: total / 60 / 60 % 24,\n        days: total / 60 / 60 / 24\n      };\n    }\n\n    const strats = {};\n    strats.events = strats.watch = strats.observe = strats.created = strats.beforeConnect = strats.connected = strats.beforeDisconnect = strats.disconnected = strats.destroy = concatStrat;\n    strats.args = function(parentVal, childVal) {\n      return childVal !== false && concatStrat(childVal || parentVal);\n    };\n    strats.update = function(parentVal, childVal) {\n      return sortBy(\n        concatStrat(parentVal, isFunction(childVal) ? { read: childVal } : childVal),\n        \"order\"\n      );\n    };\n    strats.props = function(parentVal, childVal) {\n      if (isArray(childVal)) {\n        const value = {};\n        for (const key of childVal) {\n          value[key] = String;\n        }\n        childVal = value;\n      }\n      return strats.methods(parentVal, childVal);\n    };\n    strats.computed = strats.methods = function(parentVal, childVal) {\n      return childVal ? parentVal ? { ...parentVal, ...childVal } : childVal : parentVal;\n    };\n    strats.i18n = strats.data = function(parentVal, childVal, vm) {\n      if (!vm) {\n        if (!childVal) {\n          return parentVal;\n        }\n        if (!parentVal) {\n          return childVal;\n        }\n        return function(vm2) {\n          return mergeFnData(parentVal, childVal, vm2);\n        };\n      }\n      return mergeFnData(parentVal, childVal, vm);\n    };\n    function mergeFnData(parentVal, childVal, vm) {\n      return strats.computed(\n        isFunction(parentVal) ? parentVal.call(vm, vm) : parentVal,\n        isFunction(childVal) ? childVal.call(vm, vm) : childVal\n      );\n    }\n    function concatStrat(parentVal, childVal) {\n      parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\n      return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n    }\n    function defaultStrat(parentVal, childVal) {\n      return isUndefined(childVal) ? parentVal : childVal;\n    }\n    function mergeOptions(parent, child, vm) {\n      const options = {};\n      if (isFunction(child)) {\n        child = child.options;\n      }\n      if (child.extends) {\n        parent = mergeOptions(parent, child.extends, vm);\n      }\n      if (child.mixins) {\n        for (const mixin of child.mixins) {\n          parent = mergeOptions(parent, mixin, vm);\n        }\n      }\n      for (const key in parent) {\n        mergeKey(key);\n      }\n      for (const key in child) {\n        if (!hasOwn(parent, key)) {\n          mergeKey(key);\n        }\n      }\n      function mergeKey(key) {\n        options[key] = (strats[key] || defaultStrat)(parent[key], child[key], vm);\n      }\n      return options;\n    }\n    function parseOptions(options, args = []) {\n      try {\n        return options ? startsWith(options, \"{\") ? JSON.parse(options) : args.length && !includes(options, \":\") ? { [args[0]]: options } : options.split(\";\").reduce((options2, option) => {\n          const [key, value] = option.split(/:(.*)/);\n          if (key && !isUndefined(value)) {\n            options2[key.trim()] = value.trim();\n          }\n          return options2;\n        }, {}) : {};\n      } catch (e) {\n        return {};\n      }\n    }\n    function coerce$1(type, value) {\n      if (type === Boolean) {\n        return toBoolean(value);\n      } else if (type === Number) {\n        return toNumber(value);\n      } else if (type === \"list\") {\n        return toList(value);\n      } else if (type === Object && isString(value)) {\n        return parseOptions(value);\n      }\n      return type ? type(value) : value;\n    }\n    const listRe = /,(?![^(]*\\))/;\n    function toList(value) {\n      return isArray(value) ? value : isString(value) ? value.split(listRe).map((value2) => isNumeric(value2) ? toNumber(value2) : toBoolean(value2.trim())) : [value];\n    }\n\n    function initUpdates(instance) {\n      instance._data = {};\n      instance._updates = [...instance.$options.update || []];\n    }\n    function prependUpdate(instance, update) {\n      instance._updates.unshift(update);\n    }\n    function clearUpdateData(instance) {\n      delete instance._data;\n    }\n    function callUpdate(instance, e = \"update\") {\n      if (!instance._connected) {\n        return;\n      }\n      if (!instance._updates.length) {\n        return;\n      }\n      if (!instance._queued) {\n        instance._queued = /* @__PURE__ */ new Set();\n        fastdom.read(() => {\n          if (instance._connected) {\n            runUpdates(instance, instance._queued);\n          }\n          delete instance._queued;\n        });\n      }\n      instance._queued.add(e.type || e);\n    }\n    function runUpdates(instance, types) {\n      for (const { read, write, events = [] } of instance._updates) {\n        if (!types.has(\"update\") && !events.some((type) => types.has(type))) {\n          continue;\n        }\n        let result;\n        if (read) {\n          result = read.call(instance, instance._data, types);\n          if (result && isPlainObject(result)) {\n            assign(instance._data, result);\n          }\n        }\n        if (write && result !== false) {\n          fastdom.write(() => {\n            if (instance._connected) {\n              write.call(instance, instance._data, types);\n            }\n          });\n        }\n      }\n    }\n\n    function resize(options) {\n      return observe(observeResize, options, \"resize\");\n    }\n    function intersection(options) {\n      return observe(observeIntersection, options);\n    }\n    function mutation(options) {\n      return observe(observeMutation, options);\n    }\n    function lazyload(options = {}) {\n      return intersection({\n        handler: function(entries, observer) {\n          const { targets = this.$el, preload = 5 } = options;\n          for (const el of toNodes(isFunction(targets) ? targets(this) : targets)) {\n            $$('[loading=\"lazy\"]', el).slice(0, preload - 1).forEach((el2) => removeAttr(el2, \"loading\"));\n          }\n          for (const el of entries.filter(({ isIntersecting }) => isIntersecting).map(({ target }) => target)) {\n            observer.unobserve(el);\n          }\n        },\n        ...options\n      });\n    }\n    function viewport(options) {\n      return observe((target, handler) => observeViewportResize(handler), options);\n    }\n    function scroll$1(options) {\n      return observe(\n        (target, handler) => ({\n          disconnect: on(toScrollTargets(target), \"scroll\", handler, { passive: true })\n        }),\n        options,\n        \"scroll\"\n      );\n    }\n    function swipe(options) {\n      return {\n        observe(target, handler) {\n          return {\n            observe: noop,\n            unobserve: noop,\n            disconnect: on(target, pointerDown$1, handler, { passive: true })\n          };\n        },\n        handler(e) {\n          if (!isTouch(e)) {\n            return;\n          }\n          const pos = getEventPos(e);\n          const target = \"tagName\" in e.target ? e.target : parent(e.target);\n          once(document, `${pointerUp$1} ${pointerCancel} scroll`, (e2) => {\n            const { x, y } = getEventPos(e2);\n            if (e2.type !== \"scroll\" && target && x && Math.abs(pos.x - x) > 100 || y && Math.abs(pos.y - y) > 100) {\n              setTimeout(() => {\n                trigger(target, \"swipe\");\n                trigger(target, `swipe${swipeDirection(pos.x, pos.y, x, y)}`);\n              });\n            }\n          });\n        },\n        ...options\n      };\n    }\n    function observe(observe2, options, emit) {\n      return {\n        observe: observe2,\n        handler() {\n          callUpdate(this, emit);\n        },\n        ...options\n      };\n    }\n    function swipeDirection(x1, y1, x2, y2) {\n      return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? \"Left\" : \"Right\" : y1 - y2 > 0 ? \"Up\" : \"Down\";\n    }\n    function toScrollTargets(elements) {\n      return toNodes(elements).map((node) => {\n        const { ownerDocument } = node;\n        const parent2 = scrollParent(node, true);\n        return parent2 === ownerDocument.scrollingElement ? ownerDocument : parent2;\n      });\n    }\n\n    var Margin = {\n      props: {\n        margin: String,\n        firstColumn: Boolean\n      },\n      data: {\n        margin: \"uk-margin-small-top\",\n        firstColumn: \"uk-first-column\"\n      },\n      observe: [\n        mutation({\n          options: {\n            childList: true,\n            attributes: true,\n            attributeFilter: [\"style\"]\n          }\n        }),\n        resize({\n          target: ({ $el }) => [$el, ...children($el)]\n        })\n      ],\n      update: {\n        read() {\n          return {\n            rows: getRows(toArray(this.$el.children))\n          };\n        },\n        write({ rows }) {\n          for (const row of rows) {\n            for (const el of row) {\n              toggleClass(el, this.margin, rows[0] !== row);\n              toggleClass(el, this.firstColumn, row[isRtl ? row.length - 1 : 0] === el);\n            }\n          }\n        },\n        events: [\"resize\"]\n      }\n    };\n    function getRows(elements) {\n      const sorted = [[]];\n      const withOffset = elements.some(\n        (el, i) => i && elements[i - 1].offsetParent !== el.offsetParent\n      );\n      for (const el of elements) {\n        if (!isVisible(el)) {\n          continue;\n        }\n        const offset = getOffset(el, withOffset);\n        for (let i = sorted.length - 1; i >= 0; i--) {\n          const current = sorted[i];\n          if (!current[0]) {\n            current.push(el);\n            break;\n          }\n          const offsetCurrent = getOffset(current[0], withOffset);\n          if (offset.top >= offsetCurrent.bottom - 1 && offset.top !== offsetCurrent.top) {\n            sorted.push([el]);\n            break;\n          }\n          if (offset.bottom - 1 > offsetCurrent.top || offset.top === offsetCurrent.top) {\n            let j = current.length - 1;\n            for (; j >= 0; j--) {\n              const offsetCurrent2 = getOffset(current[j], withOffset);\n              if (offset.left >= offsetCurrent2.left) {\n                break;\n              }\n            }\n            current.splice(j + 1, 0, el);\n            break;\n          }\n          if (i === 0) {\n            sorted.unshift([el]);\n            break;\n          }\n        }\n      }\n      return sorted;\n    }\n    function getOffset(element, offset = false) {\n      let { offsetTop, offsetLeft, offsetHeight, offsetWidth } = element;\n      if (offset) {\n        [offsetTop, offsetLeft] = offsetPosition(element);\n      }\n      return {\n        top: offsetTop,\n        left: offsetLeft,\n        bottom: offsetTop + offsetHeight,\n        right: offsetLeft + offsetWidth\n      };\n    }\n\n    const clsLeave = \"uk-transition-leave\";\n    const clsEnter = \"uk-transition-enter\";\n    function fade(action, target, duration, stagger = 0) {\n      const index = transitionIndex(target, true);\n      const propsIn = { opacity: 1 };\n      const propsOut = { opacity: 0 };\n      const wrapIndexFn = (fn) => () => index === transitionIndex(target) ? fn() : Promise.reject();\n      const leaveFn = wrapIndexFn(async () => {\n        addClass(target, clsLeave);\n        await Promise.all(\n          getTransitionNodes(target).map(\n            (child, i) => new Promise(\n              (resolve) => setTimeout(\n                () => Transition.start(child, propsOut, duration / 2, \"ease\").then(\n                  resolve\n                ),\n                i * stagger\n              )\n            )\n          )\n        );\n        removeClass(target, clsLeave);\n      });\n      const enterFn = wrapIndexFn(async () => {\n        const oldHeight = height(target);\n        addClass(target, clsEnter);\n        action();\n        css(children(target), { opacity: 0 });\n        await awaitFrame$1();\n        const nodes = children(target);\n        const newHeight = height(target);\n        css(target, \"alignContent\", \"flex-start\");\n        height(target, oldHeight);\n        const transitionNodes = getTransitionNodes(target);\n        css(nodes, propsOut);\n        const transitions = transitionNodes.map(async (child, i) => {\n          await awaitTimeout(i * stagger);\n          await Transition.start(child, propsIn, duration / 2, \"ease\");\n        });\n        if (oldHeight !== newHeight) {\n          transitions.push(\n            Transition.start(\n              target,\n              { height: newHeight },\n              duration / 2 + transitionNodes.length * stagger,\n              \"ease\"\n            )\n          );\n        }\n        await Promise.all(transitions).then(() => {\n          removeClass(target, clsEnter);\n          if (index === transitionIndex(target)) {\n            css(target, { height: \"\", alignContent: \"\" });\n            css(nodes, { opacity: \"\" });\n            delete target.dataset.transition;\n          }\n        });\n      });\n      return hasClass(target, clsLeave) ? waitTransitionend(target).then(enterFn) : hasClass(target, clsEnter) ? waitTransitionend(target).then(leaveFn).then(enterFn) : leaveFn().then(enterFn);\n    }\n    function transitionIndex(target, next) {\n      if (next) {\n        target.dataset.transition = 1 + transitionIndex(target);\n      }\n      return toNumber(target.dataset.transition) || 0;\n    }\n    function waitTransitionend(target) {\n      return Promise.all(\n        children(target).filter(Transition.inProgress).map(\n          (el) => new Promise((resolve) => once(el, \"transitionend transitioncanceled\", resolve))\n        )\n      );\n    }\n    function getTransitionNodes(target) {\n      return getRows(children(target)).flat().filter((node) => isVisible(node));\n    }\n    function awaitFrame$1() {\n      return new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n    function awaitTimeout(timeout) {\n      return new Promise((resolve) => setTimeout(resolve, timeout));\n    }\n\n    async function slide(action, target, duration) {\n      await awaitFrame();\n      let nodes = children(target);\n      const currentProps = nodes.map((el) => getProps$1(el, true));\n      const targetProps = { ...css(target, [\"height\", \"padding\"]), display: \"block\" };\n      await Promise.all(nodes.concat(target).map(Transition.cancel));\n      action();\n      nodes = nodes.concat(children(target).filter((el) => !includes(nodes, el)));\n      await Promise.resolve();\n      fastdom.flush();\n      const targetStyle = attr(target, \"style\");\n      const targetPropsTo = css(target, [\"height\", \"padding\"]);\n      const [propsTo, propsFrom] = getTransitionProps(target, nodes, currentProps);\n      const attrsTo = nodes.map((el) => ({ style: attr(el, \"style\") }));\n      nodes.forEach((el, i) => propsFrom[i] && css(el, propsFrom[i]));\n      css(target, targetProps);\n      trigger(target, \"scroll\");\n      fastdom.flush();\n      await awaitFrame();\n      const transitions = nodes.map((el, i) => parent(el) === target && Transition.start(el, propsTo[i], duration, \"ease\")).concat(Transition.start(target, targetPropsTo, duration, \"ease\"));\n      try {\n        await Promise.all(transitions);\n        nodes.forEach((el, i) => {\n          attr(el, attrsTo[i]);\n          if (parent(el) === target) {\n            css(el, \"display\", propsTo[i].opacity === 0 ? \"none\" : \"\");\n          }\n        });\n        attr(target, \"style\", targetStyle);\n      } catch (e) {\n        attr(nodes, \"style\", \"\");\n        resetProps(target, targetProps);\n      }\n    }\n    function getProps$1(el, opacity) {\n      const zIndex = css(el, \"zIndex\");\n      return isVisible(el) ? {\n        display: \"\",\n        opacity: opacity ? css(el, \"opacity\") : \"0\",\n        pointerEvents: \"none\",\n        position: \"absolute\",\n        zIndex: zIndex === \"auto\" ? index(el) : zIndex,\n        ...getPositionWithMargin(el)\n      } : false;\n    }\n    function getTransitionProps(target, nodes, currentProps) {\n      const propsTo = nodes.map(\n        (el, i) => parent(el) && i in currentProps ? currentProps[i] ? isVisible(el) ? getPositionWithMargin(el) : { opacity: 0 } : { opacity: isVisible(el) ? 1 : 0 } : false\n      );\n      const propsFrom = propsTo.map((props, i) => {\n        const from = parent(nodes[i]) === target && (currentProps[i] || getProps$1(nodes[i]));\n        if (!from) {\n          return false;\n        }\n        if (!props) {\n          delete from.opacity;\n        } else if (!(\"opacity\" in props)) {\n          const { opacity } = from;\n          if (opacity % 1) {\n            props.opacity = 1;\n          } else {\n            delete from.opacity;\n          }\n        }\n        return from;\n      });\n      return [propsTo, propsFrom];\n    }\n    function resetProps(el, props) {\n      for (const prop in props) {\n        css(el, prop, \"\");\n      }\n    }\n    function getPositionWithMargin(el) {\n      const { height, width } = offset(el);\n      return {\n        height,\n        width,\n        transform: \"\",\n        ...position(el),\n        ...css(el, [\"marginTop\", \"marginLeft\"])\n      };\n    }\n    function awaitFrame() {\n      return new Promise((resolve) => requestAnimationFrame(resolve));\n    }\n\n    var Animate = {\n      props: {\n        duration: Number,\n        animation: Boolean\n      },\n      data: {\n        duration: 150,\n        animation: \"slide\"\n      },\n      methods: {\n        animate(action, target = this.$el) {\n          const name = this.animation;\n          const animationFn = name === \"fade\" ? fade : name === \"delayed-fade\" ? (...args) => fade(...args, 40) : name ? slide : () => {\n            action();\n            return Promise.resolve();\n          };\n          return animationFn(action, target, this.duration).catch(noop);\n        }\n      }\n    };\n\n    const keyMap = {\n      TAB: 9,\n      ESC: 27,\n      SPACE: 32,\n      END: 35,\n      HOME: 36,\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      DOWN: 40\n    };\n\n    var filter = {\n      mixins: [Animate],\n      args: \"target\",\n      props: {\n        target: String,\n        selActive: Boolean\n      },\n      data: {\n        target: \"\",\n        selActive: false,\n        attrItem: \"uk-filter-control\",\n        cls: \"uk-active\",\n        duration: 250\n      },\n      computed: {\n        children: ({ target }, $el) => $$(`${target} > *`, $el),\n        toggles: ({ attrItem }, $el) => $$(`[${attrItem}],[data-${attrItem}]`, $el)\n      },\n      watch: {\n        toggles(toggles) {\n          this.updateState();\n          const actives = $$(this.selActive, this.$el);\n          for (const toggle of toggles) {\n            if (this.selActive !== false) {\n              toggleClass(toggle, this.cls, includes(actives, toggle));\n            }\n            const button = findButton(toggle);\n            if (isTag(button, \"a\")) {\n              attr(button, \"role\", \"button\");\n            }\n          }\n        },\n        children(list, prev) {\n          if (prev) {\n            this.updateState();\n          }\n        }\n      },\n      events: {\n        name: \"click keydown\",\n        delegate() {\n          return `[${this.attrItem}],[data-${this.attrItem}]`;\n        },\n        handler(e) {\n          if (e.type === \"keydown\" && e.keyCode !== keyMap.SPACE) {\n            return;\n          }\n          if (e.target.closest(\"a,button\")) {\n            e.preventDefault();\n            this.apply(e.current);\n          }\n        }\n      },\n      methods: {\n        apply(el) {\n          const prevState = this.getState();\n          const newState = mergeState(el, this.attrItem, this.getState());\n          if (!isEqualState(prevState, newState)) {\n            this.setState(newState);\n          }\n        },\n        getState() {\n          return this.toggles.filter((item) => hasClass(item, this.cls)).reduce((state, el) => mergeState(el, this.attrItem, state), {\n            filter: { \"\": \"\" },\n            sort: []\n          });\n        },\n        async setState(state, animate = true) {\n          state = { filter: { \"\": \"\" }, sort: [], ...state };\n          trigger(this.$el, \"beforeFilter\", [this, state]);\n          for (const toggle of this.toggles) {\n            toggleClass(toggle, this.cls, matchFilter(toggle, this.attrItem, state));\n          }\n          await Promise.all(\n            $$(this.target, this.$el).map((target) => {\n              const filterFn = () => {\n                applyState(state, target, children(target));\n                this.$update(this.$el);\n              };\n              return animate ? this.animate(filterFn, target) : filterFn();\n            })\n          );\n          trigger(this.$el, \"afterFilter\", [this]);\n        },\n        updateState() {\n          fastdom.write(() => this.setState(this.getState(), false));\n        }\n      }\n    };\n    function getFilter(el, attr2) {\n      return parseOptions(data(el, attr2), [\"filter\"]);\n    }\n    function isEqualState(stateA, stateB) {\n      return [\"filter\", \"sort\"].every((prop) => isEqual(stateA[prop], stateB[prop]));\n    }\n    function applyState(state, target, children) {\n      const selector = getSelector(state);\n      children.forEach((el) => css(el, \"display\", selector && !matches(el, selector) ? \"none\" : \"\"));\n      const [sort, order] = state.sort;\n      if (sort) {\n        const sorted = sortItems(children, sort, order);\n        if (!isEqual(sorted, children)) {\n          append(target, sorted);\n        }\n      }\n    }\n    function mergeState(el, attr2, state) {\n      const { filter, group, sort, order = \"asc\" } = getFilter(el, attr2);\n      if (filter || isUndefined(sort)) {\n        if (group) {\n          if (filter) {\n            delete state.filter[\"\"];\n            state.filter[group] = filter;\n          } else {\n            delete state.filter[group];\n            if (isEmpty(state.filter) || \"\" in state.filter) {\n              state.filter = { \"\": filter || \"\" };\n            }\n          }\n        } else {\n          state.filter = { \"\": filter || \"\" };\n        }\n      }\n      if (!isUndefined(sort)) {\n        state.sort = [sort, order];\n      }\n      return state;\n    }\n    function matchFilter(el, attr2, { filter: stateFilter = { \"\": \"\" }, sort: [stateSort, stateOrder] }) {\n      const { filter = \"\", group = \"\", sort, order = \"asc\" } = getFilter(el, attr2);\n      return isUndefined(sort) ? group in stateFilter && filter === stateFilter[group] || !filter && group && !(group in stateFilter) && !stateFilter[\"\"] : stateSort === sort && stateOrder === order;\n    }\n    function getSelector({ filter }) {\n      let selector = \"\";\n      each(filter, (value) => selector += value || \"\");\n      return selector;\n    }\n    function sortItems(nodes, sort, order) {\n      return [...nodes].sort(\n        (a, b) => data(a, sort).localeCompare(data(b, sort), void 0, { numeric: true }) * (order === \"asc\" || -1)\n      );\n    }\n    function findButton(el) {\n      return $(\"a,button\", el) || el;\n    }\n\n    var Container = {\n      props: {\n        container: Boolean\n      },\n      data: {\n        container: true\n      },\n      computed: {\n        container({ container }) {\n          return container === true && this.$container || container && $(container);\n        }\n      }\n    };\n\n    let prevented;\n    function preventBackgroundScroll(el) {\n      const off = on(\n        el,\n        \"touchmove\",\n        (e) => {\n          if (e.targetTouches.length !== 1 || matches(e.target, 'input[type=\"range\"')) {\n            return;\n          }\n          let { scrollHeight, clientHeight } = scrollParent(e.target);\n          if (clientHeight >= scrollHeight && e.cancelable) {\n            e.preventDefault();\n          }\n        },\n        { passive: false }\n      );\n      if (prevented) {\n        return off;\n      }\n      prevented = true;\n      const { scrollingElement } = document;\n      css(scrollingElement, {\n        overflowY: CSS.supports(\"overflow\", \"clip\") ? \"clip\" : \"hidden\",\n        touchAction: \"none\",\n        paddingRight: width(window) - scrollingElement.clientWidth || \"\"\n      });\n      return () => {\n        prevented = false;\n        off();\n        css(scrollingElement, { overflowY: \"\", touchAction: \"\", paddingRight: \"\" });\n      };\n    }\n\n    var Togglable = {\n      props: {\n        cls: Boolean,\n        animation: \"list\",\n        duration: Number,\n        velocity: Number,\n        origin: String,\n        transition: String\n      },\n      data: {\n        cls: false,\n        animation: [false],\n        duration: 200,\n        velocity: 0.2,\n        origin: false,\n        transition: \"ease\",\n        clsEnter: \"uk-togglabe-enter\",\n        clsLeave: \"uk-togglabe-leave\"\n      },\n      computed: {\n        hasAnimation: ({ animation }) => !!animation[0],\n        hasTransition: ({ animation }) => [\"slide\", \"reveal\"].some((transition) => startsWith(animation[0], transition))\n      },\n      methods: {\n        async toggleElement(targets, toggle, animate) {\n          try {\n            await Promise.all(\n              toNodes(targets).map((el) => {\n                const show = isBoolean(toggle) ? toggle : !this.isToggled(el);\n                if (!trigger(el, `before${show ? \"show\" : \"hide\"}`, [this])) {\n                  return Promise.reject();\n                }\n                const promise = (isFunction(animate) ? animate : animate === false || !this.hasAnimation ? toggleInstant : this.hasTransition ? toggleTransition : toggleAnimation)(el, show, this);\n                const cls = show ? this.clsEnter : this.clsLeave;\n                addClass(el, cls);\n                trigger(el, show ? \"show\" : \"hide\", [this]);\n                const done = () => {\n                  removeClass(el, cls);\n                  trigger(el, show ? \"shown\" : \"hidden\", [this]);\n                };\n                return promise ? promise.then(done, () => {\n                  removeClass(el, cls);\n                  return Promise.reject();\n                }) : done();\n              })\n            );\n            return true;\n          } catch (e) {\n            return false;\n          }\n        },\n        isToggled(el = this.$el) {\n          el = toNode(el);\n          return hasClass(el, this.clsEnter) ? true : hasClass(el, this.clsLeave) ? false : this.cls ? hasClass(el, this.cls.split(\" \")[0]) : isVisible(el);\n        },\n        _toggle(el, toggled) {\n          if (!el) {\n            return;\n          }\n          toggled = Boolean(toggled);\n          let changed;\n          if (this.cls) {\n            changed = includes(this.cls, \" \") || toggled !== hasClass(el, this.cls);\n            changed && toggleClass(el, this.cls, includes(this.cls, \" \") ? void 0 : toggled);\n          } else {\n            changed = toggled === el.hidden;\n            changed && (el.hidden = !toggled);\n          }\n          $$(\"[autofocus]\", el).some((el2) => isVisible(el2) ? el2.focus() || true : el2.blur());\n          if (changed) {\n            trigger(el, \"toggled\", [toggled, this]);\n          }\n        }\n      }\n    };\n    function toggleInstant(el, show, { _toggle }) {\n      Animation.cancel(el);\n      Transition.cancel(el);\n      return _toggle(el, show);\n    }\n    async function toggleTransition(el, show, { animation, duration, velocity, transition, _toggle }) {\n      var _a;\n      const [mode = \"reveal\", startProp = \"top\"] = ((_a = animation[0]) == null ? void 0 : _a.split(\"-\")) || [];\n      const dirs = [\n        [\"left\", \"right\"],\n        [\"top\", \"bottom\"]\n      ];\n      const dir = dirs[includes(dirs[0], startProp) ? 0 : 1];\n      const end = dir[1] === startProp;\n      const props = [\"width\", \"height\"];\n      const dimProp = props[dirs.indexOf(dir)];\n      const marginProp = `margin-${dir[0]}`;\n      const marginStartProp = `margin-${startProp}`;\n      let currentDim = dimensions$1(el)[dimProp];\n      const inProgress = Transition.inProgress(el);\n      await Transition.cancel(el);\n      if (show) {\n        _toggle(el, true);\n      }\n      const prevProps = Object.fromEntries(\n        [\n          \"padding\",\n          \"border\",\n          \"width\",\n          \"height\",\n          \"minWidth\",\n          \"minHeight\",\n          \"overflowY\",\n          \"overflowX\",\n          marginProp,\n          marginStartProp\n        ].map((key) => [key, el.style[key]])\n      );\n      const dim = dimensions$1(el);\n      const currentMargin = toFloat(css(el, marginProp));\n      const marginStart = toFloat(css(el, marginStartProp));\n      const endDim = dim[dimProp] + marginStart;\n      if (!inProgress && !show) {\n        currentDim += marginStart;\n      }\n      const [wrapper] = wrapInner(el, \"<div>\");\n      css(wrapper, {\n        boxSizing: \"border-box\",\n        height: dim.height,\n        width: dim.width,\n        ...css(el, [\n          \"overflow\",\n          \"padding\",\n          \"borderTop\",\n          \"borderRight\",\n          \"borderBottom\",\n          \"borderLeft\",\n          \"borderImage\",\n          marginStartProp\n        ])\n      });\n      css(el, {\n        padding: 0,\n        border: 0,\n        minWidth: 0,\n        minHeight: 0,\n        [marginStartProp]: 0,\n        width: dim.width,\n        height: dim.height,\n        overflow: \"hidden\",\n        [dimProp]: currentDim\n      });\n      const percent = currentDim / endDim;\n      duration = (velocity * endDim + duration) * (show ? 1 - percent : percent);\n      const endProps = { [dimProp]: show ? endDim : 0 };\n      if (end) {\n        css(el, marginProp, endDim - currentDim + currentMargin);\n        endProps[marginProp] = show ? currentMargin : endDim + currentMargin;\n      }\n      if (!end ^ mode === \"reveal\") {\n        css(wrapper, marginProp, -endDim + currentDim);\n        Transition.start(wrapper, { [marginProp]: show ? 0 : -endDim }, duration, transition);\n      }\n      try {\n        await Transition.start(el, endProps, duration, transition);\n      } finally {\n        css(el, prevProps);\n        unwrap(wrapper.firstChild);\n        if (!show) {\n          _toggle(el, false);\n        }\n      }\n    }\n    function toggleAnimation(el, show, cmp) {\n      const { animation, duration, _toggle } = cmp;\n      if (show) {\n        _toggle(el, true);\n        return Animation.in(el, animation[0], duration, cmp.origin);\n      }\n      return Animation.out(el, animation[1] || animation[0], duration, cmp.origin).then(\n        () => _toggle(el, false)\n      );\n    }\n\n    const active$1 = [];\n    var Modal = {\n      mixins: [Class, Container, Togglable],\n      props: {\n        selPanel: String,\n        selClose: String,\n        escClose: Boolean,\n        bgClose: Boolean,\n        stack: Boolean,\n        role: String\n      },\n      data: {\n        cls: \"uk-open\",\n        escClose: true,\n        bgClose: true,\n        overlay: true,\n        stack: false,\n        role: \"dialog\"\n      },\n      computed: {\n        panel: ({ selPanel }, $el) => $(selPanel, $el),\n        transitionElement() {\n          return this.panel;\n        },\n        bgClose({ bgClose }) {\n          return bgClose && this.panel;\n        }\n      },\n      connected() {\n        attr(this.panel || this.$el, \"role\", this.role);\n        if (this.overlay) {\n          attr(this.panel || this.$el, \"aria-modal\", true);\n        }\n      },\n      beforeDisconnect() {\n        if (includes(active$1, this)) {\n          this.toggleElement(this.$el, false, false);\n        }\n      },\n      events: [\n        {\n          name: \"click\",\n          delegate() {\n            return `${this.selClose},a[href*=\"#\"]`;\n          },\n          handler(e) {\n            const { current, defaultPrevented } = e;\n            const { hash } = current;\n            if (!defaultPrevented && hash && isSameSiteAnchor(current) && !this.$el.contains($(hash))) {\n              this.hide();\n            } else if (matches(current, this.selClose)) {\n              e.preventDefault();\n              this.hide();\n            }\n          }\n        },\n        {\n          name: \"toggle\",\n          self: true,\n          handler(e) {\n            if (e.defaultPrevented) {\n              return;\n            }\n            e.preventDefault();\n            if (this.isToggled() === includes(active$1, this)) {\n              this.toggle();\n            }\n          }\n        },\n        {\n          name: \"beforeshow\",\n          self: true,\n          handler(e) {\n            if (includes(active$1, this)) {\n              return false;\n            }\n            if (!this.stack && active$1.length) {\n              Promise.all(active$1.map((modal) => modal.hide())).then(this.show);\n              e.preventDefault();\n            } else {\n              active$1.push(this);\n            }\n          }\n        },\n        {\n          name: \"show\",\n          self: true,\n          handler() {\n            if (this.stack) {\n              css(this.$el, \"zIndex\", toFloat(css(this.$el, \"zIndex\")) + active$1.length);\n            }\n            const handlers = [\n              this.overlay && preventBackgroundFocus(this),\n              this.overlay && preventBackgroundScroll(this.$el),\n              this.bgClose && listenForBackgroundClose$1(this),\n              this.escClose && listenForEscClose$1(this)\n            ];\n            once(\n              this.$el,\n              \"hidden\",\n              () => handlers.forEach((handler) => handler && handler()),\n              { self: true }\n            );\n            addClass(document.documentElement, this.clsPage);\n          }\n        },\n        {\n          name: \"shown\",\n          self: true,\n          handler() {\n            if (!isFocusable(this.$el)) {\n              attr(this.$el, \"tabindex\", \"-1\");\n            }\n            if (!matches(this.$el, \":focus-within\")) {\n              this.$el.focus();\n            }\n          }\n        },\n        {\n          name: \"hidden\",\n          self: true,\n          handler() {\n            if (includes(active$1, this)) {\n              active$1.splice(active$1.indexOf(this), 1);\n            }\n            css(this.$el, \"zIndex\", \"\");\n            if (!active$1.some((modal) => modal.clsPage === this.clsPage)) {\n              removeClass(document.documentElement, this.clsPage);\n            }\n          }\n        }\n      ],\n      methods: {\n        toggle() {\n          return this.isToggled() ? this.hide() : this.show();\n        },\n        show() {\n          if (this.container && parent(this.$el) !== this.container) {\n            append(this.container, this.$el);\n            return new Promise(\n              (resolve) => requestAnimationFrame(() => this.show().then(resolve))\n            );\n          }\n          return this.toggleElement(this.$el, true, animate$1);\n        },\n        hide() {\n          return this.toggleElement(this.$el, false, animate$1);\n        }\n      }\n    };\n    function animate$1(el, show, { transitionElement, _toggle }) {\n      return new Promise(\n        (resolve, reject) => once(el, \"show hide\", () => {\n          var _a;\n          (_a = el._reject) == null ? void 0 : _a.call(el);\n          el._reject = reject;\n          _toggle(el, show);\n          const off = once(\n            transitionElement,\n            \"transitionstart\",\n            () => {\n              once(transitionElement, \"transitionend transitioncancel\", resolve, {\n                self: true\n              });\n              clearTimeout(timer);\n            },\n            { self: true }\n          );\n          const timer = setTimeout(\n            () => {\n              off();\n              resolve();\n            },\n            toMs(css(transitionElement, \"transitionDuration\"))\n          );\n        })\n      ).then(() => delete el._reject);\n    }\n    function toMs(time) {\n      return time ? endsWith(time, \"ms\") ? toFloat(time) : toFloat(time) * 1e3 : 0;\n    }\n    function preventBackgroundFocus(modal) {\n      return on(document, \"focusin\", (e) => {\n        if (last(active$1) === modal && !modal.$el.contains(e.target)) {\n          modal.$el.focus();\n        }\n      });\n    }\n    function listenForBackgroundClose$1(modal) {\n      return on(document, pointerDown$1, ({ target }) => {\n        if (last(active$1) !== modal || modal.overlay && !modal.$el.contains(target) || modal.panel.contains(target)) {\n          return;\n        }\n        once(\n          document,\n          `${pointerUp$1} ${pointerCancel} scroll`,\n          ({ defaultPrevented, type, target: newTarget }) => {\n            if (!defaultPrevented && type === pointerUp$1 && target === newTarget) {\n              modal.hide();\n            }\n          },\n          true\n        );\n      });\n    }\n    function listenForEscClose$1(modal) {\n      return on(document, \"keydown\", (e) => {\n        if (e.keyCode === 27 && last(active$1) === modal) {\n          modal.hide();\n        }\n      });\n    }\n\n    var Animations$2 = {\n      slide: {\n        show(dir) {\n          return [{ transform: translate(dir * -100) }, { transform: translate() }];\n        },\n        percent(current) {\n          return translated(current);\n        },\n        translate(percent, dir) {\n          return [\n            { transform: translate(dir * -100 * percent) },\n            { transform: translate(dir * 100 * (1 - percent)) }\n          ];\n        }\n      }\n    };\n    function translated(el) {\n      return Math.abs(css(el, \"transform\").split(\",\")[4] / el.offsetWidth);\n    }\n    function translate(value = 0, unit = \"%\") {\n      value += value ? unit : \"\";\n      return `translate3d(${value}, 0, 0)`;\n    }\n    function scale3d(value) {\n      return `scale3d(${value}, ${value}, 1)`;\n    }\n\n    function Transitioner$1(prev, next, dir, { animation, easing }) {\n      const { percent, translate, show = noop } = animation;\n      const props = show(dir);\n      let resolve;\n      return {\n        dir,\n        show(duration, percent2 = 0, linear) {\n          const timing = linear ? \"linear\" : easing;\n          duration -= Math.round(duration * clamp(percent2, -1, 1));\n          this.translate(percent2);\n          triggerUpdate$1(next, \"itemin\", { percent: percent2, duration, timing, dir });\n          triggerUpdate$1(prev, \"itemout\", { percent: 1 - percent2, duration, timing, dir });\n          return new Promise((res) => {\n            resolve || (resolve = res);\n            Promise.all([\n              Transition.start(next, props[1], duration, timing),\n              Transition.start(prev, props[0], duration, timing)\n            ]).then(() => {\n              this.reset();\n              resolve();\n            }, noop);\n          });\n        },\n        cancel() {\n          return Transition.cancel([next, prev]);\n        },\n        reset() {\n          for (const prop in props[0]) {\n            css([next, prev], prop, \"\");\n          }\n        },\n        async forward(duration, percent2 = this.percent()) {\n          await this.cancel();\n          return this.show(duration, percent2, true);\n        },\n        translate(percent2) {\n          this.reset();\n          const props2 = translate(percent2, dir);\n          css(next, props2[1]);\n          css(prev, props2[0]);\n          triggerUpdate$1(next, \"itemtranslatein\", { percent: percent2, dir });\n          triggerUpdate$1(prev, \"itemtranslateout\", { percent: 1 - percent2, dir });\n        },\n        percent() {\n          return percent(prev || next, next, dir);\n        },\n        getDistance() {\n          return prev == null ? void 0 : prev.offsetWidth;\n        }\n      };\n    }\n    function triggerUpdate$1(el, type, data) {\n      trigger(el, createEvent(type, false, false, data));\n    }\n\n    var I18n = {\n      props: {\n        i18n: Object\n      },\n      data: {\n        i18n: null\n      },\n      methods: {\n        t(key, ...params) {\n          var _a, _b, _c;\n          let i = 0;\n          return ((_c = ((_a = this.i18n) == null ? void 0 : _a[key]) || ((_b = this.$options.i18n) == null ? void 0 : _b[key])) == null ? void 0 : _c.replace(\n            /%s/g,\n            () => params[i++] || \"\"\n          )) || \"\";\n        }\n      }\n    };\n\n    var SliderAutoplay = {\n      props: {\n        autoplay: Boolean,\n        autoplayInterval: Number,\n        pauseOnHover: Boolean\n      },\n      data: {\n        autoplay: false,\n        autoplayInterval: 7e3,\n        pauseOnHover: true\n      },\n      connected() {\n        attr(this.list, \"aria-live\", this.autoplay ? \"off\" : \"polite\");\n        this.autoplay && this.startAutoplay();\n      },\n      disconnected() {\n        this.stopAutoplay();\n      },\n      update() {\n        attr(this.slides, \"tabindex\", \"-1\");\n      },\n      events: [\n        {\n          name: \"visibilitychange\",\n          el() {\n            return document;\n          },\n          filter() {\n            return this.autoplay;\n          },\n          handler() {\n            if (document.hidden) {\n              this.stopAutoplay();\n            } else {\n              this.startAutoplay();\n            }\n          }\n        }\n      ],\n      methods: {\n        startAutoplay() {\n          this.stopAutoplay();\n          this.interval = setInterval(() => {\n            if (!(this.stack.length || this.draggable && matches(this.$el, \":focus-within\") || this.pauseOnHover && matches(this.$el, \":hover\"))) {\n              this.show(\"next\");\n            }\n          }, this.autoplayInterval);\n        },\n        stopAutoplay() {\n          clearInterval(this.interval);\n        }\n      }\n    };\n\n    const pointerOptions = { passive: false, capture: true };\n    const pointerUpOptions = { passive: true, capture: true };\n    const pointerDown = \"touchstart mousedown\";\n    const pointerMove = \"touchmove mousemove\";\n    const pointerUp = \"touchend touchcancel mouseup click input scroll\";\n    var SliderDrag = {\n      props: {\n        draggable: Boolean\n      },\n      data: {\n        draggable: true,\n        threshold: 10\n      },\n      created() {\n        for (const key of [\"start\", \"move\", \"end\"]) {\n          const fn = this[key];\n          this[key] = (e) => {\n            const pos = getEventPos(e).x * (isRtl ? -1 : 1);\n            this.prevPos = pos === this.pos ? this.prevPos : this.pos;\n            this.pos = pos;\n            fn(e);\n          };\n        }\n      },\n      events: [\n        {\n          name: pointerDown,\n          passive: true,\n          delegate() {\n            return `${this.selList} > *`;\n          },\n          handler(e) {\n            if (!this.draggable || !isTouch(e) && hasSelectableText(e.target) || e.target.closest(selInput) || e.button > 0 || this.length < 2) {\n              return;\n            }\n            this.start(e);\n          }\n        },\n        {\n          name: \"dragstart\",\n          handler(e) {\n            e.preventDefault();\n          }\n        },\n        {\n          // iOS workaround for slider stopping if swiping fast\n          name: pointerMove,\n          el() {\n            return this.list;\n          },\n          handler: noop,\n          ...pointerOptions\n        }\n      ],\n      methods: {\n        start() {\n          this.drag = this.pos;\n          if (this._transitioner) {\n            this.percent = this._transitioner.percent();\n            this.drag += this._transitioner.getDistance() * this.percent * this.dir;\n            this._transitioner.cancel();\n            this._transitioner.translate(this.percent);\n            this.dragging = true;\n            this.stack = [];\n          } else {\n            this.prevIndex = this.index;\n          }\n          on(document, pointerMove, this.move, pointerOptions);\n          on(document, pointerUp, this.end, pointerUpOptions);\n          css(this.list, \"userSelect\", \"none\");\n        },\n        move(e) {\n          const distance = this.pos - this.drag;\n          if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {\n            return;\n          }\n          css(this.list, \"pointerEvents\", \"none\");\n          e.cancelable && e.preventDefault();\n          this.dragging = true;\n          this.dir = distance < 0 ? 1 : -1;\n          let { slides, prevIndex } = this;\n          let dis = Math.abs(distance);\n          let nextIndex = this.getIndex(prevIndex + this.dir);\n          let width = this._getDistance(prevIndex, nextIndex);\n          while (nextIndex !== prevIndex && dis > width) {\n            this.drag -= width * this.dir;\n            prevIndex = nextIndex;\n            dis -= width;\n            nextIndex = this.getIndex(prevIndex + this.dir);\n            width = this._getDistance(prevIndex, nextIndex);\n          }\n          this.percent = dis / width;\n          const prev = slides[prevIndex];\n          const next = slides[nextIndex];\n          const changed = this.index !== nextIndex;\n          const edge = prevIndex === nextIndex;\n          let itemShown;\n          for (const i of [this.index, this.prevIndex]) {\n            if (!includes([nextIndex, prevIndex], i)) {\n              trigger(slides[i], \"itemhidden\", [this]);\n              if (edge) {\n                itemShown = true;\n                this.prevIndex = prevIndex;\n              }\n            }\n          }\n          if (this.index === prevIndex && this.prevIndex !== prevIndex || itemShown) {\n            trigger(slides[this.index], \"itemshown\", [this]);\n          }\n          if (changed) {\n            this.prevIndex = prevIndex;\n            this.index = nextIndex;\n            !edge && trigger(prev, \"beforeitemhide\", [this]);\n            trigger(next, \"beforeitemshow\", [this]);\n          }\n          this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\n          if (changed) {\n            !edge && trigger(prev, \"itemhide\", [this]);\n            trigger(next, \"itemshow\", [this]);\n          }\n        },\n        end() {\n          off(document, pointerMove, this.move, pointerOptions);\n          off(document, pointerUp, this.end, pointerUpOptions);\n          if (this.dragging) {\n            this.dragging = null;\n            if (this.index === this.prevIndex) {\n              this.percent = 1 - this.percent;\n              this.dir *= -1;\n              this._show(false, this.index, true);\n              this._transitioner = null;\n            } else {\n              const dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\n              this.index = dirChange ? this.index : this.prevIndex;\n              if (dirChange) {\n                this.percent = 1 - this.percent;\n              }\n              this.show(\n                this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? \"next\" : \"previous\",\n                true\n              );\n            }\n          }\n          css(this.list, { userSelect: \"\", pointerEvents: \"\" });\n          this.drag = this.percent = null;\n        },\n        _getDistance(prev, next) {\n          return this._getTransitioner(prev, prev !== next && next).getDistance() || this.slides[prev].offsetWidth;\n        }\n      }\n    };\n    function hasSelectableText(el) {\n      return css(el, \"userSelect\") !== \"none\" && toArray(el.childNodes).some((el2) => el2.nodeType === 3 && el2.textContent.trim());\n    }\n\n    function initWatches(instance) {\n      instance._watches = [];\n      for (const watches of instance.$options.watch || []) {\n        for (const [name, watch] of Object.entries(watches)) {\n          registerWatch(instance, watch, name);\n        }\n      }\n      instance._initial = true;\n    }\n    function registerWatch(instance, watch, name) {\n      instance._watches.push({\n        name,\n        ...isPlainObject(watch) ? watch : { handler: watch }\n      });\n    }\n    function runWatches(instance, values) {\n      for (const { name, handler, immediate = true } of instance._watches) {\n        if (instance._initial && immediate || hasOwn(values, name) && !isEqual(values[name], instance[name])) {\n          handler.call(instance, instance[name], values[name]);\n        }\n      }\n      instance._initial = false;\n    }\n\n    function initComputed(instance) {\n      const { computed } = instance.$options;\n      instance._computed = {};\n      if (computed) {\n        for (const key in computed) {\n          registerComputed(instance, key, computed[key]);\n        }\n      }\n    }\n    function registerComputed(instance, key, cb) {\n      instance._hasComputed = true;\n      Object.defineProperty(instance, key, {\n        enumerable: true,\n        get() {\n          const { _computed, $props, $el } = instance;\n          if (!hasOwn(_computed, key)) {\n            _computed[key] = (cb.get || cb).call(instance, $props, $el);\n          }\n          return _computed[key];\n        },\n        set(value) {\n          const { _computed } = instance;\n          _computed[key] = cb.set ? cb.set.call(instance, value) : value;\n          if (isUndefined(_computed[key])) {\n            delete _computed[key];\n          }\n        }\n      });\n    }\n    function initComputedUpdates(instance) {\n      if (!instance._hasComputed) {\n        return;\n      }\n      prependUpdate(instance, {\n        read: () => runWatches(instance, resetComputed(instance)),\n        events: [\"resize\", \"computed\"]\n      });\n      registerComputedObserver();\n      instances$1.add(instance);\n    }\n    function disconnectComputedUpdates(instance) {\n      instances$1 == null ? void 0 : instances$1.delete(instance);\n      resetComputed(instance);\n    }\n    function resetComputed(instance) {\n      const values = { ...instance._computed };\n      instance._computed = {};\n      return values;\n    }\n    let observer;\n    let instances$1;\n    function registerComputedObserver() {\n      if (observer) {\n        return;\n      }\n      instances$1 = /* @__PURE__ */ new Set();\n      observer = new MutationObserver(() => {\n        for (const instance of instances$1) {\n          callUpdate(instance, \"computed\");\n        }\n      });\n      observer.observe(document, {\n        subtree: true,\n        childList: true\n      });\n    }\n\n    function initEvents(instance) {\n      instance._events = [];\n      for (const event of instance.$options.events || []) {\n        if (hasOwn(event, \"handler\")) {\n          registerEvent(instance, event);\n        } else {\n          for (const key in event) {\n            registerEvent(instance, event[key], key);\n          }\n        }\n      }\n    }\n    function unbindEvents(instance) {\n      instance._events.forEach((unbind) => unbind());\n      delete instance._events;\n    }\n    function registerEvent(instance, event, key) {\n      let { name, el, handler, capture, passive, delegate, filter, self } = isPlainObject(event) ? event : { name: key, handler: event };\n      el = isFunction(el) ? el.call(instance, instance) : el || instance.$el;\n      if (!el || isArray(el) && !el.length || filter && !filter.call(instance)) {\n        return;\n      }\n      instance._events.push(\n        on(\n          el,\n          name,\n          delegate ? isString(delegate) ? delegate : delegate.call(instance, instance) : null,\n          isString(handler) ? instance[handler] : handler.bind(instance),\n          { passive, capture, self }\n        )\n      );\n    }\n\n    function initObservers(instance) {\n      instance._observers = [];\n      for (const observer of instance.$options.observe || []) {\n        if (hasOwn(observer, \"handler\")) {\n          registerObservable(instance, observer);\n        } else {\n          for (const observable of observer) {\n            registerObservable(instance, observable);\n          }\n        }\n      }\n    }\n    function registerObserver(instance, ...observer) {\n      instance._observers.push(...observer);\n    }\n    function disconnectObservers(instance) {\n      for (const observer of instance._observers) {\n        observer.disconnect();\n      }\n    }\n    function registerObservable(instance, observable) {\n      let { observe, target = instance.$el, handler, options, filter, args } = observable;\n      if (filter && !filter.call(instance, instance)) {\n        return;\n      }\n      const key = `_observe${instance._observers.length}`;\n      if (isFunction(target) && !hasOwn(instance, key)) {\n        registerComputed(instance, key, () => target.call(instance, instance));\n      }\n      handler = isString(handler) ? instance[handler] : handler.bind(instance);\n      if (isFunction(options)) {\n        options = options.call(instance, instance);\n      }\n      const targets = hasOwn(instance, key) ? instance[key] : target;\n      const observer = observe(targets, handler, options, args);\n      if (isFunction(target) && isArray(instance[key]) && observer.unobserve) {\n        registerWatch(instance, { handler: updateTargets(observer), immediate: false }, key);\n      }\n      registerObserver(instance, observer);\n    }\n    function updateTargets(observer) {\n      return (targets, prev) => {\n        for (const target of prev) {\n          !includes(targets, target) && observer.unobserve(target);\n        }\n        for (const target of targets) {\n          !includes(prev, target) && observer.observe(target);\n        }\n      };\n    }\n\n    function initProps(instance) {\n      const { $options, $props } = instance;\n      const props = getProps($options);\n      assign($props, props);\n      const { computed, methods } = $options;\n      for (let key in $props) {\n        if (key in props && (!computed || !hasOwn(computed, key)) && (!methods || !hasOwn(methods, key))) {\n          instance[key] = $props[key];\n        }\n      }\n    }\n    function getProps(opts) {\n      const data$1 = {};\n      const { args = [], props = {}, el, id } = opts;\n      if (!props) {\n        return data$1;\n      }\n      for (const key in props) {\n        const prop = hyphenate(key);\n        let value = data(el, prop);\n        if (isUndefined(value)) {\n          continue;\n        }\n        value = props[key] === Boolean && value === \"\" ? true : coerce$1(props[key], value);\n        if (prop === \"target\" && startsWith(value, \"_\")) {\n          continue;\n        }\n        data$1[key] = value;\n      }\n      const options = parseOptions(data(el, id), args);\n      for (const key in options) {\n        const prop = camelize(key);\n        if (!isUndefined(props[prop])) {\n          data$1[prop] = coerce$1(props[prop], options[key]);\n        }\n      }\n      return data$1;\n    }\n    const getAttributes = memoize((id, props) => {\n      const attributes = Object.keys(props);\n      const filter = attributes.concat(id).map((key) => [hyphenate(key), `data-${hyphenate(key)}`]).flat();\n      return { attributes, filter };\n    });\n    function initPropsObserver(instance) {\n      const { $options, $props } = instance;\n      const { id, props, el } = $options;\n      if (!props) {\n        return;\n      }\n      const { attributes, filter } = getAttributes(id, props);\n      const observer = new MutationObserver((records) => {\n        const data = getProps($options);\n        if (records.some(({ attributeName }) => {\n          const prop = attributeName.replace(\"data-\", \"\");\n          return (prop === id ? attributes : [camelize(prop), camelize(attributeName)]).some(\n            (prop2) => !isUndefined(data[prop2]) && data[prop2] !== $props[prop2]\n          );\n        })) {\n          instance.$reset();\n        }\n      });\n      observer.observe(el, {\n        attributes: true,\n        attributeFilter: filter\n      });\n      registerObserver(instance, observer);\n    }\n\n    function callHook(instance, hook) {\n      var _a;\n      (_a = instance.$options[hook]) == null ? void 0 : _a.forEach((handler) => handler.call(instance));\n    }\n    function callConnected(instance) {\n      if (instance._connected) {\n        return;\n      }\n      initProps(instance);\n      callHook(instance, \"beforeConnect\");\n      instance._connected = true;\n      initEvents(instance);\n      initUpdates(instance);\n      initWatches(instance);\n      initObservers(instance);\n      initPropsObserver(instance);\n      initComputedUpdates(instance);\n      callHook(instance, \"connected\");\n      callUpdate(instance);\n    }\n    function callDisconnected(instance) {\n      if (!instance._connected) {\n        return;\n      }\n      callHook(instance, \"beforeDisconnect\");\n      unbindEvents(instance);\n      clearUpdateData(instance);\n      disconnectObservers(instance);\n      disconnectComputedUpdates(instance);\n      callHook(instance, \"disconnected\");\n      instance._connected = false;\n    }\n\n    let uid = 0;\n    function init$1(instance, options = {}) {\n      options.data = normalizeData(options, instance.constructor.options);\n      instance.$options = mergeOptions(instance.constructor.options, options, instance);\n      instance.$props = {};\n      instance._uid = uid++;\n      initData(instance);\n      initMethods(instance);\n      initComputed(instance);\n      callHook(instance, \"created\");\n      if (options.el) {\n        instance.$mount(options.el);\n      }\n    }\n    function initData(instance) {\n      const { data = {} } = instance.$options;\n      for (const key in data) {\n        instance.$props[key] = instance[key] = data[key];\n      }\n    }\n    function initMethods(instance) {\n      const { methods } = instance.$options;\n      if (methods) {\n        for (const key in methods) {\n          instance[key] = methods[key].bind(instance);\n        }\n      }\n    }\n    function normalizeData({ data = {} }, { args = [], props = {} }) {\n      if (isArray(data)) {\n        data = data.slice(0, args.length).reduce((data2, value, index) => {\n          if (isPlainObject(value)) {\n            assign(data2, value);\n          } else {\n            data2[args[index]] = value;\n          }\n          return data2;\n        }, {});\n      }\n      for (const key in data) {\n        if (isUndefined(data[key])) {\n          delete data[key];\n        } else if (props[key]) {\n          data[key] = coerce$1(props[key], data[key]);\n        }\n      }\n      return data;\n    }\n\n    const App = function(options) {\n      init$1(this, options);\n    };\n    App.util = util;\n    App.options = {};\n    App.version = \"3.17.11\";\n\n    const PREFIX = \"uk-\";\n    const DATA = \"__uikit__\";\n    const components$2 = {};\n    function component(name, options) {\n      var _a;\n      const id = PREFIX + hyphenate(name);\n      if (!options) {\n        if (isPlainObject(components$2[id])) {\n          components$2[id] = App.extend(components$2[id]);\n        }\n        return components$2[id];\n      }\n      name = camelize(name);\n      App[name] = (element, data) => createComponent(name, element, data);\n      const opt = isPlainObject(options) ? { ...options } : options.options;\n      opt.id = id;\n      opt.name = name;\n      (_a = opt.install) == null ? void 0 : _a.call(opt, App, opt, name);\n      if (App._initialized && !opt.functional) {\n        requestAnimationFrame(() => createComponent(name, `[${id}],[data-${id}]`));\n      }\n      return components$2[id] = opt;\n    }\n    function createComponent(name, element, data, ...args) {\n      const Component = component(name);\n      return Component.options.functional ? new Component({ data: isPlainObject(element) ? element : [element, data, ...args] }) : element ? $$(element).map(init)[0] : init();\n      function init(element2) {\n        const instance = getComponent(element2, name);\n        if (instance) {\n          if (data) {\n            instance.$destroy();\n          } else {\n            return instance;\n          }\n        }\n        return new Component({ el: element2, data });\n      }\n    }\n    function getComponents(element) {\n      return (element == null ? void 0 : element[DATA]) || {};\n    }\n    function getComponent(element, name) {\n      return getComponents(element)[name];\n    }\n    function attachToElement(element, instance) {\n      if (!element[DATA]) {\n        element[DATA] = {};\n      }\n      element[DATA][instance.$options.name] = instance;\n    }\n    function detachFromElement(element, instance) {\n      var _a;\n      (_a = element[DATA]) == null ? true : delete _a[instance.$options.name];\n      if (!isEmpty(element[DATA])) {\n        delete element[DATA];\n      }\n    }\n\n    function globalApi(App) {\n      App.component = component;\n      App.getComponents = getComponents;\n      App.getComponent = getComponent;\n      App.update = update;\n      App.use = function(plugin) {\n        if (plugin.installed) {\n          return;\n        }\n        plugin.call(null, this);\n        plugin.installed = true;\n        return this;\n      };\n      App.mixin = function(mixin, component2) {\n        component2 = (isString(component2) ? this.component(component2) : component2) || this;\n        component2.options = mergeOptions(component2.options, mixin);\n      };\n      App.extend = function(options) {\n        options || (options = {});\n        const Super = this;\n        const Sub = function UIkitComponent(options2) {\n          init$1(this, options2);\n        };\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(Super.options, options);\n        Sub.super = Super;\n        Sub.extend = Super.extend;\n        return Sub;\n      };\n      let container;\n      Object.defineProperty(App, \"container\", {\n        get() {\n          return container || document.body;\n        },\n        set(element) {\n          container = $(element);\n        }\n      });\n    }\n    function update(element, e) {\n      element = element ? toNode(element) : document.body;\n      for (const parentEl of parents(element).reverse()) {\n        updateElement(parentEl, e);\n      }\n      apply(element, (element2) => updateElement(element2, e));\n    }\n    function updateElement(element, e) {\n      const components = getComponents(element);\n      for (const name in components) {\n        callUpdate(components[name], e);\n      }\n    }\n\n    function instanceApi(App) {\n      App.prototype.$mount = function(el) {\n        const instance = this;\n        attachToElement(el, instance);\n        instance.$options.el = el;\n        if (document.contains(el)) {\n          callConnected(instance);\n        }\n      };\n      App.prototype.$destroy = function(removeEl = false) {\n        const instance = this;\n        const { el } = instance.$options;\n        if (el) {\n          callDisconnected(instance);\n        }\n        callHook(instance, \"destroy\");\n        detachFromElement(el, instance);\n        if (removeEl) {\n          remove$1(instance.$el);\n        }\n      };\n      App.prototype.$create = createComponent;\n      App.prototype.$emit = function(e) {\n        callUpdate(this, e);\n      };\n      App.prototype.$update = function(element = this.$el, e) {\n        update(element, e);\n      };\n      App.prototype.$reset = function() {\n        callDisconnected(this);\n        callConnected(this);\n      };\n      App.prototype.$getComponent = getComponent;\n      Object.defineProperties(App.prototype, {\n        $el: {\n          get() {\n            return this.$options.el;\n          }\n        },\n        $container: Object.getOwnPropertyDescriptor(App, \"container\")\n      });\n    }\n    let id = 1;\n    function generateId(instance, el = null) {\n      return (el == null ? void 0 : el.id) || `${instance.$options.id}-${id++}`;\n    }\n\n    var SliderNav = {\n      i18n: {\n        next: \"Next slide\",\n        previous: \"Previous slide\",\n        slideX: \"Slide %s\",\n        slideLabel: \"%s of %s\",\n        role: \"String\"\n      },\n      data: {\n        selNav: false,\n        role: \"region\"\n      },\n      computed: {\n        nav: ({ selNav }, $el) => $(selNav, $el),\n        navChildren() {\n          return children(this.nav);\n        },\n        selNavItem: ({ attrItem }) => `[${attrItem}],[data-${attrItem}]`,\n        navItems(_, $el) {\n          return $$(this.selNavItem, $el);\n        }\n      },\n      watch: {\n        nav(nav, prev) {\n          attr(nav, \"role\", \"tablist\");\n          if (prev) {\n            this.$emit();\n          }\n        },\n        list(list) {\n          attr(list, \"role\", \"presentation\");\n        },\n        navChildren(children2) {\n          attr(children2, \"role\", \"presentation\");\n        },\n        navItems(items) {\n          for (const el of items) {\n            const cmd = data(el, this.attrItem);\n            const button = $(\"a,button\", el) || el;\n            let ariaLabel;\n            let ariaControls = null;\n            if (isNumeric(cmd)) {\n              const item = toNumber(cmd);\n              const slide = this.slides[item];\n              if (slide) {\n                if (!slide.id) {\n                  slide.id = generateId(this, slide);\n                }\n                ariaControls = slide.id;\n              }\n              ariaLabel = this.t(\"slideX\", toFloat(cmd) + 1);\n              attr(button, \"role\", \"tab\");\n            } else {\n              if (this.list) {\n                if (!this.list.id) {\n                  this.list.id = generateId(this, this.list);\n                }\n                ariaControls = this.list.id;\n              }\n              ariaLabel = this.t(cmd);\n            }\n            attr(button, {\n              \"aria-controls\": ariaControls,\n              \"aria-label\": attr(button, \"aria-label\") || ariaLabel\n            });\n          }\n        },\n        slides(slides) {\n          slides.forEach(\n            (slide, i) => attr(slide, {\n              role: this.nav ? \"tabpanel\" : \"group\",\n              \"aria-label\": this.t(\"slideLabel\", i + 1, this.length),\n              \"aria-roledescription\": this.nav ? null : \"slide\"\n            })\n          );\n        },\n        length(length) {\n          const navLength = this.navChildren.length;\n          if (this.nav && length !== navLength) {\n            empty(this.nav);\n            for (let i = 0; i < length; i++) {\n              append(this.nav, `<li ${this.attrItem}=\"${i}\"><a href></a></li>`);\n            }\n          }\n        }\n      },\n      connected() {\n        attr(this.$el, {\n          role: this.role,\n          \"aria-roledescription\": \"carousel\"\n        });\n      },\n      update: [\n        {\n          write() {\n            this.navItems.concat(this.nav).forEach((el) => el && (el.hidden = !this.maxIndex));\n            this.updateNav();\n          },\n          events: [\"resize\"]\n        }\n      ],\n      events: [\n        {\n          name: \"click keydown\",\n          delegate() {\n            return this.selNavItem;\n          },\n          handler(e) {\n            if (e.target.closest(\"a,button\") && (e.type === \"click\" || e.keyCode === keyMap.SPACE)) {\n              e.preventDefault();\n              this.show(data(e.current, this.attrItem));\n            }\n          }\n        },\n        {\n          name: \"itemshow\",\n          handler: \"updateNav\"\n        },\n        {\n          name: \"keydown\",\n          delegate() {\n            return this.selNavItem;\n          },\n          handler(e) {\n            const { current, keyCode } = e;\n            const cmd = data(current, this.attrItem);\n            if (!isNumeric(cmd)) {\n              return;\n            }\n            let i = keyCode === keyMap.HOME ? 0 : keyCode === keyMap.END ? \"last\" : keyCode === keyMap.LEFT ? \"previous\" : keyCode === keyMap.RIGHT ? \"next\" : -1;\n            if (~i) {\n              e.preventDefault();\n              this.show(i);\n            }\n          }\n        }\n      ],\n      methods: {\n        updateNav() {\n          const index = this.getValidIndex();\n          for (const el of this.navItems) {\n            const cmd = data(el, this.attrItem);\n            const button = $(\"a,button\", el) || el;\n            if (isNumeric(cmd)) {\n              const item = toNumber(cmd);\n              const active = item === index;\n              toggleClass(el, this.clsActive, active);\n              attr(button, {\n                \"aria-selected\": active,\n                tabindex: active ? null : -1\n              });\n              if (active && button && matches(parent(el), \":focus-within\")) {\n                button.focus();\n              }\n            } else {\n              toggleClass(\n                el,\n                \"uk-invisible\",\n                this.finite && (cmd === \"previous\" && index === 0 || cmd === \"next\" && index >= this.maxIndex)\n              );\n            }\n          }\n        }\n      }\n    };\n\n    var Slider = {\n      mixins: [SliderAutoplay, SliderDrag, SliderNav, I18n],\n      props: {\n        clsActivated: Boolean,\n        easing: String,\n        index: Number,\n        finite: Boolean,\n        velocity: Number\n      },\n      data: () => ({\n        easing: \"ease\",\n        finite: false,\n        velocity: 1,\n        index: 0,\n        prevIndex: -1,\n        stack: [],\n        percent: 0,\n        clsActive: \"uk-active\",\n        clsActivated: false,\n        Transitioner: false,\n        transitionOptions: {}\n      }),\n      connected() {\n        this.prevIndex = -1;\n        this.index = this.getValidIndex(this.$props.index);\n        this.stack = [];\n      },\n      disconnected() {\n        removeClass(this.slides, this.clsActive);\n      },\n      computed: {\n        duration: ({ velocity }, $el) => speedUp($el.offsetWidth / velocity),\n        list: ({ selList }, $el) => $(selList, $el),\n        maxIndex() {\n          return this.length - 1;\n        },\n        slides() {\n          return children(this.list);\n        },\n        length() {\n          return this.slides.length;\n        }\n      },\n      watch: {\n        slides(slides, prev) {\n          if (prev) {\n            this.$emit();\n          }\n        }\n      },\n      observe: resize(),\n      methods: {\n        show(index, force = false) {\n          var _a;\n          if (this.dragging || !this.length) {\n            return;\n          }\n          const { stack } = this;\n          const queueIndex = force ? 0 : stack.length;\n          const reset = () => {\n            stack.splice(queueIndex, 1);\n            if (stack.length) {\n              this.show(stack.shift(), true);\n            }\n          };\n          stack[force ? \"unshift\" : \"push\"](index);\n          if (!force && stack.length > 1) {\n            if (stack.length === 2) {\n              (_a = this._transitioner) == null ? void 0 : _a.forward(Math.min(this.duration, 200));\n            }\n            return;\n          }\n          const prevIndex = this.getIndex(this.index);\n          const prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\n          const nextIndex = this.getIndex(index, this.index);\n          const next = this.slides[nextIndex];\n          if (prev === next) {\n            reset();\n            return;\n          }\n          this.dir = getDirection(index, prevIndex);\n          this.prevIndex = prevIndex;\n          this.index = nextIndex;\n          if (prev && !trigger(prev, \"beforeitemhide\", [this]) || !trigger(next, \"beforeitemshow\", [this, prev])) {\n            this.index = this.prevIndex;\n            reset();\n            return;\n          }\n          const promise = this._show(prev, next, force).then(() => {\n            prev && trigger(prev, \"itemhidden\", [this]);\n            trigger(next, \"itemshown\", [this]);\n            stack.shift();\n            this._transitioner = null;\n            requestAnimationFrame(() => stack.length && this.show(stack.shift(), true));\n          });\n          prev && trigger(prev, \"itemhide\", [this]);\n          trigger(next, \"itemshow\", [this]);\n          return promise;\n        },\n        getIndex(index = this.index, prev = this.index) {\n          return clamp(\n            getIndex(index, this.slides, prev, this.finite),\n            0,\n            Math.max(0, this.maxIndex)\n          );\n        },\n        getValidIndex(index = this.index, prevIndex = this.prevIndex) {\n          return this.getIndex(index, prevIndex);\n        },\n        _show(prev, next, force) {\n          this._transitioner = this._getTransitioner(prev, next, this.dir, {\n            easing: force ? next.offsetWidth < 600 ? \"cubic-bezier(0.25, 0.46, 0.45, 0.94)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\" : this.easing,\n            ...this.transitionOptions\n          });\n          if (!force && !prev) {\n            this._translate(1);\n            return Promise.resolve();\n          }\n          const { length } = this.stack;\n          return this._transitioner[length > 1 ? \"forward\" : \"show\"](\n            length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration,\n            this.percent\n          );\n        },\n        _translate(percent, prev = this.prevIndex, next = this.index) {\n          const transitioner = this._getTransitioner(prev === next ? false : prev, next);\n          transitioner.translate(percent);\n          return transitioner;\n        },\n        _getTransitioner(prev = this.prevIndex, next = this.index, dir = this.dir || 1, options = this.transitionOptions) {\n          return new this.Transitioner(\n            isNumber(prev) ? this.slides[prev] : prev,\n            isNumber(next) ? this.slides[next] : next,\n            dir * (isRtl ? -1 : 1),\n            options\n          );\n        }\n      }\n    };\n    function getDirection(index, prevIndex) {\n      return index === \"next\" ? 1 : index === \"previous\" ? -1 : index < prevIndex ? -1 : 1;\n    }\n    function speedUp(x) {\n      return 0.5 * x + 300;\n    }\n\n    var Slideshow = {\n      mixins: [Slider],\n      props: {\n        animation: String\n      },\n      data: {\n        animation: \"slide\",\n        clsActivated: \"uk-transition-active\",\n        Animations: Animations$2,\n        Transitioner: Transitioner$1\n      },\n      computed: {\n        animation({ animation, Animations: Animations2 }) {\n          return { ...Animations2[animation] || Animations2.slide, name: animation };\n        },\n        transitionOptions() {\n          return { animation: this.animation };\n        }\n      },\n      events: {\n        beforeitemshow({ target }) {\n          addClass(target, this.clsActive);\n        },\n        itemshown({ target }) {\n          addClass(target, this.clsActivated);\n        },\n        itemhidden({ target }) {\n          removeClass(target, this.clsActive, this.clsActivated);\n        }\n      }\n    };\n\n    var Animations$1 = {\n      ...Animations$2,\n      fade: {\n        show() {\n          return [{ opacity: 0 }, { opacity: 1 }];\n        },\n        percent(current) {\n          return 1 - css(current, \"opacity\");\n        },\n        translate(percent) {\n          return [{ opacity: 1 - percent }, { opacity: percent }];\n        }\n      },\n      scale: {\n        show() {\n          return [\n            { opacity: 0, transform: scale3d(1 - 0.2) },\n            { opacity: 1, transform: scale3d(1) }\n          ];\n        },\n        percent(current) {\n          return 1 - css(current, \"opacity\");\n        },\n        translate(percent) {\n          return [\n            { opacity: 1 - percent, transform: scale3d(1 - 0.2 * percent) },\n            { opacity: percent, transform: scale3d(1 - 0.2 + 0.2 * percent) }\n          ];\n        }\n      }\n    };\n\n    var LightboxPanel = {\n      mixins: [Modal, Slideshow],\n      functional: true,\n      props: {\n        delayControls: Number,\n        preload: Number,\n        videoAutoplay: Boolean,\n        template: String\n      },\n      data: () => ({\n        preload: 1,\n        videoAutoplay: false,\n        delayControls: 3e3,\n        items: [],\n        cls: \"uk-open\",\n        clsPage: \"uk-lightbox-page\",\n        selList: \".uk-lightbox-items\",\n        attrItem: \"uk-lightbox-item\",\n        selClose: \".uk-close-large\",\n        selCaption: \".uk-lightbox-caption\",\n        pauseOnHover: false,\n        velocity: 2,\n        Animations: Animations$1,\n        template: `<div class=\"uk-lightbox uk-overflow-hidden\"> <ul class=\"uk-lightbox-items\"></ul> <div class=\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\"> <button class=\"uk-lightbox-toolbar-icon uk-close-large\" type=\"button\" uk-close></button> </div> <a class=\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\" href uk-slidenav-previous uk-lightbox-item=\"previous\"></a> <a class=\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\" href uk-slidenav-next uk-lightbox-item=\"next\"></a> <div class=\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\"></div> </div>`\n      }),\n      created() {\n        const $el = $(this.template);\n        const list = $(this.selList, $el);\n        this.items.forEach(() => append(list, \"<li>\"));\n        const close = $(\"[uk-close]\", $el);\n        const closeLabel = this.t(\"close\");\n        if (close && closeLabel) {\n          close.dataset.i18n = JSON.stringify({ label: closeLabel });\n        }\n        this.$mount(append(this.container, $el));\n      },\n      computed: {\n        caption: ({ selCaption }, $el) => $(selCaption, $el)\n      },\n      events: [\n        {\n          name: `${pointerMove$1} ${pointerDown$1} keydown`,\n          handler: \"showControls\"\n        },\n        {\n          name: \"click\",\n          self: true,\n          delegate() {\n            return `${this.selList} > *`;\n          },\n          handler(e) {\n            if (!e.defaultPrevented) {\n              this.hide();\n            }\n          }\n        },\n        {\n          name: \"shown\",\n          self: true,\n          handler() {\n            this.showControls();\n          }\n        },\n        {\n          name: \"hide\",\n          self: true,\n          handler() {\n            this.hideControls();\n            removeClass(this.slides, this.clsActive);\n            Transition.stop(this.slides);\n          }\n        },\n        {\n          name: \"hidden\",\n          self: true,\n          handler() {\n            this.$destroy(true);\n          }\n        },\n        {\n          name: \"keyup\",\n          el() {\n            return document;\n          },\n          handler({ keyCode }) {\n            if (!this.isToggled(this.$el) || !this.draggable) {\n              return;\n            }\n            let i = -1;\n            if (keyCode === keyMap.LEFT) {\n              i = \"previous\";\n            } else if (keyCode === keyMap.RIGHT) {\n              i = \"next\";\n            } else if (keyCode === keyMap.HOME) {\n              i = 0;\n            } else if (keyCode === keyMap.END) {\n              i = \"last\";\n            }\n            if (~i) {\n              this.show(i);\n            }\n          }\n        },\n        {\n          name: \"beforeitemshow\",\n          handler(e) {\n            if (this.isToggled()) {\n              return;\n            }\n            this.draggable = false;\n            e.preventDefault();\n            this.toggleElement(this.$el, true, false);\n            this.animation = Animations$1[\"scale\"];\n            removeClass(e.target, this.clsActive);\n            this.stack.splice(1, 0, this.index);\n          }\n        },\n        {\n          name: \"itemshow\",\n          handler() {\n            html(this.caption, this.getItem().caption || \"\");\n            for (let j = -this.preload; j <= this.preload; j++) {\n              this.loadItem(this.index + j);\n            }\n          }\n        },\n        {\n          name: \"itemshown\",\n          handler() {\n            this.draggable = this.$props.draggable;\n          }\n        },\n        {\n          name: \"itemload\",\n          async handler(_, item) {\n            const { source: src, type, alt = \"\", poster, attrs = {} } = item;\n            this.setItem(item, \"<span uk-spinner></span>\");\n            if (!src) {\n              return;\n            }\n            let matches;\n            const iframeAttrs = {\n              allowfullscreen: \"\",\n              style: \"max-width: 100%; box-sizing: border-box;\",\n              \"uk-responsive\": \"\",\n              \"uk-video\": `${this.videoAutoplay}`\n            };\n            if (type === \"image\" || src.match(/\\.(avif|jpe?g|jfif|a?png|gif|svg|webp)($|\\?)/i)) {\n              const img = createEl(\"img\", { src, alt, ...attrs });\n              on(img, \"load\", () => this.setItem(item, img));\n              on(img, \"error\", () => this.setError(item));\n            } else if (type === \"video\" || src.match(/\\.(mp4|webm|ogv)($|\\?)/i)) {\n              const video = createEl(\"video\", {\n                src,\n                poster,\n                controls: \"\",\n                playsinline: \"\",\n                \"uk-video\": `${this.videoAutoplay}`,\n                ...attrs\n              });\n              on(video, \"loadedmetadata\", () => this.setItem(item, video));\n              on(video, \"error\", () => this.setError(item));\n            } else if (type === \"iframe\" || src.match(/\\.(html|php)($|\\?)/i)) {\n              this.setItem(\n                item,\n                createEl(\"iframe\", {\n                  src,\n                  allowfullscreen: \"\",\n                  class: \"uk-lightbox-iframe\",\n                  ...attrs\n                })\n              );\n            } else if (matches = src.match(\n              /\\/\\/(?:.*?youtube(-nocookie)?\\..*?(?:[?&]v=|\\/shorts\\/)|youtu\\.be\\/)([\\w-]{11})[&?]?(.*)?/\n            )) {\n              this.setItem(\n                item,\n                createEl(\"iframe\", {\n                  src: `https://www.youtube${matches[1] || \"\"}.com/embed/${matches[2]}${matches[3] ? `?${matches[3]}` : \"\"}`,\n                  width: 1920,\n                  height: 1080,\n                  ...iframeAttrs,\n                  ...attrs\n                })\n              );\n            } else if (matches = src.match(/\\/\\/.*?vimeo\\.[a-z]+\\/(\\d+)[&?]?(.*)?/)) {\n              try {\n                const { height, width } = await (await fetch(\n                  `https://vimeo.com/api/oembed.json?maxwidth=1920&url=${encodeURI(\n                src\n              )}`,\n                  { credentials: \"omit\" }\n                )).json();\n                this.setItem(\n                  item,\n                  createEl(\"iframe\", {\n                    src: `https://player.vimeo.com/video/${matches[1]}${matches[2] ? `?${matches[2]}` : \"\"}`,\n                    width,\n                    height,\n                    ...iframeAttrs,\n                    ...attrs\n                  })\n                );\n              } catch (e) {\n                this.setError(item);\n              }\n            }\n          }\n        }\n      ],\n      methods: {\n        loadItem(index = this.index) {\n          const item = this.getItem(index);\n          if (!this.getSlide(item).childElementCount) {\n            trigger(this.$el, \"itemload\", [item]);\n          }\n        },\n        getItem(index = this.index) {\n          return this.items[getIndex(index, this.slides)];\n        },\n        setItem(item, content) {\n          trigger(this.$el, \"itemloaded\", [this, html(this.getSlide(item), content)]);\n        },\n        getSlide(item) {\n          return this.slides[this.items.indexOf(item)];\n        },\n        setError(item) {\n          this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n        },\n        showControls() {\n          clearTimeout(this.controlsTimer);\n          this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n          addClass(this.$el, \"uk-active\", \"uk-transition-active\");\n        },\n        hideControls() {\n          removeClass(this.$el, \"uk-active\", \"uk-transition-active\");\n        }\n      }\n    };\n    function createEl(tag, attrs) {\n      const el = fragment(`<${tag}>`);\n      attr(el, attrs);\n      return el;\n    }\n\n    var lightbox = {\n      install: install$3,\n      props: { toggle: String },\n      data: { toggle: \"a\" },\n      computed: {\n        toggles: ({ toggle }, $el) => $$(toggle, $el)\n      },\n      watch: {\n        toggles(toggles) {\n          this.hide();\n          for (const toggle of toggles) {\n            if (isTag(toggle, \"a\")) {\n              attr(toggle, \"role\", \"button\");\n            }\n          }\n        }\n      },\n      disconnected() {\n        this.hide();\n      },\n      events: {\n        name: \"click\",\n        delegate() {\n          return `${this.toggle}:not(.uk-disabled)`;\n        },\n        handler(e) {\n          e.preventDefault();\n          this.show(e.current);\n        }\n      },\n      methods: {\n        show(index) {\n          const items = uniqueBy(this.toggles.map(toItem), \"source\");\n          if (isElement(index)) {\n            const { source } = toItem(index);\n            index = findIndex(items, ({ source: src }) => source === src);\n          }\n          this.panel = this.panel || this.$create(\"lightboxPanel\", { ...this.$props, items });\n          on(this.panel.$el, \"hidden\", () => this.panel = null);\n          return this.panel.show(index);\n        },\n        hide() {\n          var _a;\n          return (_a = this.panel) == null ? void 0 : _a.hide();\n        }\n      }\n    };\n    function install$3(UIkit, Lightbox) {\n      if (!UIkit.lightboxPanel) {\n        UIkit.component(\"lightboxPanel\", LightboxPanel);\n      }\n      assign(Lightbox.props, UIkit.component(\"lightboxPanel\").options.props);\n    }\n    function toItem(el) {\n      const item = {};\n      for (const attr2 of [\"href\", \"caption\", \"type\", \"poster\", \"alt\", \"attrs\"]) {\n        item[attr2 === \"href\" ? \"source\" : attr2] = data(el, attr2);\n      }\n      item.attrs = parseOptions(item.attrs);\n      return item;\n    }\n\n    var notification = {\n      mixins: [Container],\n      functional: true,\n      args: [\"message\", \"status\"],\n      data: {\n        message: \"\",\n        status: \"\",\n        timeout: 5e3,\n        group: \"\",\n        pos: \"top-center\",\n        clsContainer: \"uk-notification\",\n        clsClose: \"uk-notification-close\",\n        clsMsg: \"uk-notification-message\"\n      },\n      install: install$2,\n      computed: {\n        marginProp: ({ pos }) => `margin-${pos.match(/[a-z]+(?=-)/)[0]}`,\n        startProps() {\n          return { opacity: 0, [this.marginProp]: -this.$el.offsetHeight };\n        }\n      },\n      created() {\n        const posClass = `${this.clsContainer}-${this.pos}`;\n        let container = $(`.${posClass}`, this.container);\n        if (!container || !isVisible(container)) {\n          container = append(\n            this.container,\n            `<div class=\"${this.clsContainer} ${posClass}\"></div>`\n          );\n        }\n        this.$mount(\n          append(\n            container,\n            `<div class=\"${this.clsMsg}${this.status ? ` ${this.clsMsg}-${this.status}` : \"\"}\" role=\"alert\"> <a href class=\"${this.clsClose}\" data-uk-close></a> <div>${this.message}</div> </div>`\n          )\n        );\n      },\n      async connected() {\n        const margin = toFloat(css(this.$el, this.marginProp));\n        await Transition.start(css(this.$el, this.startProps), {\n          opacity: 1,\n          [this.marginProp]: margin\n        });\n        if (this.timeout) {\n          this.timer = setTimeout(this.close, this.timeout);\n        }\n      },\n      events: {\n        click(e) {\n          if (e.target.closest('a[href=\"#\"],a[href=\"\"]')) {\n            e.preventDefault();\n          }\n          this.close();\n        },\n        [pointerEnter]() {\n          if (this.timer) {\n            clearTimeout(this.timer);\n          }\n        },\n        [pointerLeave]() {\n          if (this.timeout) {\n            this.timer = setTimeout(this.close, this.timeout);\n          }\n        }\n      },\n      methods: {\n        async close(immediate) {\n          const removeFn = (el) => {\n            const container = parent(el);\n            trigger(el, \"close\", [this]);\n            remove$1(el);\n            if (!(container == null ? void 0 : container.hasChildNodes())) {\n              remove$1(container);\n            }\n          };\n          if (this.timer) {\n            clearTimeout(this.timer);\n          }\n          if (!immediate) {\n            await Transition.start(this.$el, this.startProps);\n          }\n          removeFn(this.$el);\n        }\n      }\n    };\n    function install$2(UIkit) {\n      UIkit.notification.closeAll = function(group, immediate) {\n        apply(document.body, (el) => {\n          const notification = UIkit.getComponent(el, \"notification\");\n          if (notification && (!group || group === notification.group)) {\n            notification.close(immediate);\n          }\n        });\n      };\n    }\n\n    var Media = {\n      props: {\n        media: Boolean\n      },\n      data: {\n        media: false\n      },\n      connected() {\n        const media = toMedia(this.media, this.$el);\n        this.matchMedia = true;\n        if (media) {\n          this.mediaObj = window.matchMedia(media);\n          const handler = () => {\n            this.matchMedia = this.mediaObj.matches;\n            trigger(this.$el, createEvent(\"mediachange\", false, true, [this.mediaObj]));\n          };\n          this.offMediaObj = on(this.mediaObj, \"change\", () => {\n            handler();\n            this.$emit(\"resize\");\n          });\n          handler();\n        }\n      },\n      disconnected() {\n        var _a;\n        (_a = this.offMediaObj) == null ? void 0 : _a.call(this);\n      }\n    };\n    function toMedia(value, element) {\n      if (isString(value)) {\n        if (startsWith(value, \"@\")) {\n          value = toFloat(css(element, `--uk-breakpoint-${value.substr(1)}`));\n        } else if (isNaN(value)) {\n          return value;\n        }\n      }\n      return value && isNumeric(value) ? `(min-width: ${value}px)` : \"\";\n    }\n\n    function getMaxPathLength(el) {\n      return Math.ceil(\n        Math.max(\n          0,\n          ...$$(\"[stroke]\", el).map((stroke) => {\n            try {\n              return stroke.getTotalLength();\n            } catch (e) {\n              return 0;\n            }\n          })\n        )\n      );\n    }\n\n    const props = {\n      x: transformFn,\n      y: transformFn,\n      rotate: transformFn,\n      scale: transformFn,\n      color: colorFn,\n      backgroundColor: colorFn,\n      borderColor: colorFn,\n      blur: filterFn,\n      hue: filterFn,\n      fopacity: filterFn,\n      grayscale: filterFn,\n      invert: filterFn,\n      saturate: filterFn,\n      sepia: filterFn,\n      opacity: cssPropFn,\n      stroke: strokeFn,\n      bgx: backgroundFn,\n      bgy: backgroundFn\n    };\n    const { keys } = Object;\n    var Parallax = {\n      mixins: [Media],\n      props: fillObject(keys(props), \"list\"),\n      data: fillObject(keys(props), void 0),\n      computed: {\n        props(properties, $el) {\n          const stops = {};\n          for (const prop in properties) {\n            if (prop in props && !isUndefined(properties[prop])) {\n              stops[prop] = properties[prop].slice();\n            }\n          }\n          const result = {};\n          for (const prop in stops) {\n            result[prop] = props[prop](prop, $el, stops[prop], stops);\n          }\n          return result;\n        }\n      },\n      events: {\n        load() {\n          this.$emit();\n        }\n      },\n      methods: {\n        reset() {\n          for (const prop in this.getCss(0)) {\n            css(this.$el, prop, \"\");\n          }\n        },\n        getCss(percent) {\n          const css2 = {};\n          for (const prop in this.props) {\n            this.props[prop](css2, clamp(percent));\n          }\n          css2.willChange = Object.keys(css2).map(propName).join(\",\");\n          return css2;\n        }\n      }\n    };\n    function transformFn(prop, el, stops) {\n      let unit = getUnit(stops) || { x: \"px\", y: \"px\", rotate: \"deg\" }[prop] || \"\";\n      let transformFn2;\n      if (prop === \"x\" || prop === \"y\") {\n        prop = `translate${ucfirst(prop)}`;\n        transformFn2 = (stop) => toFloat(toFloat(stop).toFixed(unit === \"px\" ? 0 : 6));\n      } else if (prop === \"scale\") {\n        unit = \"\";\n        transformFn2 = (stop) => {\n          var _a;\n          return getUnit([stop]) ? toPx(stop, \"width\", el, true) / el[`offset${((_a = stop.endsWith) == null ? void 0 : _a.call(stop, \"vh\")) ? \"Height\" : \"Width\"}`] : toFloat(stop);\n        };\n      }\n      if (stops.length === 1) {\n        stops.unshift(prop === \"scale\" ? 1 : 0);\n      }\n      stops = parseStops(stops, transformFn2);\n      return (css2, percent) => {\n        css2.transform = `${css2.transform || \"\"} ${prop}(${getValue(stops, percent)}${unit})`;\n      };\n    }\n    function colorFn(prop, el, stops) {\n      if (stops.length === 1) {\n        stops.unshift(getCssValue(el, prop, \"\"));\n      }\n      stops = parseStops(stops, (stop) => parseColor(el, stop));\n      return (css2, percent) => {\n        const [start, end, p] = getStop(stops, percent);\n        const value = start.map((value2, i) => {\n          value2 += p * (end[i] - value2);\n          return i === 3 ? toFloat(value2) : parseInt(value2, 10);\n        }).join(\",\");\n        css2[prop] = `rgba(${value})`;\n      };\n    }\n    function parseColor(el, color) {\n      return getCssValue(el, \"color\", color).split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(toFloat);\n    }\n    function filterFn(prop, el, stops) {\n      if (stops.length === 1) {\n        stops.unshift(0);\n      }\n      const unit = getUnit(stops) || { blur: \"px\", hue: \"deg\" }[prop] || \"%\";\n      prop = { fopacity: \"opacity\", hue: \"hue-rotate\" }[prop] || prop;\n      stops = parseStops(stops);\n      return (css2, percent) => {\n        const value = getValue(stops, percent);\n        css2.filter = `${css2.filter || \"\"} ${prop}(${value + unit})`;\n      };\n    }\n    function cssPropFn(prop, el, stops) {\n      if (stops.length === 1) {\n        stops.unshift(getCssValue(el, prop, \"\"));\n      }\n      stops = parseStops(stops);\n      return (css2, percent) => {\n        css2[prop] = getValue(stops, percent);\n      };\n    }\n    function strokeFn(prop, el, stops) {\n      if (stops.length === 1) {\n        stops.unshift(0);\n      }\n      const unit = getUnit(stops);\n      const length = getMaxPathLength(el);\n      stops = parseStops(stops.reverse(), (stop) => {\n        stop = toFloat(stop);\n        return unit === \"%\" ? stop * length / 100 : stop;\n      });\n      if (!stops.some(([value]) => value)) {\n        return noop;\n      }\n      css(el, \"strokeDasharray\", length);\n      return (css2, percent) => {\n        css2.strokeDashoffset = getValue(stops, percent);\n      };\n    }\n    function backgroundFn(prop, el, stops, props2) {\n      if (stops.length === 1) {\n        stops.unshift(0);\n      }\n      const attr = prop === \"bgy\" ? \"height\" : \"width\";\n      props2[prop] = parseStops(stops, (stop) => toPx(stop, attr, el));\n      const bgProps = [\"bgx\", \"bgy\"].filter((prop2) => prop2 in props2);\n      if (bgProps.length === 2 && prop === \"bgx\") {\n        return noop;\n      }\n      if (getCssValue(el, \"backgroundSize\", \"\") === \"cover\") {\n        return backgroundCoverFn(prop, el, stops, props2);\n      }\n      const positions = {};\n      for (const prop2 of bgProps) {\n        positions[prop2] = getBackgroundPos(el, prop2);\n      }\n      return setBackgroundPosFn(bgProps, positions, props2);\n    }\n    function backgroundCoverFn(prop, el, stops, props2) {\n      const dimImage = getBackgroundImageDimensions(el);\n      if (!dimImage.width) {\n        return noop;\n      }\n      const dimEl = {\n        width: el.offsetWidth,\n        height: el.offsetHeight\n      };\n      const bgProps = [\"bgx\", \"bgy\"].filter((prop2) => prop2 in props2);\n      const positions = {};\n      for (const prop2 of bgProps) {\n        const values = props2[prop2].map(([value]) => value);\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        const down = values.indexOf(min) < values.indexOf(max);\n        const diff = max - min;\n        positions[prop2] = `${(down ? -diff : 0) - (down ? min : max)}px`;\n        dimEl[prop2 === \"bgy\" ? \"height\" : \"width\"] += diff;\n      }\n      const dim = Dimensions.cover(dimImage, dimEl);\n      for (const prop2 of bgProps) {\n        const attr = prop2 === \"bgy\" ? \"height\" : \"width\";\n        const overflow = dim[attr] - dimEl[attr];\n        positions[prop2] = `max(${getBackgroundPos(el, prop2)},-${overflow}px) + ${positions[prop2]}`;\n      }\n      const fn = setBackgroundPosFn(bgProps, positions, props2);\n      return (css2, percent) => {\n        fn(css2, percent);\n        css2.backgroundSize = `${dim.width}px ${dim.height}px`;\n        css2.backgroundRepeat = \"no-repeat\";\n      };\n    }\n    function getBackgroundPos(el, prop) {\n      return getCssValue(el, `background-position-${prop.substr(-1)}`, \"\");\n    }\n    function setBackgroundPosFn(bgProps, positions, props2) {\n      return function(css2, percent) {\n        for (const prop of bgProps) {\n          const value = getValue(props2[prop], percent);\n          css2[`background-position-${prop.substr(-1)}`] = `calc(${positions[prop]} + ${value}px)`;\n        }\n      };\n    }\n    const dimensions = {};\n    function getBackgroundImageDimensions(el) {\n      const src = css(el, \"backgroundImage\").replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, \"$1\");\n      if (dimensions[src]) {\n        return dimensions[src];\n      }\n      const image = new Image();\n      if (src) {\n        image.src = src;\n        if (!image.naturalWidth) {\n          image.onload = () => {\n            dimensions[src] = toDimensions(image);\n            trigger(el, createEvent(\"load\", false));\n          };\n          return toDimensions(image);\n        }\n      }\n      return dimensions[src] = toDimensions(image);\n    }\n    function toDimensions(image) {\n      return {\n        width: image.naturalWidth,\n        height: image.naturalHeight\n      };\n    }\n    function parseStops(stops, fn = toFloat) {\n      const result = [];\n      const { length } = stops;\n      let nullIndex = 0;\n      for (let i = 0; i < length; i++) {\n        let [value, percent] = isString(stops[i]) ? stops[i].trim().split(/ (?![^(]*\\))/) : [stops[i]];\n        value = fn(value);\n        percent = percent ? toFloat(percent) / 100 : null;\n        if (i === 0) {\n          if (percent === null) {\n            percent = 0;\n          } else if (percent) {\n            result.push([value, 0]);\n          }\n        } else if (i === length - 1) {\n          if (percent === null) {\n            percent = 1;\n          } else if (percent !== 1) {\n            result.push([value, percent]);\n            percent = 1;\n          }\n        }\n        result.push([value, percent]);\n        if (percent === null) {\n          nullIndex++;\n        } else if (nullIndex) {\n          const leftPercent = result[i - nullIndex - 1][1];\n          const p = (percent - leftPercent) / (nullIndex + 1);\n          for (let j = nullIndex; j > 0; j--) {\n            result[i - j][1] = leftPercent + p * (nullIndex - j + 1);\n          }\n          nullIndex = 0;\n        }\n      }\n      return result;\n    }\n    function getStop(stops, percent) {\n      const index = findIndex(stops.slice(1), ([, targetPercent]) => percent <= targetPercent) + 1;\n      return [\n        stops[index - 1][0],\n        stops[index][0],\n        (percent - stops[index - 1][1]) / (stops[index][1] - stops[index - 1][1])\n      ];\n    }\n    function getValue(stops, percent) {\n      const [start, end, p] = getStop(stops, percent);\n      return start + Math.abs(start - end) * p * (start < end ? 1 : -1);\n    }\n    const unitRe = /^-?\\d+(?:\\.\\d+)?(\\S+)?/;\n    function getUnit(stops, defaultUnit) {\n      var _a;\n      for (const stop of stops) {\n        const match = (_a = stop.match) == null ? void 0 : _a.call(stop, unitRe);\n        if (match) {\n          return match[1];\n        }\n      }\n      return defaultUnit;\n    }\n    function getCssValue(el, prop, value) {\n      const prev = el.style[prop];\n      const val = css(css(el, prop, value), prop);\n      el.style[prop] = prev;\n      return val;\n    }\n    function fillObject(keys2, value) {\n      return keys2.reduce((data, prop) => {\n        data[prop] = value;\n        return data;\n      }, {});\n    }\n\n    var parallax = {\n      mixins: [Parallax],\n      props: {\n        target: String,\n        viewport: Number,\n        // Deprecated\n        easing: Number,\n        start: String,\n        end: String\n      },\n      data: {\n        target: false,\n        viewport: 1,\n        easing: 1,\n        start: 0,\n        end: 0\n      },\n      computed: {\n        target: ({ target }, $el) => getOffsetElement(target && query(target, $el) || $el),\n        start({ start }) {\n          return toPx(start, \"height\", this.target, true);\n        },\n        end({ end, viewport: viewport2 }) {\n          return toPx(\n            end || (viewport2 = (1 - viewport2) * 100) && `${viewport2}vh+${viewport2}%`,\n            \"height\",\n            this.target,\n            true\n          );\n        }\n      },\n      observe: [\n        viewport(),\n        scroll$1({ target: ({ target }) => target }),\n        resize({ target: ({ $el, target }) => [$el, target, scrollParent(target, true)] })\n      ],\n      update: {\n        read({ percent }, types) {\n          if (!types.has(\"scroll\")) {\n            percent = false;\n          }\n          if (!isVisible(this.$el)) {\n            return false;\n          }\n          if (!this.matchMedia) {\n            return;\n          }\n          const prev = percent;\n          percent = ease(scrolledOver(this.target, this.start, this.end), this.easing);\n          return {\n            percent,\n            style: prev === percent ? false : this.getCss(percent)\n          };\n        },\n        write({ style }) {\n          if (!this.matchMedia) {\n            this.reset();\n            return;\n          }\n          style && css(this.$el, style);\n        },\n        events: [\"scroll\", \"resize\"]\n      }\n    };\n    function ease(percent, easing) {\n      return easing >= 0 ? Math.pow(percent, easing + 1) : 1 - Math.pow(1 - percent, 1 - easing);\n    }\n    function getOffsetElement(el) {\n      return el ? \"offsetTop\" in el ? el : getOffsetElement(parent(el)) : document.documentElement;\n    }\n\n    var SliderReactive = {\n      update: {\n        write() {\n          if (this.stack.length || this.dragging) {\n            return;\n          }\n          const index = this.getValidIndex();\n          if (!~this.prevIndex || this.index !== index) {\n            this.show(index);\n          } else {\n            this._translate(1, this.prevIndex, this.index);\n          }\n        },\n        events: [\"resize\"]\n      }\n    };\n\n    var SliderPreload = {\n      observe: lazyload({\n        target: ({ slides }) => slides,\n        targets: (instance) => instance.getAdjacentSlides()\n      })\n    };\n\n    function Transitioner(prev, next, dir, { center, easing, list }) {\n      const from = prev ? getLeft(prev, list, center) : getLeft(next, list, center) + dimensions$1(next).width * dir;\n      const to = next ? getLeft(next, list, center) : from + dimensions$1(prev).width * dir * (isRtl ? -1 : 1);\n      let resolve;\n      return {\n        dir,\n        show(duration, percent = 0, linear) {\n          const timing = linear ? \"linear\" : easing;\n          duration -= Math.round(duration * clamp(percent, -1, 1));\n          this.translate(percent);\n          percent = prev ? percent : clamp(percent, 0, 1);\n          triggerUpdate(this.getItemIn(), \"itemin\", { percent, duration, timing, dir });\n          prev && triggerUpdate(this.getItemIn(true), \"itemout\", {\n            percent: 1 - percent,\n            duration,\n            timing,\n            dir\n          });\n          return new Promise((res) => {\n            resolve || (resolve = res);\n            Transition.start(\n              list,\n              { transform: translate(-to * (isRtl ? -1 : 1), \"px\") },\n              duration,\n              timing\n            ).then(resolve, noop);\n          });\n        },\n        cancel() {\n          return Transition.cancel(list);\n        },\n        reset() {\n          css(list, \"transform\", \"\");\n        },\n        async forward(duration, percent = this.percent()) {\n          await this.cancel();\n          return this.show(duration, percent, true);\n        },\n        translate(percent) {\n          const distance = this.getDistance() * dir * (isRtl ? -1 : 1);\n          css(\n            list,\n            \"transform\",\n            translate(\n              clamp(\n                -to + (distance - distance * percent),\n                -getWidth(list),\n                dimensions$1(list).width\n              ) * (isRtl ? -1 : 1),\n              \"px\"\n            )\n          );\n          const actives = this.getActives();\n          const itemIn = this.getItemIn();\n          const itemOut = this.getItemIn(true);\n          percent = prev ? clamp(percent, -1, 1) : 0;\n          for (const slide of children(list)) {\n            const isActive = includes(actives, slide);\n            const isIn = slide === itemIn;\n            const isOut = slide === itemOut;\n            const translateIn = isIn || !isOut && (isActive || dir * (isRtl ? -1 : 1) === -1 ^ getElLeft(slide, list) > getElLeft(prev || next));\n            triggerUpdate(slide, `itemtranslate${translateIn ? \"in\" : \"out\"}`, {\n              dir,\n              percent: isOut ? 1 - percent : isIn ? percent : isActive ? 1 : 0\n            });\n          }\n        },\n        percent() {\n          return Math.abs(\n            (css(list, \"transform\").split(\",\")[4] * (isRtl ? -1 : 1) + from) / (to - from)\n          );\n        },\n        getDistance() {\n          return Math.abs(to - from);\n        },\n        getItemIn(out = false) {\n          let actives = this.getActives();\n          let nextActives = inView(list, getLeft(next || prev, list, center));\n          if (out) {\n            const temp = actives;\n            actives = nextActives;\n            nextActives = temp;\n          }\n          return nextActives[findIndex(nextActives, (el) => !includes(actives, el))];\n        },\n        getActives() {\n          return inView(list, getLeft(prev || next, list, center));\n        }\n      };\n    }\n    function getLeft(el, list, center) {\n      const left = getElLeft(el, list);\n      return center ? left - centerEl(el, list) : Math.min(left, getMax(list));\n    }\n    function getMax(list) {\n      return Math.max(0, getWidth(list) - dimensions$1(list).width);\n    }\n    function getWidth(list) {\n      return sumBy(children(list), (el) => dimensions$1(el).width);\n    }\n    function centerEl(el, list) {\n      return dimensions$1(list).width / 2 - dimensions$1(el).width / 2;\n    }\n    function getElLeft(el, list) {\n      return el && (position(el).left + (isRtl ? dimensions$1(el).width - dimensions$1(list).width : 0)) * (isRtl ? -1 : 1) || 0;\n    }\n    function inView(list, listLeft) {\n      listLeft -= 1;\n      const listWidth = dimensions$1(list).width;\n      const listRight = listLeft + listWidth + 2;\n      return children(list).filter((slide) => {\n        const slideLeft = getElLeft(slide, list);\n        const slideRight = slideLeft + Math.min(dimensions$1(slide).width, listWidth);\n        return slideLeft >= listLeft && slideRight <= listRight;\n      });\n    }\n    function triggerUpdate(el, type, data) {\n      trigger(el, createEvent(type, false, false, data));\n    }\n\n    var slider = {\n      mixins: [Class, Slider, SliderReactive, SliderPreload],\n      props: {\n        center: Boolean,\n        sets: Boolean\n      },\n      data: {\n        center: false,\n        sets: false,\n        attrItem: \"uk-slider-item\",\n        selList: \".uk-slider-items\",\n        selNav: \".uk-slider-nav\",\n        clsContainer: \"uk-slider-container\",\n        Transitioner\n      },\n      computed: {\n        avgWidth() {\n          return getWidth(this.list) / this.length;\n        },\n        finite({ finite }) {\n          return finite || isFinite(this.list, this.center);\n        },\n        maxIndex() {\n          if (!this.finite || this.center && !this.sets) {\n            return this.length - 1;\n          }\n          if (this.center) {\n            return last(this.sets);\n          }\n          let lft = 0;\n          const max = getMax(this.list);\n          const index = findIndex(this.slides, (el) => {\n            if (lft >= max) {\n              return true;\n            }\n            lft += dimensions$1(el).width;\n          });\n          return ~index ? index : this.length - 1;\n        },\n        sets({ sets: enabled }) {\n          if (!enabled) {\n            return;\n          }\n          let left = 0;\n          const sets = [];\n          const width = dimensions$1(this.list).width;\n          for (let i = 0; i < this.length; i++) {\n            const slideWidth = dimensions$1(this.slides[i]).width;\n            if (left + slideWidth > width) {\n              left = 0;\n            }\n            if (this.center) {\n              if (left < width / 2 && left + slideWidth + dimensions$1(getIndex(+i + 1, this.slides)).width / 2 > width / 2) {\n                sets.push(+i);\n                left = width / 2 - slideWidth / 2;\n              }\n            } else if (left === 0) {\n              sets.push(Math.min(+i, this.maxIndex));\n            }\n            left += slideWidth;\n          }\n          if (sets.length) {\n            return sets;\n          }\n        },\n        transitionOptions() {\n          return {\n            center: this.center,\n            list: this.list\n          };\n        },\n        slides() {\n          return children(this.list).filter(isVisible);\n        }\n      },\n      connected() {\n        toggleClass(this.$el, this.clsContainer, !$(`.${this.clsContainer}`, this.$el));\n      },\n      observe: resize({\n        target: ({ slides }) => slides\n      }),\n      update: {\n        write() {\n          for (const el of this.navItems) {\n            const index = toNumber(data(el, this.attrItem));\n            if (index !== false) {\n              el.hidden = !this.maxIndex || index > this.maxIndex || this.sets && !includes(this.sets, index);\n            }\n          }\n          if (this.length && !this.dragging && !this.stack.length) {\n            this.reorder();\n            this._translate(1);\n          }\n          this.updateActiveClasses();\n        },\n        events: [\"resize\"]\n      },\n      events: {\n        beforeitemshow(e) {\n          if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) {\n            this.index = this.getValidIndex();\n          }\n          const diff = Math.abs(\n            this.index - this.prevIndex + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0)\n          );\n          if (!this.dragging && diff > 1) {\n            for (let i = 0; i < diff; i++) {\n              this.stack.splice(1, 0, this.dir > 0 ? \"next\" : \"previous\");\n            }\n            e.preventDefault();\n            return;\n          }\n          const index = this.dir < 0 || !this.slides[this.prevIndex] ? this.index : this.prevIndex;\n          this.duration = speedUp(this.avgWidth / this.velocity) * (dimensions$1(this.slides[index]).width / this.avgWidth);\n          this.reorder();\n        },\n        itemshow() {\n          if (~this.prevIndex) {\n            addClass(this._getTransitioner().getItemIn(), this.clsActive);\n          }\n        },\n        itemshown() {\n          this.updateActiveClasses();\n        }\n      },\n      methods: {\n        reorder() {\n          if (this.finite) {\n            css(this.slides, \"order\", \"\");\n            return;\n          }\n          const index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\n          this.slides.forEach(\n            (slide, i) => css(\n              slide,\n              \"order\",\n              this.dir > 0 && i < index ? 1 : this.dir < 0 && i >= this.index ? -1 : \"\"\n            )\n          );\n          if (!this.center) {\n            return;\n          }\n          const next = this.slides[index];\n          let width = dimensions$1(this.list).width / 2 - dimensions$1(next).width / 2;\n          let j = 0;\n          while (width > 0) {\n            const slideIndex = this.getIndex(--j + index, index);\n            const slide = this.slides[slideIndex];\n            css(slide, \"order\", slideIndex > index ? -2 : -1);\n            width -= dimensions$1(slide).width;\n          }\n        },\n        updateActiveClasses() {\n          const actives = this._getTransitioner(this.index).getActives();\n          const activeClasses = [\n            this.clsActive,\n            (!this.sets || includes(this.sets, toFloat(this.index))) && this.clsActivated || \"\"\n          ];\n          for (const slide of this.slides) {\n            const active = includes(actives, slide);\n            toggleClass(slide, activeClasses, active);\n            attr(slide, \"aria-hidden\", !active);\n            for (const focusable of $$(selFocusable, slide)) {\n              if (!hasOwn(focusable, \"_tabindex\")) {\n                focusable._tabindex = attr(focusable, \"tabindex\");\n              }\n              attr(focusable, \"tabindex\", active ? focusable._tabindex : -1);\n            }\n          }\n        },\n        getValidIndex(index = this.index, prevIndex = this.prevIndex) {\n          index = this.getIndex(index, prevIndex);\n          if (!this.sets) {\n            return index;\n          }\n          let prev;\n          do {\n            if (includes(this.sets, index)) {\n              return index;\n            }\n            prev = index;\n            index = this.getIndex(index + this.dir, prevIndex);\n          } while (index !== prev);\n          return index;\n        },\n        getAdjacentSlides() {\n          const { width } = dimensions$1(this.list);\n          const left = -width;\n          const right = width * 2;\n          const slideWidth = dimensions$1(this.slides[this.index]).width;\n          const slideLeft = this.center ? width / 2 - slideWidth / 2 : 0;\n          const slides = /* @__PURE__ */ new Set();\n          for (const i of [-1, 1]) {\n            let currentLeft = slideLeft + (i > 0 ? slideWidth : 0);\n            let j = 0;\n            do {\n              const slide = this.slides[this.getIndex(this.index + i + j++ * i)];\n              currentLeft += dimensions$1(slide).width * i;\n              slides.add(slide);\n            } while (this.length > j && currentLeft > left && currentLeft < right);\n          }\n          return Array.from(slides);\n        }\n      }\n    };\n    function isFinite(list, center) {\n      if (!list || list.length < 2) {\n        return true;\n      }\n      const { width: listWidth } = dimensions$1(list);\n      if (!center) {\n        return Math.ceil(getWidth(list)) < Math.trunc(listWidth + getMaxElWidth(list));\n      }\n      const slides = children(list);\n      const listHalf = Math.trunc(listWidth / 2);\n      for (const index in slides) {\n        const slide = slides[index];\n        const slideWidth = dimensions$1(slide).width;\n        const slidesInView = /* @__PURE__ */ new Set([slide]);\n        let diff = 0;\n        for (const i of [-1, 1]) {\n          let left = slideWidth / 2;\n          let j = 0;\n          while (left < listHalf) {\n            const nextSlide = slides[getIndex(+index + i + j++ * i, slides)];\n            if (slidesInView.has(nextSlide)) {\n              return true;\n            }\n            left += dimensions$1(nextSlide).width;\n            slidesInView.add(nextSlide);\n          }\n          diff = Math.max(\n            diff,\n            slideWidth / 2 + dimensions$1(slides[getIndex(+index + i, slides)]).width / 2 - (left - listHalf)\n          );\n        }\n        if (diff > sumBy(\n          slides.filter((slide2) => !slidesInView.has(slide2)),\n          (slide2) => dimensions$1(slide2).width\n        )) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function getMaxElWidth(list) {\n      return Math.max(0, ...children(list).map((el) => dimensions$1(el).width));\n    }\n\n    var sliderParallax = {\n      mixins: [Parallax],\n      data: {\n        selItem: \"!li\"\n      },\n      beforeConnect() {\n        this.item = query(this.selItem, this.$el);\n      },\n      disconnected() {\n        this.item = null;\n      },\n      events: [\n        {\n          name: \"itemin itemout\",\n          self: true,\n          el() {\n            return this.item;\n          },\n          handler({ type, detail: { percent, duration, timing, dir } }) {\n            fastdom.read(() => {\n              if (!this.matchMedia) {\n                return;\n              }\n              const propsFrom = this.getCss(getCurrentPercent(type, dir, percent));\n              const propsTo = this.getCss(isIn(type) ? 0.5 : dir > 0 ? 1 : 0);\n              fastdom.write(() => {\n                css(this.$el, propsFrom);\n                Transition.start(this.$el, propsTo, duration, timing).catch(noop);\n              });\n            });\n          }\n        },\n        {\n          name: \"transitioncanceled transitionend\",\n          self: true,\n          el() {\n            return this.item;\n          },\n          handler() {\n            Transition.cancel(this.$el);\n          }\n        },\n        {\n          name: \"itemtranslatein itemtranslateout\",\n          self: true,\n          el() {\n            return this.item;\n          },\n          handler({ type, detail: { percent, dir } }) {\n            fastdom.read(() => {\n              if (!this.matchMedia) {\n                this.reset();\n                return;\n              }\n              const props = this.getCss(getCurrentPercent(type, dir, percent));\n              fastdom.write(() => css(this.$el, props));\n            });\n          }\n        }\n      ]\n    };\n    function isIn(type) {\n      return endsWith(type, \"in\");\n    }\n    function getCurrentPercent(type, dir, percent) {\n      percent /= 2;\n      return isIn(type) ^ dir < 0 ? percent : 1 - percent;\n    }\n\n    var Animations = {\n      ...Animations$2,\n      fade: {\n        show() {\n          return [{ opacity: 0, zIndex: 0 }, { zIndex: -1 }];\n        },\n        percent(current) {\n          return 1 - css(current, \"opacity\");\n        },\n        translate(percent) {\n          return [{ opacity: 1 - percent, zIndex: 0 }, { zIndex: -1 }];\n        }\n      },\n      scale: {\n        show() {\n          return [{ opacity: 0, transform: scale3d(1 + 0.5), zIndex: 0 }, { zIndex: -1 }];\n        },\n        percent(current) {\n          return 1 - css(current, \"opacity\");\n        },\n        translate(percent) {\n          return [\n            { opacity: 1 - percent, transform: scale3d(1 + 0.5 * percent), zIndex: 0 },\n            { zIndex: -1 }\n          ];\n        }\n      },\n      pull: {\n        show(dir) {\n          return dir < 0 ? [\n            { transform: translate(30), zIndex: -1 },\n            { transform: translate(), zIndex: 0 }\n          ] : [\n            { transform: translate(-100), zIndex: 0 },\n            { transform: translate(), zIndex: -1 }\n          ];\n        },\n        percent(current, next, dir) {\n          return dir < 0 ? 1 - translated(next) : translated(current);\n        },\n        translate(percent, dir) {\n          return dir < 0 ? [\n            { transform: translate(30 * percent), zIndex: -1 },\n            { transform: translate(-100 * (1 - percent)), zIndex: 0 }\n          ] : [\n            { transform: translate(-percent * 100), zIndex: 0 },\n            { transform: translate(30 * (1 - percent)), zIndex: -1 }\n          ];\n        }\n      },\n      push: {\n        show(dir) {\n          return dir < 0 ? [\n            { transform: translate(100), zIndex: 0 },\n            { transform: translate(), zIndex: -1 }\n          ] : [\n            { transform: translate(-30), zIndex: -1 },\n            { transform: translate(), zIndex: 0 }\n          ];\n        },\n        percent(current, next, dir) {\n          return dir > 0 ? 1 - translated(next) : translated(current);\n        },\n        translate(percent, dir) {\n          return dir < 0 ? [\n            { transform: translate(percent * 100), zIndex: 0 },\n            { transform: translate(-30 * (1 - percent)), zIndex: -1 }\n          ] : [\n            { transform: translate(-30 * percent), zIndex: -1 },\n            { transform: translate(100 * (1 - percent)), zIndex: 0 }\n          ];\n        }\n      }\n    };\n\n    const supportsAspectRatio = inBrowser && CSS.supports(\"aspect-ratio\", \"1/1\");\n    var slideshow = {\n      mixins: [Class, Slideshow, SliderReactive, SliderPreload],\n      props: {\n        ratio: String,\n        minHeight: Number,\n        maxHeight: Number\n      },\n      data: {\n        ratio: \"16:9\",\n        minHeight: false,\n        maxHeight: false,\n        selList: \".uk-slideshow-items\",\n        attrItem: \"uk-slideshow-item\",\n        selNav: \".uk-slideshow-nav\",\n        Animations\n      },\n      watch: {\n        list(list) {\n          if (list && supportsAspectRatio) {\n            css(list, {\n              aspectRatio: this.ratio.replace(\":\", \"/\"),\n              minHeight: this.minHeight || \"\",\n              maxHeight: this.maxHeight || \"\",\n              minWidth: \"100%\",\n              maxWidth: \"100%\"\n            });\n          }\n        }\n      },\n      update: {\n        // deprecated: Remove with iOS 17\n        read() {\n          if (!this.list || supportsAspectRatio) {\n            return false;\n          }\n          let [width, height] = this.ratio.split(\":\").map(Number);\n          height = height * this.list.offsetWidth / width || 0;\n          if (this.minHeight) {\n            height = Math.max(this.minHeight, height);\n          }\n          if (this.maxHeight) {\n            height = Math.min(this.maxHeight, height);\n          }\n          return { height: height - boxModelAdjust(this.list, \"height\", \"content-box\") };\n        },\n        write({ height }) {\n          height > 0 && css(this.list, \"minHeight\", height);\n        },\n        events: [\"resize\"]\n      },\n      methods: {\n        getAdjacentSlides() {\n          return [1, -1].map((i) => this.slides[this.getIndex(this.index + i)]);\n        }\n      }\n    };\n\n    var sortable = {\n      mixins: [Class, Animate],\n      props: {\n        group: String,\n        threshold: Number,\n        clsItem: String,\n        clsPlaceholder: String,\n        clsDrag: String,\n        clsDragState: String,\n        clsBase: String,\n        clsNoDrag: String,\n        clsEmpty: String,\n        clsCustom: String,\n        handle: String\n      },\n      data: {\n        group: false,\n        threshold: 5,\n        clsItem: \"uk-sortable-item\",\n        clsPlaceholder: \"uk-sortable-placeholder\",\n        clsDrag: \"uk-sortable-drag\",\n        clsDragState: \"uk-drag\",\n        clsBase: \"uk-sortable\",\n        clsNoDrag: \"uk-sortable-nodrag\",\n        clsEmpty: \"uk-sortable-empty\",\n        clsCustom: \"\",\n        handle: false,\n        pos: {}\n      },\n      created() {\n        for (const key of [\"init\", \"start\", \"move\", \"end\"]) {\n          const fn = this[key];\n          this[key] = (e) => {\n            assign(this.pos, getEventPos(e));\n            fn(e);\n          };\n        }\n      },\n      events: {\n        name: pointerDown$1,\n        passive: false,\n        handler: \"init\"\n      },\n      computed: {\n        target: (_, $el) => ($el.tBodies || [$el])[0],\n        items() {\n          return children(this.target);\n        },\n        isEmpty() {\n          return isEmpty(this.items);\n        },\n        handles({ handle }, $el) {\n          return handle ? $$(handle, $el) : this.items;\n        }\n      },\n      watch: {\n        isEmpty(empty) {\n          toggleClass(this.target, this.clsEmpty, empty);\n        },\n        handles(handles, prev) {\n          css(prev, { touchAction: \"\", userSelect: \"\" });\n          css(handles, { touchAction: hasTouch ? \"none\" : \"\", userSelect: \"none\" });\n        }\n      },\n      update: {\n        write(data) {\n          if (!this.drag || !parent(this.placeholder)) {\n            return;\n          }\n          const {\n            pos: { x, y },\n            origin: { offsetTop, offsetLeft },\n            placeholder\n          } = this;\n          css(this.drag, {\n            top: y - offsetTop,\n            left: x - offsetLeft\n          });\n          const sortable = this.getSortable(document.elementFromPoint(x, y));\n          if (!sortable) {\n            return;\n          }\n          const { items } = sortable;\n          if (items.some(Transition.inProgress)) {\n            return;\n          }\n          const target = findTarget(items, { x, y });\n          if (items.length && (!target || target === placeholder)) {\n            return;\n          }\n          const previous = this.getSortable(placeholder);\n          const insertTarget = findInsertTarget(\n            sortable.target,\n            target,\n            placeholder,\n            x,\n            y,\n            sortable === previous && data.moved !== target\n          );\n          if (insertTarget === false) {\n            return;\n          }\n          if (insertTarget && placeholder === insertTarget) {\n            return;\n          }\n          if (sortable !== previous) {\n            previous.remove(placeholder);\n            data.moved = target;\n          } else {\n            delete data.moved;\n          }\n          sortable.insert(placeholder, insertTarget);\n          this.touched.add(sortable);\n        },\n        events: [\"move\"]\n      },\n      methods: {\n        init(e) {\n          const { target, button, defaultPrevented } = e;\n          const [placeholder] = this.items.filter((el) => el.contains(target));\n          if (!placeholder || defaultPrevented || button > 0 || isInput(target) || target.closest(`.${this.clsNoDrag}`) || this.handle && !target.closest(this.handle)) {\n            return;\n          }\n          e.preventDefault();\n          this.touched = /* @__PURE__ */ new Set([this]);\n          this.placeholder = placeholder;\n          this.origin = { target, index: index(placeholder), ...this.pos };\n          on(document, pointerMove$1, this.move);\n          on(document, pointerUp$1, this.end);\n          if (!this.threshold) {\n            this.start(e);\n          }\n        },\n        start(e) {\n          this.drag = appendDrag(this.$container, this.placeholder);\n          const { left, top } = this.placeholder.getBoundingClientRect();\n          assign(this.origin, { offsetLeft: this.pos.x - left, offsetTop: this.pos.y - top });\n          addClass(this.drag, this.clsDrag, this.clsCustom);\n          addClass(this.placeholder, this.clsPlaceholder);\n          addClass(this.items, this.clsItem);\n          addClass(document.documentElement, this.clsDragState);\n          trigger(this.$el, \"start\", [this, this.placeholder]);\n          trackScroll(this.pos);\n          this.move(e);\n        },\n        move(e) {\n          if (this.drag) {\n            this.$emit(\"move\");\n          } else if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\n            this.start(e);\n          }\n        },\n        end() {\n          off(document, pointerMove$1, this.move);\n          off(document, pointerUp$1, this.end);\n          if (!this.drag) {\n            return;\n          }\n          untrackScroll();\n          const sortable = this.getSortable(this.placeholder);\n          if (this === sortable) {\n            if (this.origin.index !== index(this.placeholder)) {\n              trigger(this.$el, \"moved\", [this, this.placeholder]);\n            }\n          } else {\n            trigger(sortable.$el, \"added\", [sortable, this.placeholder]);\n            trigger(this.$el, \"removed\", [this, this.placeholder]);\n          }\n          trigger(this.$el, \"stop\", [this, this.placeholder]);\n          remove$1(this.drag);\n          this.drag = null;\n          for (const { clsPlaceholder, clsItem } of this.touched) {\n            for (const sortable2 of this.touched) {\n              removeClass(sortable2.items, clsPlaceholder, clsItem);\n            }\n          }\n          this.touched = null;\n          removeClass(document.documentElement, this.clsDragState);\n        },\n        insert(element, target) {\n          addClass(this.items, this.clsItem);\n          const insert = () => target ? before(target, element) : append(this.target, element);\n          this.animate(insert);\n        },\n        remove(element) {\n          if (!this.target.contains(element)) {\n            return;\n          }\n          this.animate(() => remove$1(element));\n        },\n        getSortable(element) {\n          do {\n            const sortable = this.$getComponent(element, \"sortable\");\n            if (sortable && (sortable === this || this.group !== false && sortable.group === this.group)) {\n              return sortable;\n            }\n          } while (element = parent(element));\n        }\n      }\n    };\n    let trackTimer;\n    function trackScroll(pos) {\n      let last = Date.now();\n      trackTimer = setInterval(() => {\n        let { x, y } = pos;\n        y += document.scrollingElement.scrollTop;\n        const dist = (Date.now() - last) * 0.3;\n        last = Date.now();\n        scrollParents(document.elementFromPoint(x, pos.y)).reverse().some((scrollEl) => {\n          let { scrollTop: scroll, scrollHeight } = scrollEl;\n          const { top, bottom, height: height2 } = offsetViewport(scrollEl);\n          if (top < y && top + 35 > y) {\n            scroll -= dist;\n          } else if (bottom > y && bottom - 35 < y) {\n            scroll += dist;\n          } else {\n            return;\n          }\n          if (scroll > 0 && scroll < scrollHeight - height2) {\n            scrollEl.scrollTop = scroll;\n            return true;\n          }\n        });\n      }, 15);\n    }\n    function untrackScroll() {\n      clearInterval(trackTimer);\n    }\n    function appendDrag(container, element) {\n      let clone;\n      if (isTag(element, \"li\", \"tr\")) {\n        clone = $(\"<div>\");\n        append(clone, element.cloneNode(true).children);\n        for (const attribute of element.getAttributeNames()) {\n          attr(clone, attribute, element.getAttribute(attribute));\n        }\n      } else {\n        clone = element.cloneNode(true);\n      }\n      append(container, clone);\n      css(clone, \"margin\", \"0\", \"important\");\n      css(clone, {\n        boxSizing: \"border-box\",\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        padding: css(element, \"padding\")\n      });\n      height(clone.firstElementChild, height(element.firstElementChild));\n      return clone;\n    }\n    function findTarget(items, point) {\n      return items[findIndex(items, (item) => pointInRect(point, item.getBoundingClientRect()))];\n    }\n    function findInsertTarget(list, target, placeholder, x, y, sameList) {\n      if (!children(list).length) {\n        return;\n      }\n      const rect = target.getBoundingClientRect();\n      if (!sameList) {\n        if (!isHorizontal(list, placeholder)) {\n          return y < rect.top + rect.height / 2 ? target : target.nextElementSibling;\n        }\n        return target;\n      }\n      const placeholderRect = placeholder.getBoundingClientRect();\n      const sameRow = linesIntersect(\n        [rect.top, rect.bottom],\n        [placeholderRect.top, placeholderRect.bottom]\n      );\n      const [pointerPos, lengthProp, startProp, endProp] = sameRow ? [x, \"width\", \"left\", \"right\"] : [y, \"height\", \"top\", \"bottom\"];\n      const diff = placeholderRect[lengthProp] < rect[lengthProp] ? rect[lengthProp] - placeholderRect[lengthProp] : 0;\n      if (placeholderRect[startProp] < rect[startProp]) {\n        if (diff && pointerPos < rect[startProp] + diff) {\n          return false;\n        }\n        return target.nextElementSibling;\n      }\n      if (diff && pointerPos > rect[endProp] - diff) {\n        return false;\n      }\n      return target;\n    }\n    function isHorizontal(list, placeholder) {\n      const single = children(list).length === 1;\n      if (single) {\n        append(list, placeholder);\n      }\n      const items = children(list);\n      const isHorizontal2 = items.some((el, i) => {\n        const rectA = el.getBoundingClientRect();\n        return items.slice(i + 1).some((el2) => {\n          const rectB = el2.getBoundingClientRect();\n          return !linesIntersect([rectA.left, rectA.right], [rectB.left, rectB.right]);\n        });\n      });\n      if (single) {\n        remove$1(placeholder);\n      }\n      return isHorizontal2;\n    }\n    function linesIntersect(lineA, lineB) {\n      return lineA[1] > lineB[0] && lineB[1] > lineA[0];\n    }\n\n    var Position = {\n      props: {\n        pos: String,\n        offset: null,\n        flip: Boolean,\n        shift: Boolean,\n        inset: Boolean\n      },\n      data: {\n        pos: `bottom-${isRtl ? \"right\" : \"left\"}`,\n        offset: false,\n        flip: true,\n        shift: true,\n        inset: false\n      },\n      connected() {\n        this.pos = this.$props.pos.split(\"-\").concat(\"center\").slice(0, 2);\n        [this.dir, this.align] = this.pos;\n        this.axis = includes([\"top\", \"bottom\"], this.dir) ? \"y\" : \"x\";\n      },\n      methods: {\n        positionAt(element, target, boundary) {\n          let offset = [this.getPositionOffset(element), this.getShiftOffset(element)];\n          const placement = [this.flip && \"flip\", this.shift && \"shift\"];\n          const attach = {\n            element: [this.inset ? this.dir : flipPosition(this.dir), this.align],\n            target: [this.dir, this.align]\n          };\n          if (this.axis === \"y\") {\n            for (const prop in attach) {\n              attach[prop].reverse();\n            }\n            offset.reverse();\n            placement.reverse();\n          }\n          const restoreScrollPosition = storeScrollPosition(element);\n          const elDim = dimensions$1(element);\n          css(element, { top: -elDim.height, left: -elDim.width });\n          positionAt(element, target, {\n            attach,\n            offset,\n            boundary,\n            placement,\n            viewportOffset: this.getViewportOffset(element)\n          });\n          restoreScrollPosition();\n        },\n        getPositionOffset(element) {\n          return toPx(\n            this.offset === false ? css(element, \"--uk-position-offset\") : this.offset,\n            this.axis === \"x\" ? \"width\" : \"height\",\n            element\n          ) * (includes([\"left\", \"top\"], this.dir) ? -1 : 1) * (this.inset ? -1 : 1);\n        },\n        getShiftOffset(element) {\n          return this.align === \"center\" ? 0 : toPx(\n            css(element, \"--uk-position-shift-offset\"),\n            this.axis === \"y\" ? \"width\" : \"height\",\n            element\n          ) * (includes([\"left\", \"top\"], this.align) ? 1 : -1);\n        },\n        getViewportOffset(element) {\n          return toPx(css(element, \"--uk-position-viewport-offset\"));\n        }\n      }\n    };\n    function storeScrollPosition(element) {\n      const scrollElement = scrollParent(element);\n      const { scrollTop } = scrollElement;\n      return () => {\n        if (scrollTop !== scrollElement.scrollTop) {\n          scrollElement.scrollTop = scrollTop;\n        }\n      };\n    }\n\n    var tooltip = {\n      mixins: [Container, Togglable, Position],\n      data: {\n        pos: \"top\",\n        animation: [\"uk-animation-scale-up\"],\n        duration: 100,\n        cls: \"uk-active\"\n      },\n      connected() {\n        makeFocusable(this.$el);\n      },\n      disconnected() {\n        this.hide();\n      },\n      methods: {\n        show() {\n          if (this.isToggled(this.tooltip || null)) {\n            return;\n          }\n          const { delay = 0, title } = parseProps(this.$options);\n          if (!title) {\n            return;\n          }\n          const titleAttr = attr(this.$el, \"title\");\n          const off = on(this.$el, [\"blur\", pointerLeave], (e) => !isTouch(e) && this.hide());\n          this.reset = () => {\n            attr(this.$el, { title: titleAttr, \"aria-describedby\": null });\n            off();\n          };\n          const id = generateId(this);\n          attr(this.$el, { title: null, \"aria-describedby\": id });\n          clearTimeout(this.showTimer);\n          this.showTimer = setTimeout(() => this._show(title, id), delay);\n        },\n        async hide() {\n          var _a;\n          if (matches(this.$el, \"input:focus\")) {\n            return;\n          }\n          clearTimeout(this.showTimer);\n          if (this.isToggled(this.tooltip || null)) {\n            await this.toggleElement(this.tooltip, false, false);\n          }\n          (_a = this.reset) == null ? void 0 : _a.call(this);\n          remove$1(this.tooltip);\n          this.tooltip = null;\n        },\n        async _show(title, id) {\n          this.tooltip = append(\n            this.container,\n            `<div id=\"${id}\" class=\"uk-${this.$options.name}\" role=\"tooltip\"> <div class=\"uk-${this.$options.name}-inner\">${title}</div> </div>`\n          );\n          on(this.tooltip, \"toggled\", (e, toggled) => {\n            if (!toggled) {\n              return;\n            }\n            const update = () => this.positionAt(this.tooltip, this.$el);\n            update();\n            const [dir, align] = getAlignment(this.tooltip, this.$el, this.pos);\n            this.origin = this.axis === \"y\" ? `${flipPosition(dir)}-${align}` : `${align}-${flipPosition(dir)}`;\n            const handlers = [\n              once(\n                document,\n                `keydown ${pointerDown$1}`,\n                this.hide,\n                false,\n                (e2) => e2.type === pointerDown$1 && !this.$el.contains(e2.target) || e2.type === \"keydown\" && e2.keyCode === keyMap.ESC\n              ),\n              on([document, ...overflowParents(this.$el)], \"scroll\", update, {\n                passive: true\n              })\n            ];\n            once(this.tooltip, \"hide\", () => handlers.forEach((handler) => handler()), {\n              self: true\n            });\n          });\n          if (!await this.toggleElement(this.tooltip, true)) {\n            this.hide();\n          }\n        }\n      },\n      events: {\n        // Clicking a button does not give it focus on all browsers and platforms\n        // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#clicking_and_focus\n        [`focus ${pointerEnter} ${pointerDown$1}`](e) {\n          if (!isTouch(e)) {\n            this.show();\n          }\n        }\n      }\n    };\n    function makeFocusable(el) {\n      if (!isFocusable(el)) {\n        attr(el, \"tabindex\", \"0\");\n      }\n    }\n    function getAlignment(el, target, [dir, align]) {\n      const elOffset = offset(el);\n      const targetOffset = offset(target);\n      const properties = [\n        [\"left\", \"right\"],\n        [\"top\", \"bottom\"]\n      ];\n      for (const props2 of properties) {\n        if (elOffset[props2[0]] >= targetOffset[props2[1]]) {\n          dir = props2[1];\n          break;\n        }\n        if (elOffset[props2[1]] <= targetOffset[props2[0]]) {\n          dir = props2[0];\n          break;\n        }\n      }\n      const props = includes(properties[0], dir) ? properties[1] : properties[0];\n      if (elOffset[props[0]] === targetOffset[props[0]]) {\n        align = props[0];\n      } else if (elOffset[props[1]] === targetOffset[props[1]]) {\n        align = props[1];\n      } else {\n        align = \"center\";\n      }\n      return [dir, align];\n    }\n    function parseProps(options) {\n      const { el, id, data: data$1 } = options;\n      return [\"delay\", \"title\"].reduce((obj, key) => ({ [key]: data(el, key), ...obj }), {\n        ...parseOptions(data(el, id), [\"title\"]),\n        ...data$1\n      });\n    }\n\n    var upload = {\n      mixins: [I18n],\n      i18n: {\n        invalidMime: \"Invalid File Type: %s\",\n        invalidName: \"Invalid File Name: %s\",\n        invalidSize: \"Invalid File Size: %s Kilobytes Max\"\n      },\n      props: {\n        allow: String,\n        clsDragover: String,\n        concurrent: Number,\n        maxSize: Number,\n        method: String,\n        mime: String,\n        multiple: Boolean,\n        name: String,\n        params: Object,\n        type: String,\n        url: String\n      },\n      data: {\n        allow: false,\n        clsDragover: \"uk-dragover\",\n        concurrent: 1,\n        maxSize: 0,\n        method: \"POST\",\n        mime: false,\n        multiple: false,\n        name: \"files[]\",\n        params: {},\n        type: \"\",\n        url: \"\",\n        abort: noop,\n        beforeAll: noop,\n        beforeSend: noop,\n        complete: noop,\n        completeAll: noop,\n        error: noop,\n        fail: noop,\n        load: noop,\n        loadEnd: noop,\n        loadStart: noop,\n        progress: noop\n      },\n      events: {\n        change(e) {\n          if (!matches(e.target, 'input[type=\"file\"]')) {\n            return;\n          }\n          e.preventDefault();\n          if (e.target.files) {\n            this.upload(e.target.files);\n          }\n          e.target.value = \"\";\n        },\n        drop(e) {\n          stop(e);\n          const transfer = e.dataTransfer;\n          if (!(transfer == null ? void 0 : transfer.files)) {\n            return;\n          }\n          removeClass(this.$el, this.clsDragover);\n          this.upload(transfer.files);\n        },\n        dragenter(e) {\n          stop(e);\n        },\n        dragover(e) {\n          stop(e);\n          addClass(this.$el, this.clsDragover);\n        },\n        dragleave(e) {\n          stop(e);\n          removeClass(this.$el, this.clsDragover);\n        }\n      },\n      methods: {\n        async upload(files) {\n          files = toArray(files);\n          if (!files.length) {\n            return;\n          }\n          trigger(this.$el, \"upload\", [files]);\n          for (const file of files) {\n            if (this.maxSize && this.maxSize * 1e3 < file.size) {\n              this.fail(this.t(\"invalidSize\", this.maxSize));\n              return;\n            }\n            if (this.allow && !match$1(this.allow, file.name)) {\n              this.fail(this.t(\"invalidName\", this.allow));\n              return;\n            }\n            if (this.mime && !match$1(this.mime, file.type)) {\n              this.fail(this.t(\"invalidMime\", this.mime));\n              return;\n            }\n          }\n          if (!this.multiple) {\n            files = files.slice(0, 1);\n          }\n          this.beforeAll(this, files);\n          const chunks = chunk(files, this.concurrent);\n          const upload = async (files2) => {\n            const data = new FormData();\n            files2.forEach((file) => data.append(this.name, file));\n            for (const key in this.params) {\n              data.append(key, this.params[key]);\n            }\n            try {\n              const xhr = await ajax(this.url, {\n                data,\n                method: this.method,\n                responseType: this.type,\n                beforeSend: (env) => {\n                  const { xhr: xhr2 } = env;\n                  on(xhr2.upload, \"progress\", this.progress);\n                  for (const type of [\"loadStart\", \"load\", \"loadEnd\", \"abort\"]) {\n                    on(xhr2, type.toLowerCase(), this[type]);\n                  }\n                  return this.beforeSend(env);\n                }\n              });\n              this.complete(xhr);\n              if (chunks.length) {\n                await upload(chunks.shift());\n              } else {\n                this.completeAll(xhr);\n              }\n            } catch (e) {\n              this.error(e);\n            }\n          };\n          await upload(chunks.shift());\n        }\n      }\n    };\n    function match$1(pattern, path) {\n      return path.match(\n        new RegExp(\n          `^${pattern.replace(/\\//g, \"\\\\/\").replace(/\\*\\*/g, \"(\\\\/[^\\\\/]+)*\").replace(/\\*/g, \"[^\\\\/]+\").replace(/((?!\\\\))\\?/g, \"$1.\")}$`,\n          \"i\"\n        )\n      );\n    }\n    function chunk(files, size) {\n      const chunks = [];\n      for (let i = 0; i < files.length; i += size) {\n        chunks.push(files.slice(i, i + size));\n      }\n      return chunks;\n    }\n    function stop(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    function ajax(url, options) {\n      const env = {\n        data: null,\n        method: \"GET\",\n        headers: {},\n        xhr: new XMLHttpRequest(),\n        beforeSend: noop,\n        responseType: \"\",\n        ...options\n      };\n      return Promise.resolve().then(() => env.beforeSend(env)).then(() => send(url, env));\n    }\n    function send(url, env) {\n      return new Promise((resolve, reject) => {\n        const { xhr } = env;\n        for (const prop in env) {\n          if (prop in xhr) {\n            try {\n              xhr[prop] = env[prop];\n            } catch (e) {\n            }\n          }\n        }\n        xhr.open(env.method.toUpperCase(), url);\n        for (const header in env.headers) {\n          xhr.setRequestHeader(header, env.headers[header]);\n        }\n        on(xhr, \"load\", () => {\n          if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n            resolve(xhr);\n          } else {\n            reject(\n              assign(Error(xhr.statusText), {\n                xhr,\n                status: xhr.status\n              })\n            );\n          }\n        });\n        on(xhr, \"error\", () => reject(assign(Error(\"Network Error\"), { xhr })));\n        on(xhr, \"timeout\", () => reject(assign(Error(\"Network Timeout\"), { xhr })));\n        xhr.send(env.data);\n      });\n    }\n\n    var components$1 = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        Countdown: countdown,\n        Filter: filter,\n        Lightbox: lightbox,\n        LightboxPanel: LightboxPanel,\n        Notification: notification,\n        Parallax: parallax,\n        Slider: slider,\n        SliderParallax: sliderParallax,\n        Slideshow: slideshow,\n        SlideshowParallax: sliderParallax,\n        Sortable: sortable,\n        Tooltip: tooltip,\n        Upload: upload\n    });\n\n    function boot(App) {\n      if (inBrowser && window.MutationObserver) {\n        if (document.body) {\n          requestAnimationFrame(() => init(App));\n        } else {\n          new MutationObserver((records, observer) => {\n            if (document.body) {\n              init(App);\n              observer.disconnect();\n            }\n          }).observe(document.documentElement, { childList: true });\n        }\n      }\n    }\n    function init(App) {\n      trigger(document, \"uikit:init\", App);\n      if (document.body) {\n        apply(document.body, connect);\n      }\n      new MutationObserver((records) => records.forEach(applyChildListMutation)).observe(document, {\n        subtree: true,\n        childList: true\n      });\n      new MutationObserver((records) => records.forEach(applyAttributeMutation)).observe(document, {\n        subtree: true,\n        attributes: true\n      });\n      App._initialized = true;\n    }\n    function applyChildListMutation({ addedNodes, removedNodes }) {\n      for (const node of addedNodes) {\n        apply(node, connect);\n      }\n      for (const node of removedNodes) {\n        apply(node, disconnect);\n      }\n    }\n    function applyAttributeMutation({ target, attributeName }) {\n      var _a;\n      const name = getComponentName(attributeName);\n      if (name) {\n        if (hasAttr(target, attributeName)) {\n          createComponent(name, target);\n          return;\n        }\n        (_a = getComponent(target, name)) == null ? void 0 : _a.$destroy();\n      }\n    }\n    function connect(node) {\n      const components2 = getComponents(node);\n      for (const name in getComponents(node)) {\n        callConnected(components2[name]);\n      }\n      for (const attributeName of node.getAttributeNames()) {\n        const name = getComponentName(attributeName);\n        name && createComponent(name, node);\n      }\n    }\n    function disconnect(node) {\n      const components2 = getComponents(node);\n      for (const name in getComponents(node)) {\n        callDisconnected(components2[name]);\n      }\n    }\n    function getComponentName(attribute) {\n      if (startsWith(attribute, \"data-\")) {\n        attribute = attribute.slice(5);\n      }\n      const cmp = components$2[attribute];\n      return cmp && (isPlainObject(cmp) ? cmp : cmp.options).name;\n    }\n\n    globalApi(App);\n    instanceApi(App);\n\n    var Accordion = {\n      mixins: [Class, Togglable],\n      props: {\n        animation: Boolean,\n        targets: String,\n        active: null,\n        collapsible: Boolean,\n        multiple: Boolean,\n        toggle: String,\n        content: String,\n        offset: Number\n      },\n      data: {\n        targets: \"> *\",\n        active: false,\n        animation: true,\n        collapsible: true,\n        multiple: false,\n        clsOpen: \"uk-open\",\n        toggle: \"> .uk-accordion-title\",\n        content: \"> .uk-accordion-content\",\n        offset: 0\n      },\n      computed: {\n        items: ({ targets }, $el) => $$(targets, $el),\n        toggles({ toggle }) {\n          return this.items.map((item) => $(toggle, item));\n        },\n        contents({ content }) {\n          return this.items.map((item) => {\n            var _a;\n            return ((_a = item._wrapper) == null ? void 0 : _a.firstElementChild) || $(content, item);\n          });\n        }\n      },\n      watch: {\n        items(items, prev) {\n          if (prev || hasClass(items, this.clsOpen)) {\n            return;\n          }\n          const active = this.active !== false && items[Number(this.active)] || !this.collapsible && items[0];\n          if (active) {\n            this.toggle(active, false);\n          }\n        },\n        toggles() {\n          this.$emit();\n        },\n        contents(items) {\n          for (const el of items) {\n            const isOpen = hasClass(\n              this.items.find((item) => item.contains(el)),\n              this.clsOpen\n            );\n            hide(el, !isOpen);\n          }\n          this.$emit();\n        }\n      },\n      observe: lazyload(),\n      events: [\n        {\n          name: \"click keydown\",\n          delegate() {\n            return `${this.targets} ${this.$props.toggle}`;\n          },\n          async handler(e) {\n            var _a;\n            if (e.type === \"keydown\" && e.keyCode !== keyMap.SPACE) {\n              return;\n            }\n            e.preventDefault();\n            (_a = this._off) == null ? void 0 : _a.call(this);\n            this._off = keepScrollPosition(e.target);\n            await this.toggle(index(this.toggles, e.current));\n            this._off();\n          }\n        },\n        {\n          name: \"shown hidden\",\n          self: true,\n          delegate() {\n            return this.targets;\n          },\n          handler() {\n            this.$emit();\n          }\n        }\n      ],\n      update() {\n        const activeItems = filter$1(this.items, `.${this.clsOpen}`);\n        for (const index2 in this.items) {\n          const toggle = this.toggles[index2];\n          const content = this.contents[index2];\n          if (!toggle || !content) {\n            continue;\n          }\n          toggle.id = generateId(this, toggle);\n          content.id = generateId(this, content);\n          const active = includes(activeItems, this.items[index2]);\n          attr(toggle, {\n            role: isTag(toggle, \"a\") ? \"button\" : null,\n            \"aria-controls\": content.id,\n            \"aria-expanded\": active,\n            \"aria-disabled\": !this.collapsible && activeItems.length < 2 && active\n          });\n          attr(content, { role: \"region\", \"aria-labelledby\": toggle.id });\n          if (isTag(content, \"ul\")) {\n            attr(children(content), \"role\", \"presentation\");\n          }\n        }\n      },\n      methods: {\n        toggle(item, animate) {\n          item = this.items[getIndex(item, this.items)];\n          let items = [item];\n          const activeItems = filter$1(this.items, `.${this.clsOpen}`);\n          if (!this.multiple && !includes(activeItems, items[0])) {\n            items = items.concat(activeItems);\n          }\n          if (!this.collapsible && activeItems.length < 2 && includes(activeItems, item)) {\n            return;\n          }\n          return Promise.all(\n            items.map(\n              (el) => this.toggleElement(el, !includes(activeItems, el), (el2, show) => {\n                toggleClass(el2, this.clsOpen, show);\n                if (animate === false || !this.animation) {\n                  hide($(this.content, el2), !show);\n                  return;\n                }\n                return transition(el2, show, this);\n              })\n            )\n          );\n        }\n      }\n    };\n    function hide(el, hide2) {\n      el && (el.hidden = hide2);\n    }\n    async function transition(el, show, { content, duration, velocity, transition: transition2 }) {\n      var _a;\n      content = ((_a = el._wrapper) == null ? void 0 : _a.firstElementChild) || $(content, el);\n      if (!el._wrapper) {\n        el._wrapper = wrapAll(content, \"<div>\");\n      }\n      const wrapper = el._wrapper;\n      css(wrapper, \"overflow\", \"hidden\");\n      const currentHeight = toFloat(css(wrapper, \"height\"));\n      await Transition.cancel(wrapper);\n      hide(content, false);\n      const endHeight = sumBy([\"marginTop\", \"marginBottom\"], (prop) => css(content, prop)) + dimensions$1(content).height;\n      const percent = currentHeight / endHeight;\n      duration = (velocity * endHeight + duration) * (show ? 1 - percent : percent);\n      css(wrapper, \"height\", currentHeight);\n      await Transition.start(wrapper, { height: show ? endHeight : 0 }, duration, transition2);\n      unwrap(content);\n      delete el._wrapper;\n      if (!show) {\n        hide(content, true);\n      }\n    }\n    function keepScrollPosition(el) {\n      const scrollElement = scrollParent(el, true);\n      let frame;\n      (function scroll() {\n        frame = requestAnimationFrame(() => {\n          const { top } = el.getBoundingClientRect();\n          if (top < 0) {\n            scrollElement.scrollTop += top;\n          }\n          scroll();\n        });\n      })();\n      return () => requestAnimationFrame(() => cancelAnimationFrame(frame));\n    }\n\n    var alert = {\n      mixins: [Class, Togglable],\n      args: \"animation\",\n      props: {\n        animation: Boolean,\n        close: String\n      },\n      data: {\n        animation: true,\n        selClose: \".uk-alert-close\",\n        duration: 150\n      },\n      events: {\n        name: \"click\",\n        delegate() {\n          return this.selClose;\n        },\n        handler(e) {\n          e.preventDefault();\n          this.close();\n        }\n      },\n      methods: {\n        async close() {\n          await this.toggleElement(this.$el, false, animate);\n          this.$destroy(true);\n        }\n      }\n    };\n    function animate(el, show, { duration, transition, velocity }) {\n      const height = toFloat(css(el, \"height\"));\n      css(el, \"height\", height);\n      return Transition.start(\n        el,\n        {\n          height: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          borderTop: 0,\n          borderBottom: 0,\n          opacity: 0\n        },\n        velocity * height + duration,\n        transition\n      );\n    }\n\n    var Video = {\n      args: \"autoplay\",\n      props: {\n        automute: Boolean,\n        autoplay: Boolean\n      },\n      data: {\n        automute: false,\n        autoplay: true\n      },\n      connected() {\n        if (this.autoplay === \"inview\" && !hasAttr(this.$el, \"preload\")) {\n          this.$el.preload = \"none\";\n        }\n        if (isTag(this.$el, \"iframe\") && !hasAttr(this.$el, \"allow\")) {\n          this.$el.allow = \"autoplay\";\n        }\n        if (this.automute) {\n          mute(this.$el);\n        }\n      },\n      observe: [\n        intersection({\n          filter: ({ $el, autoplay }) => autoplay && isVideo($el),\n          handler([{ isIntersecting }]) {\n            if (isIntersecting) {\n              play(this.$el);\n            } else {\n              pause(this.$el);\n            }\n          },\n          args: { intersecting: false },\n          options: ({ $el, autoplay }) => ({ root: autoplay === \"inview\" ? null : parent($el) })\n        })\n      ]\n    };\n\n    var cover = {\n      mixins: [Video],\n      props: {\n        width: Number,\n        height: Number\n      },\n      data: {\n        automute: true\n      },\n      events: {\n        \"load loadedmetadata\"() {\n          this.$emit(\"resize\");\n        }\n      },\n      observe: resize({\n        target: ({ $el }) => [getPositionedParent($el) || parent($el)],\n        filter: ({ $el }) => !useObjectFit($el)\n      }),\n      update: {\n        read() {\n          if (useObjectFit(this.$el)) {\n            return;\n          }\n          const { ratio, cover } = Dimensions;\n          const { $el, width, height } = this;\n          let dim = { width, height };\n          if (!width || !height) {\n            const intrinsic = {\n              width: $el.naturalWidth || $el.videoWidth || $el.clientWidth,\n              height: $el.naturalHeight || $el.videoHeight || $el.clientHeight\n            };\n            if (width) {\n              dim = ratio(intrinsic, \"width\", width);\n            } else if (height) {\n              dim = ratio(intrinsic, \"height\", height);\n            } else {\n              dim = intrinsic;\n            }\n          }\n          const { offsetHeight: coverHeight, offsetWidth: coverWidth } = getPositionedParent($el) || parent($el);\n          const coverDim = cover(dim, {\n            width: coverWidth + (coverWidth % 2 ? 1 : 0),\n            height: coverHeight + (coverHeight % 2 ? 1 : 0)\n          });\n          if (!coverDim.width || !coverDim.height) {\n            return false;\n          }\n          return coverDim;\n        },\n        write({ height, width }) {\n          css(this.$el, { height, width });\n        },\n        events: [\"resize\"]\n      }\n    };\n    function getPositionedParent(el) {\n      while (el = parent(el)) {\n        if (css(el, \"position\") !== \"static\") {\n          return el;\n        }\n      }\n    }\n    function useObjectFit(el) {\n      return isTag(el, \"img\", \"video\");\n    }\n\n    let active;\n    var drop = {\n      mixins: [Container, Position, Togglable],\n      args: \"pos\",\n      props: {\n        mode: \"list\",\n        toggle: Boolean,\n        boundary: Boolean,\n        boundaryX: Boolean,\n        boundaryY: Boolean,\n        target: Boolean,\n        targetX: Boolean,\n        targetY: Boolean,\n        stretch: Boolean,\n        delayShow: Number,\n        delayHide: Number,\n        autoUpdate: Boolean,\n        clsDrop: String,\n        animateOut: Boolean,\n        bgScroll: Boolean,\n        closeOnScroll: Boolean\n      },\n      data: {\n        mode: [\"click\", \"hover\"],\n        toggle: \"- *\",\n        boundary: false,\n        boundaryX: false,\n        boundaryY: false,\n        target: false,\n        targetX: false,\n        targetY: false,\n        stretch: false,\n        delayShow: 0,\n        delayHide: 800,\n        autoUpdate: true,\n        clsDrop: false,\n        animateOut: false,\n        bgScroll: true,\n        animation: [\"uk-animation-fade\"],\n        cls: \"uk-open\",\n        container: false,\n        closeOnScroll: false\n      },\n      computed: {\n        boundary({ boundary, boundaryX, boundaryY }, $el) {\n          return [\n            query(boundaryX || boundary, $el) || window,\n            query(boundaryY || boundary, $el) || window\n          ];\n        },\n        target({ target, targetX, targetY }, $el) {\n          targetX || (targetX = target || this.targetEl);\n          targetY || (targetY = target || this.targetEl);\n          return [\n            targetX === true ? window : query(targetX, $el),\n            targetY === true ? window : query(targetY, $el)\n          ];\n        }\n      },\n      created() {\n        this.tracker = new MouseTracker();\n      },\n      beforeConnect() {\n        this.clsDrop = this.$props.clsDrop || `uk-${this.$options.name}`;\n      },\n      connected() {\n        addClass(this.$el, \"uk-drop\", this.clsDrop);\n        if (this.toggle && !this.targetEl) {\n          this.targetEl = createToggleComponent(this);\n        }\n        this._style = pick(this.$el.style, [\"width\", \"height\"]);\n      },\n      disconnected() {\n        if (this.isActive()) {\n          this.hide(false);\n          active = null;\n        }\n        css(this.$el, this._style);\n      },\n      observe: lazyload({\n        target: ({ toggle, $el }) => query(toggle, $el),\n        targets: ({ $el }) => $el\n      }),\n      events: [\n        {\n          name: \"click\",\n          delegate() {\n            return \".uk-drop-close\";\n          },\n          handler(e) {\n            e.preventDefault();\n            this.hide(false);\n          }\n        },\n        {\n          name: \"click\",\n          delegate() {\n            return 'a[href*=\"#\"]';\n          },\n          handler({ defaultPrevented, current }) {\n            const { hash } = current;\n            if (!defaultPrevented && hash && isSameSiteAnchor(current) && !this.$el.contains($(hash))) {\n              this.hide(false);\n            }\n          }\n        },\n        {\n          name: \"beforescroll\",\n          handler() {\n            this.hide(false);\n          }\n        },\n        {\n          name: \"toggle\",\n          self: true,\n          handler(e, toggle) {\n            e.preventDefault();\n            if (this.isToggled()) {\n              this.hide(false);\n            } else {\n              this.show(toggle == null ? void 0 : toggle.$el, false);\n            }\n          }\n        },\n        {\n          name: \"toggleshow\",\n          self: true,\n          handler(e, toggle) {\n            e.preventDefault();\n            this.show(toggle == null ? void 0 : toggle.$el);\n          }\n        },\n        {\n          name: \"togglehide\",\n          self: true,\n          handler(e) {\n            e.preventDefault();\n            if (!matches(this.$el, \":focus,:hover\")) {\n              this.hide();\n            }\n          }\n        },\n        {\n          name: `${pointerEnter} focusin`,\n          filter() {\n            return includes(this.mode, \"hover\");\n          },\n          handler(e) {\n            if (!isTouch(e)) {\n              this.clearTimers();\n            }\n          }\n        },\n        {\n          name: `${pointerLeave} focusout`,\n          filter() {\n            return includes(this.mode, \"hover\");\n          },\n          handler(e) {\n            if (!isTouch(e) && e.relatedTarget) {\n              this.hide();\n            }\n          }\n        },\n        {\n          name: \"toggled\",\n          self: true,\n          handler(e, toggled) {\n            if (toggled) {\n              this.clearTimers();\n              this.position();\n            }\n          }\n        },\n        {\n          name: \"show\",\n          self: true,\n          handler() {\n            active = this;\n            this.tracker.init();\n            attr(this.targetEl, \"aria-expanded\", true);\n            const handlers = [\n              listenForResize(this),\n              listenForEscClose(this),\n              listenForBackgroundClose(this),\n              this.autoUpdate && listenForScroll(this),\n              this.closeOnScroll && listenForScrollClose(this),\n              !this.bgScroll && preventBackgroundScroll(this.$el)\n            ];\n            once(this.$el, \"hide\", () => handlers.forEach((handler) => handler && handler()), {\n              self: true\n            });\n          }\n        },\n        {\n          name: \"beforehide\",\n          self: true,\n          handler() {\n            this.clearTimers();\n          }\n        },\n        {\n          name: \"hide\",\n          handler({ target }) {\n            if (this.$el !== target) {\n              active = active === null && this.$el.contains(target) && this.isToggled() ? this : active;\n              return;\n            }\n            active = this.isActive() ? null : active;\n            this.tracker.cancel();\n            attr(this.targetEl, \"aria-expanded\", null);\n          }\n        }\n      ],\n      update: {\n        write() {\n          if (this.isToggled() && !hasClass(this.$el, this.clsEnter)) {\n            this.position();\n          }\n        }\n      },\n      methods: {\n        show(target = this.targetEl, delay = true) {\n          if (this.isToggled() && target && this.targetEl && target !== this.targetEl) {\n            this.hide(false, false);\n          }\n          this.targetEl = target;\n          this.clearTimers();\n          if (this.isActive()) {\n            return;\n          }\n          if (active) {\n            if (delay && active.isDelaying) {\n              this.showTimer = setTimeout(() => matches(target, \":hover\") && this.show(), 10);\n              return;\n            }\n            let prev;\n            while (active && prev !== active && !active.$el.contains(this.$el)) {\n              prev = active;\n              active.hide(false, false);\n            }\n          }\n          if (this.container && parent(this.$el) !== this.container) {\n            append(this.container, this.$el);\n          }\n          this.showTimer = setTimeout(\n            () => this.toggleElement(this.$el, true),\n            delay && this.delayShow || 0\n          );\n        },\n        hide(delay = true, animate = true) {\n          const hide = () => this.toggleElement(this.$el, false, this.animateOut && animate);\n          this.clearTimers();\n          this.isDelayedHide = delay;\n          this.isDelaying = getPositionedElements(this.$el).some(\n            (el) => this.tracker.movesTo(el)\n          );\n          if (delay && this.isDelaying) {\n            this.hideTimer = setTimeout(this.hide, 50);\n          } else if (delay && this.delayHide) {\n            this.hideTimer = setTimeout(hide, this.delayHide);\n          } else {\n            hide();\n          }\n        },\n        clearTimers() {\n          clearTimeout(this.showTimer);\n          clearTimeout(this.hideTimer);\n          this.showTimer = null;\n          this.hideTimer = null;\n          this.isDelaying = false;\n        },\n        isActive() {\n          return active === this;\n        },\n        position() {\n          removeClass(this.$el, \"uk-drop-stack\");\n          css(this.$el, this._style);\n          this.$el.hidden = true;\n          const viewports = this.target.map((target) => getViewport$1(this.$el, target));\n          const viewportOffset = this.getViewportOffset(this.$el);\n          const dirs = [\n            [0, [\"x\", \"width\", \"left\", \"right\"]],\n            [1, [\"y\", \"height\", \"top\", \"bottom\"]]\n          ];\n          for (const [i, [axis, prop]] of dirs) {\n            if (this.axis !== axis && includes([axis, true], this.stretch)) {\n              css(this.$el, {\n                [prop]: Math.min(\n                  offset(this.boundary[i])[prop],\n                  viewports[i][prop] - 2 * viewportOffset\n                ),\n                [`overflow-${axis}`]: \"auto\"\n              });\n            }\n          }\n          const maxWidth = viewports[0].width - 2 * viewportOffset;\n          this.$el.hidden = false;\n          css(this.$el, \"maxWidth\", \"\");\n          if (this.$el.offsetWidth > maxWidth) {\n            addClass(this.$el, \"uk-drop-stack\");\n          }\n          css(this.$el, \"maxWidth\", maxWidth);\n          this.positionAt(this.$el, this.target, this.boundary);\n          for (const [i, [axis, prop, start, end]] of dirs) {\n            if (this.axis === axis && includes([axis, true], this.stretch)) {\n              const positionOffset = Math.abs(this.getPositionOffset(this.$el));\n              const targetOffset = offset(this.target[i]);\n              const elOffset = offset(this.$el);\n              css(this.$el, {\n                [prop]: (targetOffset[start] > elOffset[start] ? targetOffset[this.inset ? end : start] - Math.max(\n                  offset(this.boundary[i])[start],\n                  viewports[i][start] + viewportOffset\n                ) : Math.min(\n                  offset(this.boundary[i])[end],\n                  viewports[i][end] - viewportOffset\n                ) - targetOffset[this.inset ? start : end]) - positionOffset,\n                [`overflow-${axis}`]: \"auto\"\n              });\n              this.positionAt(this.$el, this.target, this.boundary);\n            }\n          }\n        }\n      }\n    };\n    function getPositionedElements(el) {\n      const result = [];\n      apply(el, (el2) => css(el2, \"position\") !== \"static\" && result.push(el2));\n      return result;\n    }\n    function getViewport$1(el, target) {\n      return offsetViewport(overflowParents(target).find((parent2) => parent2.contains(el)));\n    }\n    function createToggleComponent(drop) {\n      const { $el } = drop.$create(\"toggle\", query(drop.toggle, drop.$el), {\n        target: drop.$el,\n        mode: drop.mode\n      });\n      attr($el, \"aria-haspopup\", true);\n      return $el;\n    }\n    function listenForResize(drop) {\n      const update = () => drop.$emit();\n      const off = [\n        observeViewportResize(update),\n        observeResize(overflowParents(drop.$el).concat(drop.target), update)\n      ];\n      return () => off.map((observer) => observer.disconnect());\n    }\n    function listenForScroll(drop, fn = () => drop.$emit()) {\n      return on([document, ...overflowParents(drop.$el)], \"scroll\", fn, {\n        passive: true\n      });\n    }\n    function listenForEscClose(drop) {\n      return on(document, \"keydown\", (e) => {\n        if (e.keyCode === keyMap.ESC) {\n          drop.hide(false);\n        }\n      });\n    }\n    function listenForScrollClose(drop) {\n      return listenForScroll(drop, () => drop.hide(false));\n    }\n    function listenForBackgroundClose(drop) {\n      return on(document, pointerDown$1, ({ target }) => {\n        if (drop.$el.contains(target)) {\n          return;\n        }\n        once(\n          document,\n          `${pointerUp$1} ${pointerCancel} scroll`,\n          ({ defaultPrevented, type, target: newTarget }) => {\n            if (!defaultPrevented && type === pointerUp$1 && target === newTarget && !(drop.targetEl && within(target, drop.targetEl))) {\n              drop.hide(false);\n            }\n          },\n          true\n        );\n      });\n    }\n\n    var Dropnav = {\n      mixins: [Class, Container],\n      props: {\n        align: String,\n        clsDrop: String,\n        boundary: Boolean,\n        dropbar: Boolean,\n        dropbarAnchor: Boolean,\n        duration: Number,\n        mode: Boolean,\n        offset: Boolean,\n        stretch: Boolean,\n        delayShow: Boolean,\n        delayHide: Boolean,\n        target: Boolean,\n        targetX: Boolean,\n        targetY: Boolean,\n        animation: Boolean,\n        animateOut: Boolean,\n        closeOnScroll: Boolean\n      },\n      data: {\n        align: isRtl ? \"right\" : \"left\",\n        clsDrop: \"uk-dropdown\",\n        clsDropbar: \"uk-dropnav-dropbar\",\n        boundary: true,\n        dropbar: false,\n        dropbarAnchor: false,\n        duration: 200,\n        container: false,\n        selNavItem: \"> li > a, > ul > li > a\"\n      },\n      computed: {\n        dropbarAnchor: ({ dropbarAnchor }, $el) => query(dropbarAnchor, $el) || $el,\n        dropbar({ dropbar }) {\n          if (!dropbar) {\n            return null;\n          }\n          dropbar = this._dropbar || query(dropbar, this.$el) || $(`+ .${this.clsDropbar}`, this.$el);\n          return dropbar ? dropbar : this._dropbar = $(\"<div></div>\");\n        },\n        dropbarOffset() {\n          return 0;\n        },\n        dropContainer(_, $el) {\n          return this.container || $el;\n        },\n        dropdowns({ clsDrop }, $el) {\n          var _a;\n          const dropdowns = $$(`.${clsDrop}`, $el);\n          if (this.dropContainer !== $el) {\n            for (const el of $$(`.${clsDrop}`, this.dropContainer)) {\n              const target = (_a = this.getDropdown(el)) == null ? void 0 : _a.targetEl;\n              if (!includes(dropdowns, el) && target && this.$el.contains(target)) {\n                dropdowns.push(el);\n              }\n            }\n          }\n          return dropdowns;\n        },\n        items({ selNavItem }, $el) {\n          return $$(selNavItem, $el);\n        }\n      },\n      watch: {\n        dropbar(dropbar) {\n          addClass(\n            dropbar,\n            \"uk-dropbar\",\n            \"uk-dropbar-top\",\n            this.clsDropbar,\n            `uk-${this.$options.name}-dropbar`\n          );\n        },\n        dropdowns() {\n          this.initializeDropdowns();\n        }\n      },\n      connected() {\n        this.initializeDropdowns();\n      },\n      disconnected() {\n        remove$1(this._dropbar);\n        delete this._dropbar;\n      },\n      events: [\n        {\n          name: \"mouseover focusin\",\n          delegate() {\n            return this.selNavItem;\n          },\n          handler({ current }) {\n            const active2 = this.getActive();\n            if (active2 && includes(active2.mode, \"hover\") && active2.targetEl && !current.contains(active2.targetEl) && !active2.isDelaying) {\n              active2.hide(false);\n            }\n          }\n        },\n        {\n          name: \"keydown\",\n          self: true,\n          delegate() {\n            return this.selNavItem;\n          },\n          handler(e) {\n            var _a;\n            const { current, keyCode } = e;\n            const active2 = this.getActive();\n            if (keyCode === keyMap.DOWN && (active2 == null ? void 0 : active2.targetEl) === current) {\n              e.preventDefault();\n              (_a = $(selFocusable, active2.$el)) == null ? void 0 : _a.focus();\n            }\n            handleNavItemNavigation(e, this.items, active2);\n          }\n        },\n        {\n          name: \"keydown\",\n          el() {\n            return this.dropContainer;\n          },\n          delegate() {\n            return `.${this.clsDrop}`;\n          },\n          handler(e) {\n            var _a;\n            const { current, keyCode } = e;\n            if (!includes(this.dropdowns, current)) {\n              return;\n            }\n            const active2 = this.getActive();\n            let next = -1;\n            if (keyCode === keyMap.HOME) {\n              next = 0;\n            } else if (keyCode === keyMap.END) {\n              next = \"last\";\n            } else if (keyCode === keyMap.UP) {\n              next = \"previous\";\n            } else if (keyCode === keyMap.DOWN) {\n              next = \"next\";\n            } else if (keyCode === keyMap.ESC) {\n              (_a = active2.targetEl) == null ? void 0 : _a.focus();\n            }\n            if (~next) {\n              e.preventDefault();\n              const elements = $$(selFocusable, current);\n              elements[getIndex(\n                next,\n                elements,\n                findIndex(elements, (el) => matches(el, \":focus\"))\n              )].focus();\n            }\n            handleNavItemNavigation(e, this.items, active2);\n          }\n        },\n        {\n          name: \"mouseleave\",\n          el() {\n            return this.dropbar;\n          },\n          filter() {\n            return this.dropbar;\n          },\n          handler() {\n            const active2 = this.getActive();\n            if (active2 && includes(active2.mode, \"hover\") && !this.dropdowns.some((el) => matches(el, \":hover\"))) {\n              active2.hide();\n            }\n          }\n        },\n        {\n          name: \"beforeshow\",\n          el() {\n            return this.dropContainer;\n          },\n          filter() {\n            return this.dropbar;\n          },\n          handler({ target }) {\n            if (!this.isDropbarDrop(target)) {\n              return;\n            }\n            if (this.dropbar.previousElementSibling !== this.dropbarAnchor) {\n              after(this.dropbarAnchor, this.dropbar);\n            }\n            addClass(target, `${this.clsDrop}-dropbar`);\n          }\n        },\n        {\n          name: \"show\",\n          el() {\n            return this.dropContainer;\n          },\n          filter() {\n            return this.dropbar;\n          },\n          handler({ target }) {\n            if (!this.isDropbarDrop(target)) {\n              return;\n            }\n            const drop = this.getDropdown(target);\n            const adjustHeight = () => {\n              const targetOffsets = parents(target, `.${this.clsDrop}`).concat(target).map((el) => offset(el));\n              const minTop = Math.min(...targetOffsets.map(({ top }) => top));\n              const maxBottom = Math.max(...targetOffsets.map(({ bottom }) => bottom));\n              const dropbarOffset = offset(this.dropbar);\n              css(\n                this.dropbar,\n                \"top\",\n                this.dropbar.offsetTop - (dropbarOffset.top - minTop) - this.dropbarOffset\n              );\n              this.transitionTo(\n                maxBottom - minTop + toFloat(css(target, \"marginBottom\")) + this.dropbarOffset,\n                target\n              );\n            };\n            this._observer = observeResize([drop.$el, ...drop.target], adjustHeight);\n            adjustHeight();\n          }\n        },\n        {\n          name: \"beforehide\",\n          el() {\n            return this.dropContainer;\n          },\n          filter() {\n            return this.dropbar;\n          },\n          handler(e) {\n            const active2 = this.getActive();\n            if (matches(this.dropbar, \":hover\") && active2.$el === e.target && includes(active2.mode, \"hover\") && active2.isDelayedHide && !this.items.some((el) => active2.targetEl !== el && matches(el, \":focus\"))) {\n              e.preventDefault();\n            }\n          }\n        },\n        {\n          name: \"hide\",\n          el() {\n            return this.dropContainer;\n          },\n          filter() {\n            return this.dropbar;\n          },\n          handler({ target }) {\n            var _a;\n            if (!this.isDropbarDrop(target)) {\n              return;\n            }\n            (_a = this._observer) == null ? void 0 : _a.disconnect();\n            const active2 = this.getActive();\n            if (!active2 || active2.$el === target) {\n              this.transitionTo(0);\n            }\n          }\n        }\n      ],\n      methods: {\n        getActive() {\n          var _a;\n          return includes(this.dropdowns, (_a = active) == null ? void 0 : _a.$el) && active;\n        },\n        async transitionTo(newHeight, el) {\n          const { dropbar } = this;\n          const oldHeight = height(dropbar);\n          el = oldHeight < newHeight && el;\n          await Transition.cancel([el, dropbar]);\n          css(el, \"clipPath\", `polygon(0 0,100% 0,100% ${oldHeight}px,0 ${oldHeight}px)`);\n          height(dropbar, oldHeight);\n          await Promise.all([\n            Transition.start(dropbar, { height: newHeight }, this.duration),\n            Transition.start(\n              el,\n              {\n                clipPath: `polygon(0 0,100% 0,100% ${newHeight}px,0 ${newHeight}px)`\n              },\n              this.duration\n            ).finally(() => css(el, { clipPath: \"\" }))\n          ]).catch(noop);\n        },\n        getDropdown(el) {\n          return this.$getComponent(el, \"drop\") || this.$getComponent(el, \"dropdown\");\n        },\n        isDropbarDrop(el) {\n          return this.getDropdown(el) && hasClass(el, this.clsDrop);\n        },\n        initializeDropdowns() {\n          this.$create(\n            \"drop\",\n            this.dropdowns.filter((el) => !this.getDropdown(el)),\n            {\n              ...this.$props,\n              flip: false,\n              shift: true,\n              pos: `bottom-${this.align}`,\n              boundary: this.boundary === true ? this.$el : this.boundary\n            }\n          );\n        }\n      }\n    };\n    function handleNavItemNavigation(e, toggles, active2) {\n      var _a, _b, _c;\n      const { current, keyCode } = e;\n      let next = -1;\n      if (keyCode === keyMap.HOME) {\n        next = 0;\n      } else if (keyCode === keyMap.END) {\n        next = \"last\";\n      } else if (keyCode === keyMap.LEFT) {\n        next = \"previous\";\n      } else if (keyCode === keyMap.RIGHT) {\n        next = \"next\";\n      } else if (keyCode === keyMap.TAB) {\n        (_a = active2.targetEl) == null ? void 0 : _a.focus();\n        (_b = active2.hide) == null ? void 0 : _b.call(active2, false);\n      }\n      if (~next) {\n        e.preventDefault();\n        (_c = active2.hide) == null ? void 0 : _c.call(active2, false);\n        toggles[getIndex(next, toggles, toggles.indexOf(active2.targetEl || current))].focus();\n      }\n    }\n\n    var formCustom = {\n      mixins: [Class],\n      args: \"target\",\n      props: {\n        target: Boolean\n      },\n      data: {\n        target: false\n      },\n      computed: {\n        input: (_, $el) => $(selInput, $el),\n        state() {\n          return this.input.nextElementSibling;\n        },\n        target({ target }, $el) {\n          return target && (target === true && parent(this.input) === $el && this.input.nextElementSibling || $(target, $el));\n        }\n      },\n      update() {\n        var _a;\n        const { target, input } = this;\n        if (!target) {\n          return;\n        }\n        let option;\n        const prop = isInput(target) ? \"value\" : \"textContent\";\n        const prev = target[prop];\n        const value = ((_a = input.files) == null ? void 0 : _a[0]) ? input.files[0].name : matches(input, \"select\") && (option = $$(\"option\", input).filter((el) => el.selected)[0]) ? option.textContent : input.value;\n        if (prev !== value) {\n          target[prop] = value;\n        }\n      },\n      events: [\n        {\n          name: \"change\",\n          handler() {\n            this.$emit();\n          }\n        },\n        {\n          name: \"reset\",\n          el() {\n            return this.$el.closest(\"form\");\n          },\n          handler() {\n            this.$emit();\n          }\n        }\n      ]\n    };\n\n    var grid = {\n      extends: Margin,\n      mixins: [Class],\n      name: \"grid\",\n      props: {\n        masonry: Boolean,\n        parallax: String,\n        parallaxStart: String,\n        parallaxEnd: String,\n        parallaxJustify: Boolean\n      },\n      data: {\n        margin: \"uk-grid-margin\",\n        clsStack: \"uk-grid-stack\",\n        masonry: false,\n        parallax: 0,\n        parallaxStart: 0,\n        parallaxEnd: 0,\n        parallaxJustify: false\n      },\n      connected() {\n        this.masonry && addClass(this.$el, \"uk-flex-top\", \"uk-flex-wrap-top\");\n      },\n      observe: scroll$1({ filter: ({ parallax, parallaxJustify }) => parallax || parallaxJustify }),\n      update: [\n        {\n          write({ rows }) {\n            toggleClass(this.$el, this.clsStack, !rows.some((row) => row.length > 1));\n          },\n          events: [\"resize\"]\n        },\n        {\n          read(data) {\n            const { rows } = data;\n            let { masonry, parallax, parallaxJustify, margin } = this;\n            parallax = Math.max(0, toPx(parallax));\n            if (!(masonry || parallax || parallaxJustify) || positionedAbsolute(rows) || rows[0].some(\n              (el, i) => rows.some((row) => row[i] && row[i].offsetWidth !== el.offsetWidth)\n            )) {\n              return data.translates = data.scrollColumns = false;\n            }\n            let gutter = getGutter(rows, margin);\n            let columns;\n            let translates;\n            if (masonry) {\n              [columns, translates] = applyMasonry(rows, gutter, masonry === \"next\");\n            } else {\n              columns = transpose(rows);\n            }\n            const columnHeights = columns.map(\n              (column) => sumBy(column, \"offsetHeight\") + gutter * (column.length - 1)\n            );\n            const height = Math.max(0, ...columnHeights);\n            let scrollColumns;\n            let parallaxStart;\n            let parallaxEnd;\n            if (parallax || parallaxJustify) {\n              scrollColumns = columnHeights.map(\n                (hgt, i) => parallaxJustify ? height - hgt + parallax : parallax / (i % 2 || 8)\n              );\n              if (!parallaxJustify) {\n                parallax = Math.max(\n                  ...columnHeights.map((hgt, i) => hgt + scrollColumns[i] - height)\n                );\n              }\n              parallaxStart = toPx(this.parallaxStart, \"height\", this.$el, true);\n              parallaxEnd = toPx(this.parallaxEnd, \"height\", this.$el, true);\n            }\n            return {\n              columns,\n              translates,\n              scrollColumns,\n              parallaxStart,\n              parallaxEnd,\n              padding: parallax,\n              height: translates ? height : \"\"\n            };\n          },\n          write({ height, padding }) {\n            css(this.$el, \"paddingBottom\", padding || \"\");\n            height !== false && css(this.$el, \"height\", height);\n          },\n          events: [\"resize\"]\n        },\n        {\n          read({ rows, scrollColumns, parallaxStart, parallaxEnd }) {\n            if (scrollColumns && positionedAbsolute(rows)) {\n              return false;\n            }\n            return {\n              scrolled: scrollColumns ? scrolledOver(this.$el, parallaxStart, parallaxEnd) : false\n            };\n          },\n          write({ columns, scrolled, scrollColumns, translates }) {\n            if (!scrolled && !translates) {\n              return;\n            }\n            columns.forEach(\n              (column, i) => column.forEach((el, j) => {\n                let [x, y] = translates && translates[i][j] || [0, 0];\n                if (scrolled) {\n                  y += scrolled * scrollColumns[i];\n                }\n                css(el, \"transform\", `translate(${x}px, ${y}px)`);\n              })\n            );\n          },\n          events: [\"scroll\", \"resize\"]\n        }\n      ]\n    };\n    function positionedAbsolute(rows) {\n      return rows.flat().some((el) => css(el, \"position\") === \"absolute\");\n    }\n    function applyMasonry(rows, gutter, next) {\n      const columns = [];\n      const translates = [];\n      const columnHeights = Array(rows[0].length).fill(0);\n      let rowHeights = 0;\n      for (let row of rows) {\n        if (isRtl) {\n          row = row.reverse();\n        }\n        let height = 0;\n        for (const j in row) {\n          const { offsetWidth, offsetHeight } = row[j];\n          const index = next ? j : columnHeights.indexOf(Math.min(...columnHeights));\n          push(columns, index, row[j]);\n          push(translates, index, [\n            (index - j) * offsetWidth * (isRtl ? -1 : 1),\n            columnHeights[index] - rowHeights\n          ]);\n          columnHeights[index] += offsetHeight + gutter;\n          height = Math.max(height, offsetHeight);\n        }\n        rowHeights += height + gutter;\n      }\n      return [columns, translates];\n    }\n    function getGutter(rows, cls) {\n      const node = rows.flat().find((el) => hasClass(el, cls));\n      return toFloat(node ? css(node, \"marginTop\") : css(rows[0][0], \"paddingLeft\"));\n    }\n    function transpose(rows) {\n      const columns = [];\n      for (const row of rows) {\n        for (const i in row) {\n          push(columns, i, row[i]);\n        }\n      }\n      return columns;\n    }\n    function push(array, index, value) {\n      if (!array[index]) {\n        array[index] = [];\n      }\n      array[index].push(value);\n    }\n\n    var heightMatch = {\n      args: \"target\",\n      props: {\n        target: String,\n        row: Boolean\n      },\n      data: {\n        target: \"> *\",\n        row: true\n      },\n      computed: {\n        elements: ({ target }, $el) => $$(target, $el)\n      },\n      observe: resize({\n        target: ({ $el, elements }) => elements.reduce((elements2, el) => elements2.concat(el, ...el.children), [$el])\n      }),\n      update: {\n        read() {\n          return {\n            rows: (this.row ? getRows(this.elements) : [this.elements]).map(match)\n          };\n        },\n        write({ rows }) {\n          for (const { heights, elements } of rows) {\n            elements.forEach((el, i) => css(el, \"minHeight\", heights[i]));\n          }\n        },\n        events: [\"resize\"]\n      }\n    };\n    function match(elements) {\n      if (elements.length < 2) {\n        return { heights: [\"\"], elements };\n      }\n      let heights = elements.map(getHeight);\n      const max = Math.max(...heights);\n      return {\n        heights: elements.map((el, i) => heights[i].toFixed(2) === max.toFixed(2) ? \"\" : max),\n        elements\n      };\n    }\n    function getHeight(element) {\n      const style = pick(element.style, [\"display\", \"minHeight\"]);\n      if (!isVisible(element)) {\n        css(element, \"display\", \"block\", \"important\");\n      }\n      css(element, \"minHeight\", \"\");\n      const height = dimensions$1(element).height - boxModelAdjust(element, \"height\", \"content-box\");\n      css(element, style);\n      return height;\n    }\n\n    var heightViewport = {\n      props: {\n        expand: Boolean,\n        offsetTop: Boolean,\n        offsetBottom: Boolean,\n        minHeight: Number\n      },\n      data: {\n        expand: false,\n        offsetTop: false,\n        offsetBottom: false,\n        minHeight: 0\n      },\n      // check for offsetTop change\n      observe: [\n        viewport({ filter: ({ expand }) => expand }),\n        resize({ target: ({ $el }) => scrollParents($el) })\n      ],\n      update: {\n        read() {\n          if (!isVisible(this.$el)) {\n            return false;\n          }\n          let minHeight = \"\";\n          const box = boxModelAdjust(this.$el, \"height\", \"content-box\");\n          const { body, scrollingElement } = document;\n          const scrollElement = scrollParent(this.$el);\n          const { height: viewportHeight } = offsetViewport(\n            scrollElement === body ? scrollingElement : scrollElement\n          );\n          const isScrollingElement = scrollingElement === scrollElement || body === scrollElement;\n          minHeight = `calc(${isScrollingElement ? \"100vh\" : `${viewportHeight}px`}`;\n          if (this.expand) {\n            const diff = dimensions$1(scrollElement).height - dimensions$1(this.$el).height;\n            minHeight += ` - ${diff}px`;\n          } else {\n            if (this.offsetTop) {\n              if (isScrollingElement) {\n                const offsetTopEl = this.offsetTop === true ? this.$el : query(this.offsetTop, this.$el);\n                const top = offsetPosition(offsetTopEl)[0] - offsetPosition(scrollElement)[0];\n                minHeight += top > 0 && top < viewportHeight / 2 ? ` - ${top}px` : \"\";\n              } else {\n                minHeight += ` - ${css(scrollElement, \"paddingTop\")}`;\n              }\n            }\n            if (this.offsetBottom === true) {\n              minHeight += ` - ${dimensions$1(this.$el.nextElementSibling).height}px`;\n            } else if (isNumeric(this.offsetBottom)) {\n              minHeight += ` - ${this.offsetBottom}vh`;\n            } else if (this.offsetBottom && endsWith(this.offsetBottom, \"px\")) {\n              minHeight += ` - ${toFloat(this.offsetBottom)}px`;\n            } else if (isString(this.offsetBottom)) {\n              minHeight += ` - ${dimensions$1(query(this.offsetBottom, this.$el)).height}px`;\n            }\n          }\n          minHeight += `${box ? ` - ${box}px` : \"\"})`;\n          return { minHeight };\n        },\n        write({ minHeight }) {\n          css(this.$el, \"minHeight\", `max(${this.minHeight || 0}px, ${minHeight})`);\n        },\n        events: [\"resize\"]\n      }\n    };\n\n    var closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"/></svg>\";\n\n    var closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"/></svg>\";\n\n    var dropParentIcon = \"<svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 12 12\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"1 3.5 6 8.5 11 3.5\\\"/></svg>\";\n\n    var marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"/><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"/></svg>\";\n\n    var navParentIconLarge = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"1 4 7 10 13 4\\\"/></svg>\";\n\n    var navParentIcon = \"<svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 12 12\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"1 3.5 6 8.5 11 3.5\\\"/></svg>\";\n\n    var navbarParentIcon = \"<svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 12 12\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"1 3.5 6 8.5 11 3.5\\\"/></svg>\";\n\n    var navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><style>.uk-navbar-toggle-animate svg&gt;[class*=&quot;line-&quot;]{transition:0.2s ease-in-out;transition-property:transform, opacity;transform-origin:center;opacity:1}.uk-navbar-toggle svg&gt;.line-3{opacity:0}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-3{opacity:1}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-2{transform:rotate(45deg)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-3{transform:rotate(-45deg)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-1,.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-4{opacity:0}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-1{transform:translateY(6px) scaleX(0)}.uk-navbar-toggle-animate[aria-expanded=&quot;true&quot;] svg&gt;.line-4{transform:translateY(-6px) scaleX(0)}</style><rect class=\\\"line-1\\\" y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect class=\\\"line-2\\\" y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect class=\\\"line-3\\\" y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect class=\\\"line-4\\\" y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"/></svg>\";\n\n    var overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"/><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"/></svg>\";\n\n    var paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"/></svg>\";\n\n    var paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"/></svg>\";\n\n    var searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\";\n\n    var searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"/></svg>\";\n\n    var searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\n\n    var slidenavNextLarge = \"<svg width=\\\"25\\\" height=\\\"40\\\" viewBox=\\\"0 0 25 40\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5\\\"/></svg>\";\n\n    var slidenavNext = \"<svg width=\\\"14\\\" height=\\\"24\\\" viewBox=\\\"0 0 14 24\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1\\\"/></svg>\";\n\n    var slidenavPreviousLarge = \"<svg width=\\\"25\\\" height=\\\"40\\\" viewBox=\\\"0 0 25 40\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547\\\"/></svg>\";\n\n    var slidenavPrevious = \"<svg width=\\\"14\\\" height=\\\"24\\\" viewBox=\\\"0 0 14 24\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23\\\"/></svg>\";\n\n    var spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"/></svg>\";\n\n    var totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9\\\"/></svg>\";\n\n    var Svg = {\n      args: \"src\",\n      props: {\n        width: Number,\n        height: Number,\n        ratio: Number\n      },\n      data: {\n        ratio: 1\n      },\n      connected() {\n        this.svg = this.getSvg().then((el) => {\n          if (!this._connected) {\n            return;\n          }\n          const svg = insertSVG(el, this.$el);\n          if (this.svgEl && svg !== this.svgEl) {\n            remove$1(this.svgEl);\n          }\n          applyWidthAndHeight.call(this, svg, el);\n          return this.svgEl = svg;\n        }, noop);\n      },\n      disconnected() {\n        this.svg.then((svg) => {\n          if (this._connected) {\n            return;\n          }\n          if (isVoidElement(this.$el)) {\n            this.$el.hidden = false;\n          }\n          remove$1(svg);\n          this.svgEl = null;\n        });\n        this.svg = null;\n      },\n      methods: {\n        async getSvg() {\n        }\n      }\n    };\n    function insertSVG(el, root) {\n      if (isVoidElement(root) || isTag(root, \"canvas\")) {\n        root.hidden = true;\n        const next = root.nextElementSibling;\n        return equals(el, next) ? next : after(root, el);\n      }\n      const last = root.lastElementChild;\n      return equals(el, last) ? last : append(root, el);\n    }\n    function equals(el, other) {\n      return isTag(el, \"svg\") && isTag(other, \"svg\") && el.innerHTML === other.innerHTML;\n    }\n    function applyWidthAndHeight(el, ref) {\n      const props = [\"width\", \"height\"];\n      let dimensions = props.map((prop) => this[prop]);\n      if (!dimensions.some((val) => val)) {\n        dimensions = props.map((prop) => attr(ref, prop));\n      }\n      const viewBox = attr(ref, \"viewBox\");\n      if (viewBox && !dimensions.some((val) => val)) {\n        dimensions = viewBox.split(\" \").slice(2);\n      }\n      dimensions.forEach((val, i) => attr(el, props[i], toFloat(val) * this.ratio || null));\n    }\n\n    const icons = {\n      spinner,\n      totop,\n      marker,\n      \"close-icon\": closeIcon,\n      \"close-large\": closeLarge,\n      \"drop-parent-icon\": dropParentIcon,\n      \"nav-parent-icon\": navParentIcon,\n      \"nav-parent-icon-large\": navParentIconLarge,\n      \"navbar-parent-icon\": navbarParentIcon,\n      \"navbar-toggle-icon\": navbarToggleIcon,\n      \"overlay-icon\": overlayIcon,\n      \"pagination-next\": paginationNext,\n      \"pagination-previous\": paginationPrevious,\n      \"search-icon\": searchIcon,\n      \"search-large\": searchLarge,\n      \"search-navbar\": searchNavbar,\n      \"slidenav-next\": slidenavNext,\n      \"slidenav-next-large\": slidenavNextLarge,\n      \"slidenav-previous\": slidenavPrevious,\n      \"slidenav-previous-large\": slidenavPreviousLarge\n    };\n    const Icon = {\n      install: install$1,\n      mixins: [Svg],\n      args: \"icon\",\n      props: { icon: String },\n      isIcon: true,\n      beforeConnect() {\n        addClass(this.$el, \"uk-icon\");\n      },\n      methods: {\n        async getSvg() {\n          const icon = getIcon(this.icon);\n          if (!icon) {\n            throw \"Icon not found.\";\n          }\n          return icon;\n        }\n      }\n    };\n    const IconComponent = {\n      args: false,\n      extends: Icon,\n      data: (vm) => ({\n        icon: hyphenate(vm.constructor.options.name)\n      }),\n      beforeConnect() {\n        addClass(this.$el, this.$options.id);\n      }\n    };\n    const NavParentIcon = {\n      extends: IconComponent,\n      beforeConnect() {\n        const icon = this.$props.icon;\n        this.icon = this.$el.closest(\".uk-nav-primary\") ? `${icon}-large` : icon;\n      }\n    };\n    const Search = {\n      extends: IconComponent,\n      mixins: [I18n],\n      i18n: { toggle: \"Open Search\", submit: \"Submit Search\" },\n      beforeConnect() {\n        this.icon = hasClass(this.$el, \"uk-search-icon\") && parents(this.$el, \".uk-search-large\").length ? \"search-large\" : parents(this.$el, \".uk-search-navbar\").length ? \"search-navbar\" : this.$props.icon;\n        if (hasAttr(this.$el, \"aria-label\")) {\n          return;\n        }\n        if (hasClass(this.$el, \"uk-search-toggle\") || hasClass(this.$el, \"uk-navbar-toggle\")) {\n          const label = this.t(\"toggle\");\n          attr(this.$el, \"aria-label\", label);\n        } else {\n          const button = this.$el.closest(\"a,button\");\n          if (button) {\n            const label = this.t(\"submit\");\n            attr(button, \"aria-label\", label);\n          }\n        }\n      }\n    };\n    const Spinner = {\n      extends: IconComponent,\n      beforeConnect() {\n        attr(this.$el, \"role\", \"status\");\n      },\n      methods: {\n        async getSvg() {\n          const icon = await Icon.methods.getSvg.call(this);\n          if (this.ratio !== 1) {\n            css($(\"circle\", icon), \"strokeWidth\", 1 / this.ratio);\n          }\n          return icon;\n        }\n      }\n    };\n    const ButtonComponent = {\n      extends: IconComponent,\n      mixins: [I18n],\n      beforeConnect() {\n        const button = this.$el.closest(\"a,button\");\n        attr(button, \"role\", this.role !== null && isTag(button, \"a\") ? \"button\" : this.role);\n        const label = this.t(\"label\");\n        if (label && !hasAttr(button, \"aria-label\")) {\n          attr(button, \"aria-label\", label);\n        }\n      }\n    };\n    const Slidenav = {\n      extends: ButtonComponent,\n      beforeConnect() {\n        addClass(this.$el, \"uk-slidenav\");\n        const icon = this.$props.icon;\n        this.icon = hasClass(this.$el, \"uk-slidenav-large\") ? `${icon}-large` : icon;\n      }\n    };\n    const NavbarToggleIcon = {\n      extends: ButtonComponent,\n      i18n: { label: \"Open menu\" }\n    };\n    const Close = {\n      extends: ButtonComponent,\n      i18n: { label: \"Close\" },\n      beforeConnect() {\n        this.icon = `close-${hasClass(this.$el, \"uk-close-large\") ? \"large\" : \"icon\"}`;\n      }\n    };\n    const Marker = {\n      extends: ButtonComponent,\n      i18n: { label: \"Open\" }\n    };\n    const Totop = {\n      extends: ButtonComponent,\n      i18n: { label: \"Back to top\" }\n    };\n    const PaginationNext = {\n      extends: ButtonComponent,\n      i18n: { label: \"Next page\" },\n      data: { role: null }\n    };\n    const PaginationPrevious = {\n      extends: ButtonComponent,\n      i18n: { label: \"Previous page\" },\n      data: { role: null }\n    };\n    const parsed = {};\n    function install$1(UIkit) {\n      UIkit.icon.add = (name, svg) => {\n        const added = isString(name) ? { [name]: svg } : name;\n        each(added, (svg2, name2) => {\n          icons[name2] = svg2;\n          delete parsed[name2];\n        });\n        if (UIkit._initialized) {\n          apply(\n            document.body,\n            (el) => each(UIkit.getComponents(el), (cmp) => {\n              cmp.$options.isIcon && cmp.icon in added && cmp.$reset();\n            })\n          );\n        }\n      };\n    }\n    function getIcon(icon) {\n      if (!icons[icon]) {\n        return null;\n      }\n      if (!parsed[icon]) {\n        parsed[icon] = $((icons[applyRtl(icon)] || icons[icon]).trim());\n      }\n      return parsed[icon].cloneNode(true);\n    }\n    function applyRtl(icon) {\n      return isRtl ? swap(swap(icon, \"left\", \"right\"), \"previous\", \"next\") : icon;\n    }\n\n    const nativeLazyLoad = inBrowser && \"loading\" in HTMLImageElement.prototype;\n    var img = {\n      args: \"dataSrc\",\n      props: {\n        dataSrc: String,\n        sources: String,\n        margin: String,\n        target: String,\n        loading: String\n      },\n      data: {\n        dataSrc: \"\",\n        sources: false,\n        margin: \"50%\",\n        target: false,\n        loading: \"lazy\"\n      },\n      connected() {\n        if (this.loading !== \"lazy\") {\n          this.load();\n          return;\n        }\n        if (nativeLazyLoad && isImg(this.$el)) {\n          this.$el.loading = \"lazy\";\n          setSrcAttrs(this.$el);\n        }\n        ensureSrcAttribute(this.$el);\n      },\n      disconnected() {\n        if (this.img) {\n          this.img.onload = \"\";\n        }\n        delete this.img;\n      },\n      observe: intersection({\n        target: ({ $el, $props }) => [$el, ...queryAll($props.target, $el)],\n        handler(entries, observer) {\n          this.load();\n          observer.disconnect();\n        },\n        options: ({ margin }) => ({ rootMargin: margin }),\n        filter: ({ loading }) => loading === \"lazy\"\n      }),\n      methods: {\n        load() {\n          if (this.img) {\n            return this.img;\n          }\n          const image = isImg(this.$el) ? this.$el : getImageFromElement(this.$el, this.dataSrc, this.sources);\n          removeAttr(image, \"loading\");\n          setSrcAttrs(this.$el, image.currentSrc);\n          return this.img = image;\n        }\n      }\n    };\n    function setSrcAttrs(el, src) {\n      if (isImg(el)) {\n        const parentNode = parent(el);\n        const elements = isTag(parentNode, \"picture\") ? children(parentNode) : [el];\n        elements.forEach((el2) => setSourceProps(el2, el2));\n      } else if (src) {\n        const change = !includes(el.style.backgroundImage, src);\n        if (change) {\n          css(el, \"backgroundImage\", `url(${escape(src)})`);\n          trigger(el, createEvent(\"load\", false));\n        }\n      }\n    }\n    const srcProps = [\"data-src\", \"data-srcset\", \"sizes\"];\n    function setSourceProps(sourceEl, targetEl) {\n      for (const prop of srcProps) {\n        const value = data(sourceEl, prop);\n        if (value) {\n          attr(targetEl, prop.replace(/^(data-)+/, \"\"), value);\n        }\n      }\n    }\n    function getImageFromElement(el, src, sources) {\n      const img = new Image();\n      wrapInPicture(img, sources);\n      setSourceProps(el, img);\n      img.onload = () => {\n        setSrcAttrs(el, img.currentSrc);\n      };\n      attr(img, \"src\", src);\n      return img;\n    }\n    function wrapInPicture(img, sources) {\n      sources = parseSources(sources);\n      if (sources.length) {\n        const picture = fragment(\"<picture>\");\n        for (const attrs of sources) {\n          const source = fragment(\"<source>\");\n          attr(source, attrs);\n          append(picture, source);\n        }\n        append(picture, img);\n      }\n    }\n    function parseSources(sources) {\n      if (!sources) {\n        return [];\n      }\n      if (startsWith(sources, \"[\")) {\n        try {\n          sources = JSON.parse(sources);\n        } catch (e) {\n          sources = [];\n        }\n      } else {\n        sources = parseOptions(sources);\n      }\n      if (!isArray(sources)) {\n        sources = [sources];\n      }\n      return sources.filter((source) => !isEmpty(source));\n    }\n    function ensureSrcAttribute(el) {\n      if (isImg(el) && !hasAttr(el, \"src\")) {\n        attr(el, \"src\", 'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>');\n      }\n    }\n    function isImg(el) {\n      return isTag(el, \"img\");\n    }\n\n    var leader = {\n      mixins: [Class, Media],\n      props: {\n        fill: String\n      },\n      data: {\n        fill: \"\",\n        clsWrapper: \"uk-leader-fill\",\n        clsHide: \"uk-leader-hide\",\n        attrFill: \"data-fill\"\n      },\n      computed: {\n        fill: ({ fill }, $el) => fill || css($el, \"--uk-leader-fill-content\")\n      },\n      connected() {\n        [this.wrapper] = wrapInner(this.$el, `<span class=\"${this.clsWrapper}\">`);\n      },\n      disconnected() {\n        unwrap(this.wrapper.childNodes);\n      },\n      observe: resize(),\n      update: {\n        read() {\n          const width = Math.trunc(this.$el.offsetWidth / 2);\n          return {\n            width,\n            fill: this.fill,\n            hide: !this.matchMedia\n          };\n        },\n        write({ width, fill, hide }) {\n          toggleClass(this.wrapper, this.clsHide, hide);\n          attr(this.wrapper, this.attrFill, new Array(width).join(fill));\n        },\n        events: [\"resize\"]\n      }\n    };\n\n    var modal = {\n      install,\n      mixins: [Modal],\n      data: {\n        clsPage: \"uk-modal-page\",\n        selPanel: \".uk-modal-dialog\",\n        selClose: \".uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full\"\n      },\n      events: [\n        {\n          name: \"show\",\n          self: true,\n          handler() {\n            if (hasClass(this.panel, \"uk-margin-auto-vertical\")) {\n              addClass(this.$el, \"uk-flex\");\n            } else {\n              css(this.$el, \"display\", \"block\");\n            }\n            height(this.$el);\n          }\n        },\n        {\n          name: \"hidden\",\n          self: true,\n          handler() {\n            css(this.$el, \"display\", \"\");\n            removeClass(this.$el, \"uk-flex\");\n          }\n        }\n      ]\n    };\n    function install({ modal }) {\n      modal.dialog = function(content, options) {\n        const dialog = modal(\n          `<div class=\"uk-modal\"> <div class=\"uk-modal-dialog\">${content}</div> </div>`,\n          { stack: true, role: \"alertdialog\", ...options }\n        );\n        dialog.show();\n        on(\n          dialog.$el,\n          \"hidden\",\n          async () => {\n            await Promise.resolve();\n            dialog.$destroy(true);\n          },\n          { self: true }\n        );\n        return dialog;\n      };\n      modal.alert = function(message, options) {\n        return openDialog(\n          ({ i18n }) => `<div class=\"uk-modal-body\">${isString(message) ? message : html(message)}</div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-primary uk-modal-close\" autofocus>${i18n.ok}</button> </div>`,\n          options\n        );\n      };\n      modal.confirm = function(message, options) {\n        return openDialog(\n          ({ i18n }) => `<form> <div class=\"uk-modal-body\">${isString(message) ? message : html(message)}</div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">${i18n.cancel}</button> <button class=\"uk-button uk-button-primary\" autofocus>${i18n.ok}</button> </div> </form>`,\n          options,\n          () => Promise.reject()\n        );\n      };\n      modal.prompt = function(message, value, options) {\n        const promise = openDialog(\n          ({ i18n }) => `<form class=\"uk-form-stacked\"> <div class=\"uk-modal-body\"> <label>${isString(message) ? message : html(message)}</label> <input class=\"uk-input\" value=\"${value || \"\"}\" autofocus> </div> <div class=\"uk-modal-footer uk-text-right\"> <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">${i18n.cancel}</button> <button class=\"uk-button uk-button-primary\">${i18n.ok}</button> </div> </form>`,\n          options,\n          () => null,\n          () => input.value\n        );\n        const { $el } = promise.dialog;\n        const input = $(\"input\", $el);\n        on($el, \"show\", () => input.select());\n        return promise;\n      };\n      modal.i18n = {\n        ok: \"Ok\",\n        cancel: \"Cancel\"\n      };\n      function openDialog(tmpl, options, hideFn = noop, submitFn = noop) {\n        options = {\n          bgClose: false,\n          escClose: true,\n          ...options,\n          i18n: { ...modal.i18n, ...options == null ? void 0 : options.i18n }\n        };\n        const dialog = modal.dialog(tmpl(options), options);\n        return assign(\n          new Promise((resolve) => {\n            const off = on(dialog.$el, \"hide\", () => resolve(hideFn()));\n            on(dialog.$el, \"submit\", \"form\", (e) => {\n              e.preventDefault();\n              resolve(submitFn(dialog));\n              off();\n              dialog.hide();\n            });\n          }),\n          { dialog }\n        );\n      }\n    }\n\n    var nav = {\n      extends: Accordion,\n      data: {\n        targets: \"> .uk-parent\",\n        toggle: \"> a\",\n        content: \"> ul\"\n      }\n    };\n\n    var navbar = {\n      extends: Dropnav,\n      props: {\n        dropbarTransparentMode: Boolean\n      },\n      data: {\n        clsDrop: \"uk-navbar-dropdown\",\n        selNavItem: \".uk-navbar-nav > li > a,a.uk-navbar-item,button.uk-navbar-item,.uk-navbar-item a,.uk-navbar-item button,.uk-navbar-toggle\",\n        // Simplify with :where() selector once browser target is Safari 14+\n        selTransparentTarget: '[class*=\"uk-section\"]',\n        dropbarTransparentMode: false\n      },\n      computed: {\n        navbarContainer: (_, $el) => $el.closest(\".uk-navbar-container\"),\n        dropbarOffset: ({ dropbarTransparentMode }, $el) => dropbarTransparentMode === \"behind\" ? $el.offsetHeight : 0\n      },\n      watch: {\n        items() {\n          const justify = hasClass(this.$el, \"uk-navbar-justify\");\n          for (const container of $$(\n            \".uk-navbar-nav, .uk-navbar-left, .uk-navbar-right\",\n            this.$el\n          )) {\n            css(\n              container,\n              \"flexGrow\",\n              justify ? $$(\n                \".uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle\",\n                container\n              ).length : \"\"\n            );\n          }\n        }\n      },\n      disconnect() {\n        var _a;\n        (_a = this._colorListener) == null ? void 0 : _a.call(this);\n      },\n      observe: [\n        mutation({\n          target: ({ navbarContainer }) => navbarContainer,\n          handler: \"registerColorListener\",\n          options: { attributes: true, attributeFilter: [\"class\"], attributeOldValue: true }\n        }),\n        intersection({\n          handler(records) {\n            this._isIntersecting = records[0].isIntersecting;\n            this.registerColorListener();\n          },\n          args: { intersecting: false }\n        })\n      ],\n      events: [\n        {\n          name: \"show\",\n          el() {\n            return this.dropContainer;\n          },\n          handler({ target }) {\n            const transparentMode = this.getTransparentMode(target);\n            if (!transparentMode || this._mode) {\n              return;\n            }\n            const storePrevColor = () => this._mode = removeClasses(this.navbarContainer, \"uk-light\", \"uk-dark\");\n            if (transparentMode === \"behind\") {\n              const mode = getDropbarBehindColor(this.$el);\n              if (mode) {\n                storePrevColor();\n                addClass(this.navbarContainer, `uk-${mode}`);\n              }\n            }\n            if (transparentMode === \"remove\") {\n              storePrevColor();\n              removeClass(this.navbarContainer, \"uk-navbar-transparent\");\n            }\n          }\n        },\n        {\n          name: \"hide\",\n          el() {\n            return this.dropContainer;\n          },\n          async handler({ target }) {\n            const transparentMode = this.getTransparentMode(target);\n            if (!transparentMode || !this._mode) {\n              return;\n            }\n            await awaitMacroTask();\n            if (this.getActive()) {\n              return;\n            }\n            if (transparentMode === \"behind\") {\n              const mode = getDropbarBehindColor(this.$el);\n              if (mode) {\n                removeClass(this.navbarContainer, `uk-${mode}`);\n              }\n            }\n            addClass(this.navbarContainer, this._mode);\n            if (transparentMode === \"remove\") {\n              addClass(this.navbarContainer, \"uk-navbar-transparent\");\n            }\n            this._mode = null;\n          }\n        }\n      ],\n      methods: {\n        getTransparentMode(el) {\n          if (!this.navbarContainer) {\n            return;\n          }\n          if (this.dropbar && this.isDropbarDrop(el)) {\n            return this.dropbarTransparentMode;\n          }\n          const drop = this.getDropdown(el);\n          if (!drop || !hasClass(el, \"uk-dropbar\")) {\n            return;\n          }\n          return drop.inset ? \"behind\" : \"remove\";\n        },\n        registerColorListener() {\n          const active = this._isIntersecting && hasClass(this.navbarContainer, \"uk-navbar-transparent\") && !isWithinMixBlendMode(this.navbarContainer) && !$$(\".uk-drop\", this.dropContainer).map(this.getDropdown).some(\n            (drop) => drop.isToggled() && (drop.inset || this.getTransparentMode(drop.$el) === \"behind\")\n          );\n          if (this._colorListener) {\n            if (!active) {\n              this._colorListener();\n              this._colorListener = null;\n            }\n            return;\n          }\n          if (!active) {\n            return;\n          }\n          this._colorListener = listenForPositionChange(this.navbarContainer, () => {\n            const { left, top, height } = offset(this.navbarContainer);\n            const startPoint = { x: left, y: Math.max(0, top) + height / 2 };\n            const target = $$(this.selTransparentTarget).find(\n              (target2) => pointInRect(startPoint, offset(target2))\n            );\n            const color = css(target, \"--uk-navbar-color\");\n            if (color) {\n              replaceClass(this.navbarContainer, \"uk-light,uk-dark\", `uk-${color}`);\n            }\n          });\n        }\n      }\n    };\n    function removeClasses(el, ...classes) {\n      for (const cls of classes) {\n        if (hasClass(el, cls)) {\n          removeClass(el, cls);\n          return cls;\n        }\n      }\n    }\n    async function awaitMacroTask() {\n      return new Promise((resolve) => setTimeout(resolve));\n    }\n    function getDropbarBehindColor(el) {\n      return css(el, \"--uk-navbar-dropbar-behind-color\");\n    }\n    function listenForPositionChange(el, handler) {\n      const parent2 = scrollParent(el, true);\n      const scrollEl = parent2 === document.documentElement ? document : parent2;\n      const off = on(scrollEl, \"scroll\", handler, { passive: true });\n      const observer = observeResize([el, parent2], handler);\n      return () => {\n        off();\n        observer.disconnect();\n      };\n    }\n    function isWithinMixBlendMode(el) {\n      do {\n        if (css(el, \"mixBlendMode\") !== \"normal\") {\n          return true;\n        }\n      } while (el = parent(el));\n    }\n\n    var offcanvas = {\n      mixins: [Modal],\n      args: \"mode\",\n      props: {\n        mode: String,\n        flip: Boolean,\n        overlay: Boolean,\n        swiping: Boolean\n      },\n      data: {\n        mode: \"slide\",\n        flip: false,\n        overlay: false,\n        clsPage: \"uk-offcanvas-page\",\n        clsContainer: \"uk-offcanvas-container\",\n        selPanel: \".uk-offcanvas-bar\",\n        clsFlip: \"uk-offcanvas-flip\",\n        clsContainerAnimation: \"uk-offcanvas-container-animation\",\n        clsSidebarAnimation: \"uk-offcanvas-bar-animation\",\n        clsMode: \"uk-offcanvas\",\n        clsOverlay: \"uk-offcanvas-overlay\",\n        selClose: \".uk-offcanvas-close\",\n        container: false,\n        swiping: true\n      },\n      computed: {\n        clsFlip: ({ flip, clsFlip }) => flip ? clsFlip : \"\",\n        clsOverlay: ({ overlay, clsOverlay }) => overlay ? clsOverlay : \"\",\n        clsMode: ({ mode, clsMode }) => `${clsMode}-${mode}`,\n        clsSidebarAnimation: ({ mode, clsSidebarAnimation }) => mode === \"none\" || mode === \"reveal\" ? \"\" : clsSidebarAnimation,\n        clsContainerAnimation: ({ mode, clsContainerAnimation }) => mode !== \"push\" && mode !== \"reveal\" ? \"\" : clsContainerAnimation,\n        transitionElement({ mode }) {\n          return mode === \"reveal\" ? parent(this.panel) : this.panel;\n        }\n      },\n      observe: swipe({ filter: ({ swiping }) => swiping }),\n      update: {\n        read() {\n          if (this.isToggled() && !isVisible(this.$el)) {\n            this.hide();\n          }\n        },\n        events: [\"resize\"]\n      },\n      events: [\n        {\n          name: \"touchmove\",\n          self: true,\n          passive: false,\n          filter() {\n            return this.overlay;\n          },\n          handler(e) {\n            e.cancelable && e.preventDefault();\n          }\n        },\n        {\n          name: \"show\",\n          self: true,\n          handler() {\n            if (this.mode === \"reveal\" && !hasClass(parent(this.panel), this.clsMode)) {\n              wrapAll(this.panel, \"<div>\");\n              addClass(parent(this.panel), this.clsMode);\n            }\n            const { body, scrollingElement } = document;\n            addClass(body, this.clsContainer, this.clsFlip);\n            css(body, \"touch-action\", \"pan-y pinch-zoom\");\n            css(this.$el, \"display\", \"block\");\n            css(this.panel, \"maxWidth\", scrollingElement.clientWidth);\n            addClass(this.$el, this.clsOverlay);\n            addClass(\n              this.panel,\n              this.clsSidebarAnimation,\n              this.mode === \"reveal\" ? \"\" : this.clsMode\n            );\n            height(body);\n            addClass(body, this.clsContainerAnimation);\n            this.clsContainerAnimation && suppressUserScale();\n          }\n        },\n        {\n          name: \"hide\",\n          self: true,\n          handler() {\n            removeClass(document.body, this.clsContainerAnimation);\n            css(document.body, \"touch-action\", \"\");\n          }\n        },\n        {\n          name: \"hidden\",\n          self: true,\n          handler() {\n            this.clsContainerAnimation && resumeUserScale();\n            if (this.mode === \"reveal\") {\n              unwrap(this.panel);\n            }\n            removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\n            removeClass(this.$el, this.clsOverlay);\n            css(this.$el, \"display\", \"\");\n            css(this.panel, \"maxWidth\", \"\");\n            removeClass(document.body, this.clsContainer, this.clsFlip);\n          }\n        },\n        {\n          name: \"swipeLeft swipeRight\",\n          handler(e) {\n            if (this.isToggled() && endsWith(e.type, \"Left\") ^ this.flip) {\n              this.hide();\n            }\n          }\n        }\n      ]\n    };\n    function suppressUserScale() {\n      getViewport().content += \",user-scalable=0\";\n    }\n    function resumeUserScale() {\n      const viewport = getViewport();\n      viewport.content = viewport.content.replace(/,user-scalable=0$/, \"\");\n    }\n    function getViewport() {\n      return $('meta[name=\"viewport\"]', document.head) || append(document.head, '<meta name=\"viewport\">');\n    }\n\n    var overflowAuto = {\n      mixins: [Class],\n      props: {\n        selContainer: String,\n        selContent: String,\n        minHeight: Number\n      },\n      data: {\n        selContainer: \".uk-modal\",\n        selContent: \".uk-modal-dialog\",\n        minHeight: 150\n      },\n      computed: {\n        container: ({ selContainer }, $el) => $el.closest(selContainer),\n        content: ({ selContent }, $el) => $el.closest(selContent)\n      },\n      observe: resize({\n        target: ({ container, content }) => [container, content]\n      }),\n      update: {\n        read() {\n          if (!this.content || !this.container || !isVisible(this.$el)) {\n            return false;\n          }\n          return {\n            max: Math.max(\n              this.minHeight,\n              height(this.container) - (dimensions$1(this.content).height - height(this.$el))\n            )\n          };\n        },\n        write({ max }) {\n          css(this.$el, { minHeight: this.minHeight, maxHeight: max });\n        },\n        events: [\"resize\"]\n      }\n    };\n\n    var responsive = {\n      props: [\"width\", \"height\"],\n      connected() {\n        addClass(this.$el, \"uk-responsive-width\");\n      },\n      observe: resize({\n        target: ({ $el }) => [$el, parent($el)]\n      }),\n      update: {\n        read() {\n          return isVisible(this.$el) && this.width && this.height ? { width: width(parent(this.$el)), height: this.height } : false;\n        },\n        write(dim) {\n          height(\n            this.$el,\n            Dimensions.contain(\n              {\n                height: this.height,\n                width: this.width\n              },\n              dim\n            ).height\n          );\n        },\n        events: [\"resize\"]\n      }\n    };\n\n    var scroll = {\n      props: {\n        offset: Number\n      },\n      data: {\n        offset: 0\n      },\n      connected() {\n        registerClick(this);\n      },\n      disconnected() {\n        unregisterClick(this);\n      },\n      methods: {\n        async scrollTo(el) {\n          el = el && $(el) || document.body;\n          if (trigger(this.$el, \"beforescroll\", [this, el])) {\n            await scrollIntoView(el, { offset: this.offset });\n            trigger(this.$el, \"scrolled\", [this, el]);\n          }\n        }\n      }\n    };\n    const instances = /* @__PURE__ */ new Set();\n    function registerClick(cmp) {\n      if (!instances.size) {\n        on(document, \"click\", clickHandler);\n      }\n      instances.add(cmp);\n    }\n    function unregisterClick(cmp) {\n      instances.delete(cmp);\n      if (!instances.size) {\n        off(document, \"click\", clickHandler);\n      }\n    }\n    function clickHandler(e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n      for (const instance of instances) {\n        if (instance.$el.contains(e.target) && isSameSiteAnchor(instance.$el)) {\n          e.preventDefault();\n          if (window.location.href !== instance.$el.href) {\n            window.history.pushState({}, \"\", instance.$el.href);\n          }\n          instance.scrollTo(getTargetedElement(instance.$el));\n        }\n      }\n    }\n\n    var scrollspy = {\n      args: \"cls\",\n      props: {\n        cls: String,\n        target: String,\n        hidden: Boolean,\n        margin: String,\n        repeat: Boolean,\n        delay: Number\n      },\n      data: () => ({\n        cls: \"\",\n        target: false,\n        hidden: true,\n        margin: \"-1px\",\n        repeat: false,\n        delay: 0,\n        inViewClass: \"uk-scrollspy-inview\"\n      }),\n      computed: {\n        elements: ({ target }, $el) => target ? $$(target, $el) : [$el]\n      },\n      watch: {\n        elements(elements) {\n          if (this.hidden) {\n            css(filter$1(elements, `:not(.${this.inViewClass})`), \"opacity\", 0);\n          }\n        }\n      },\n      connected() {\n        this.elementData = /* @__PURE__ */ new Map();\n      },\n      disconnected() {\n        for (const [el, state] of this.elementData.entries()) {\n          removeClass(el, this.inViewClass, (state == null ? void 0 : state.cls) || \"\");\n        }\n        delete this.elementData;\n      },\n      observe: intersection({\n        target: ({ elements }) => elements,\n        handler(records) {\n          const elements = this.elementData;\n          for (const { target: el, isIntersecting } of records) {\n            if (!elements.has(el)) {\n              elements.set(el, {\n                cls: data(el, \"uk-scrollspy-class\") || this.cls\n              });\n            }\n            const state = elements.get(el);\n            if (!this.repeat && state.show) {\n              continue;\n            }\n            state.show = isIntersecting;\n          }\n          this.$emit();\n        },\n        options: ({ margin }) => ({ rootMargin: margin }),\n        args: { intersecting: false }\n      }),\n      update: [\n        {\n          write(data) {\n            for (const [el, state] of this.elementData.entries()) {\n              if (state.show && !state.inview && !state.queued) {\n                state.queued = true;\n                data.promise = (data.promise || Promise.resolve()).then(() => new Promise((resolve) => setTimeout(resolve, this.delay))).then(() => {\n                  this.toggle(el, true);\n                  setTimeout(() => {\n                    state.queued = false;\n                    this.$emit();\n                  }, 300);\n                });\n              } else if (!state.show && state.inview && !state.queued && this.repeat) {\n                this.toggle(el, false);\n              }\n            }\n          }\n        }\n      ],\n      methods: {\n        toggle(el, inview) {\n          var _a;\n          const state = this.elementData.get(el);\n          if (!state) {\n            return;\n          }\n          (_a = state.off) == null ? void 0 : _a.call(state);\n          css(el, \"opacity\", !inview && this.hidden ? 0 : \"\");\n          toggleClass(el, this.inViewClass, inview);\n          toggleClass(el, state.cls);\n          if (/\\buk-animation-/.test(state.cls)) {\n            const removeAnimationClasses = () => removeClasses$1(el, \"uk-animation-[\\\\w-]+\");\n            if (inview) {\n              state.off = once(el, \"animationcancel animationend\", removeAnimationClasses);\n            } else {\n              removeAnimationClasses();\n            }\n          }\n          trigger(el, inview ? \"inview\" : \"outview\");\n          state.inview = inview;\n          this.$update(el);\n        }\n      }\n    };\n\n    var scrollspyNav = {\n      props: {\n        cls: String,\n        closest: Boolean,\n        scroll: Boolean,\n        overflow: Boolean,\n        offset: Number\n      },\n      data: {\n        cls: \"uk-active\",\n        closest: false,\n        scroll: false,\n        overflow: true,\n        offset: 0\n      },\n      computed: {\n        links: (_, $el) => $$('a[href*=\"#\"]', $el).filter((el) => el.hash && isSameSiteAnchor(el)),\n        elements({ closest: selector }) {\n          return this.links.map((el) => el.closest(selector || \"*\"));\n        }\n      },\n      watch: {\n        links(links) {\n          if (this.scroll) {\n            this.$create(\"scroll\", links, { offset: this.offset });\n          }\n        }\n      },\n      observe: [intersection(), scroll$1()],\n      update: [\n        {\n          read() {\n            const targets = this.links.map(getTargetedElement).filter(Boolean);\n            const { length } = targets;\n            if (!length || !isVisible(this.$el)) {\n              return false;\n            }\n            const scrollElement = scrollParent(targets, true);\n            const { scrollTop, scrollHeight } = scrollElement;\n            const viewport = offsetViewport(scrollElement);\n            const max = scrollHeight - viewport.height;\n            let active = false;\n            if (scrollTop === max) {\n              active = length - 1;\n            } else {\n              for (let i = 0; i < targets.length; i++) {\n                const fixedEl = getCoveringElement(targets[i]);\n                const offsetBy = this.offset + (fixedEl ? offset(fixedEl).height : 0);\n                if (offset(targets[i]).top - viewport.top - offsetBy > 0) {\n                  break;\n                }\n                active = +i;\n              }\n              if (active === false && this.overflow) {\n                active = 0;\n              }\n            }\n            return { active };\n          },\n          write({ active }) {\n            const changed = active !== false && !hasClass(this.elements[active], this.cls);\n            this.links.forEach((el) => el.blur());\n            for (let i = 0; i < this.elements.length; i++) {\n              toggleClass(this.elements[i], this.cls, +i === active);\n            }\n            if (changed) {\n              trigger(this.$el, \"active\", [active, this.elements[active]]);\n            }\n          },\n          events: [\"scroll\", \"resize\"]\n        }\n      ]\n    };\n\n    var sticky = {\n      mixins: [Class, Media],\n      props: {\n        position: String,\n        top: null,\n        bottom: null,\n        start: null,\n        end: null,\n        offset: String,\n        overflowFlip: Boolean,\n        animation: String,\n        clsActive: String,\n        clsInactive: String,\n        clsFixed: String,\n        clsBelow: String,\n        selTarget: String,\n        showOnUp: Boolean,\n        targetOffset: Number\n      },\n      data: {\n        position: \"top\",\n        top: false,\n        bottom: false,\n        start: false,\n        end: false,\n        offset: 0,\n        overflowFlip: false,\n        animation: \"\",\n        clsActive: \"uk-active\",\n        clsInactive: \"\",\n        clsFixed: \"uk-sticky-fixed\",\n        clsBelow: \"uk-sticky-below\",\n        selTarget: \"\",\n        showOnUp: false,\n        targetOffset: false\n      },\n      computed: {\n        selTarget: ({ selTarget }, $el) => selTarget && $(selTarget, $el) || $el\n      },\n      connected() {\n        this.start = coerce(this.start || this.top);\n        this.end = coerce(this.end || this.bottom);\n        this.placeholder = $(\"+ .uk-sticky-placeholder\", this.$el) || $('<div class=\"uk-sticky-placeholder\"></div>');\n        this.isFixed = false;\n        this.setActive(false);\n      },\n      beforeDisconnect() {\n        if (this.isFixed) {\n          this.hide();\n          removeClass(this.selTarget, this.clsInactive);\n        }\n        reset(this.$el);\n        remove$1(this.placeholder);\n        this.placeholder = null;\n      },\n      observe: [\n        viewport(),\n        scroll$1({ target: () => document.scrollingElement }),\n        resize({ target: ({ $el }) => [$el, document.scrollingElement] })\n      ],\n      events: [\n        {\n          name: \"load hashchange popstate\",\n          el() {\n            return window;\n          },\n          filter() {\n            return this.targetOffset !== false;\n          },\n          handler() {\n            const { scrollingElement } = document;\n            if (!location.hash || scrollingElement.scrollTop === 0) {\n              return;\n            }\n            setTimeout(() => {\n              const targetOffset = offset($(location.hash));\n              const elOffset = offset(this.$el);\n              if (this.isFixed && intersectRect(targetOffset, elOffset)) {\n                scrollingElement.scrollTop = targetOffset.top - elOffset.height - toPx(this.targetOffset, \"height\", this.placeholder) - toPx(this.offset, \"height\", this.placeholder);\n              }\n            });\n          }\n        },\n        {\n          name: \"transitionstart\",\n          handler() {\n            this.transitionInProgress = once(\n              this.$el,\n              \"transitionend transitioncancel\",\n              () => this.transitionInProgress = null\n            );\n          }\n        }\n      ],\n      update: [\n        {\n          read({ height: height$1, width, margin, sticky }) {\n            this.inactive = !this.matchMedia || !isVisible(this.$el);\n            if (this.inactive) {\n              return;\n            }\n            const hide = this.isFixed && !this.transitionInProgress;\n            if (hide) {\n              preventTransition(this.$el);\n              this.hide();\n            }\n            if (!this.active) {\n              ({ height: height$1, width } = offset(this.$el));\n              margin = css(this.$el, \"margin\");\n            }\n            if (hide) {\n              this.show();\n            }\n            const viewport2 = toPx(\"100vh\", \"height\");\n            const dynamicViewport = height(window);\n            const maxScrollHeight = Math.max(\n              0,\n              document.scrollingElement.scrollHeight - viewport2\n            );\n            let position = this.position;\n            if (this.overflowFlip && height$1 > viewport2) {\n              position = position === \"top\" ? \"bottom\" : \"top\";\n            }\n            const referenceElement = this.isFixed ? this.placeholder : this.$el;\n            let offset$1 = toPx(this.offset, \"height\", sticky ? this.$el : referenceElement);\n            if (position === \"bottom\" && (height$1 < dynamicViewport || this.overflowFlip)) {\n              offset$1 += dynamicViewport - height$1;\n            }\n            const overflow = this.overflowFlip ? 0 : Math.max(0, height$1 + offset$1 - viewport2);\n            const topOffset = offset(referenceElement).top;\n            const elHeight = offset(this.$el).height;\n            const start = (this.start === false ? topOffset : parseProp(this.start, this.$el, topOffset)) - offset$1;\n            const end = this.end === false ? maxScrollHeight : Math.min(\n              maxScrollHeight,\n              parseProp(this.end, this.$el, topOffset + height$1, true) - elHeight - offset$1 + overflow\n            );\n            sticky = maxScrollHeight && !this.showOnUp && start + offset$1 === topOffset && end === Math.min(\n              maxScrollHeight,\n              parseProp(\"!*\", this.$el, 0, true) - elHeight - offset$1 + overflow\n            ) && css(parent(this.$el), \"overflowY\") === \"visible\";\n            return {\n              start,\n              end,\n              offset: offset$1,\n              overflow,\n              topOffset,\n              height: height$1,\n              elHeight,\n              width,\n              margin,\n              top: offsetPosition(referenceElement)[0],\n              sticky\n            };\n          },\n          write({ height, width, margin, offset, sticky }) {\n            if (this.inactive || sticky || !this.isFixed) {\n              reset(this.$el);\n            }\n            if (this.inactive) {\n              return;\n            }\n            if (sticky) {\n              height = width = margin = 0;\n              css(this.$el, { position: \"sticky\", top: offset });\n            }\n            const { placeholder } = this;\n            css(placeholder, { height, width, margin });\n            if (!document.contains(placeholder)) {\n              placeholder.hidden = true;\n            }\n            (sticky ? before : after)(this.$el, placeholder);\n          },\n          events: [\"resize\"]\n        },\n        {\n          read({\n            scroll: prevScroll = 0,\n            dir: prevDir = \"down\",\n            overflow,\n            overflowScroll = 0,\n            start,\n            end\n          }) {\n            const scroll2 = document.scrollingElement.scrollTop;\n            const dir = prevScroll <= scroll2 ? \"down\" : \"up\";\n            return {\n              dir,\n              prevDir,\n              scroll: scroll2,\n              prevScroll,\n              offsetParentTop: offset(\n                (this.isFixed ? this.placeholder : this.$el).offsetParent\n              ).top,\n              overflowScroll: clamp(\n                overflowScroll + clamp(scroll2, start, end) - clamp(prevScroll, start, end),\n                0,\n                overflow\n              )\n            };\n          },\n          write(data, types) {\n            const isScrollUpdate = types.has(\"scroll\");\n            const {\n              initTimestamp = 0,\n              dir,\n              prevDir,\n              scroll: scroll2,\n              prevScroll = 0,\n              top,\n              start,\n              topOffset,\n              height\n            } = data;\n            if (scroll2 < 0 || scroll2 === prevScroll && isScrollUpdate || this.showOnUp && !isScrollUpdate && !this.isFixed) {\n              return;\n            }\n            const now = Date.now();\n            if (now - initTimestamp > 300 || dir !== prevDir) {\n              data.initScroll = scroll2;\n              data.initTimestamp = now;\n            }\n            if (this.showOnUp && !this.isFixed && Math.abs(data.initScroll - scroll2) <= 30 && Math.abs(prevScroll - scroll2) <= 10) {\n              return;\n            }\n            if (this.inactive || scroll2 < start || this.showOnUp && (scroll2 <= start || dir === \"down\" && isScrollUpdate || dir === \"up\" && !this.isFixed && scroll2 <= topOffset + height)) {\n              if (!this.isFixed) {\n                if (Animation.inProgress(this.$el) && top > scroll2) {\n                  Animation.cancel(this.$el);\n                  this.hide();\n                }\n                return;\n              }\n              if (this.animation && scroll2 > topOffset) {\n                if (hasClass(this.$el, \"uk-animation-leave\")) {\n                  return;\n                }\n                Animation.out(this.$el, this.animation).then(() => this.hide(), noop);\n              } else {\n                this.hide();\n              }\n            } else if (this.isFixed) {\n              this.update();\n            } else if (this.animation && scroll2 > topOffset) {\n              this.show();\n              Animation.in(this.$el, this.animation).catch(noop);\n            } else {\n              preventTransition(this.selTarget);\n              this.show();\n            }\n          },\n          events: [\"resize\", \"resizeViewport\", \"scroll\"]\n        }\n      ],\n      methods: {\n        show() {\n          this.isFixed = true;\n          this.update();\n          this.placeholder.hidden = false;\n        },\n        hide() {\n          const { offset, sticky } = this._data;\n          this.setActive(false);\n          removeClass(this.$el, this.clsFixed, this.clsBelow);\n          if (sticky) {\n            css(this.$el, \"top\", offset);\n          } else {\n            css(this.$el, {\n              position: \"\",\n              top: \"\",\n              width: \"\",\n              marginTop: \"\"\n            });\n          }\n          this.placeholder.hidden = true;\n          this.isFixed = false;\n        },\n        update() {\n          let {\n            width,\n            scroll: scroll2 = 0,\n            overflow,\n            overflowScroll = 0,\n            start,\n            end,\n            offset,\n            topOffset,\n            height,\n            elHeight,\n            offsetParentTop,\n            sticky\n          } = this._data;\n          const active = start !== 0 || scroll2 > start;\n          if (!sticky) {\n            let position = \"fixed\";\n            if (scroll2 > end) {\n              offset += end - offsetParentTop + overflowScroll - overflow;\n              position = \"absolute\";\n            }\n            css(this.$el, { position, width, marginTop: 0 }, \"important\");\n          }\n          css(this.$el, \"top\", offset - overflowScroll);\n          this.setActive(active);\n          toggleClass(\n            this.$el,\n            this.clsBelow,\n            scroll2 > topOffset + (sticky ? Math.min(height, elHeight) : height)\n          );\n          addClass(this.$el, this.clsFixed);\n        },\n        setActive(active) {\n          const prev = this.active;\n          this.active = active;\n          if (active) {\n            replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n            prev !== active && trigger(this.$el, \"active\");\n          } else {\n            replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n            prev !== active && trigger(this.$el, \"inactive\");\n          }\n        }\n      }\n    };\n    function parseProp(value, el, propOffset, padding) {\n      if (!value) {\n        return 0;\n      }\n      if (isNumeric(value) || isString(value) && value.match(/^-?\\d/)) {\n        return propOffset + toPx(value, \"height\", el, true);\n      } else {\n        const refElement = value === true ? parent(el) : query(value, el);\n        return offset(refElement).bottom - (padding && (refElement == null ? void 0 : refElement.contains(el)) ? toFloat(css(refElement, \"paddingBottom\")) : 0);\n      }\n    }\n    function coerce(value) {\n      if (value === \"true\") {\n        return true;\n      } else if (value === \"false\") {\n        return false;\n      }\n      return value;\n    }\n    function reset(el) {\n      css(el, { position: \"\", top: \"\", marginTop: \"\", width: \"\" });\n    }\n    function preventTransition(el) {\n      addClass(el, \"uk-transition-disable\");\n      requestAnimationFrame(() => removeClass(el, \"uk-transition-disable\"));\n    }\n\n    var svg = {\n      mixins: [Svg],\n      args: \"src\",\n      props: {\n        src: String,\n        icon: String,\n        attributes: \"list\",\n        strokeAnimation: Boolean\n      },\n      data: {\n        strokeAnimation: false\n      },\n      observe: [\n        mutation({\n          async handler() {\n            const svg = await this.svg;\n            if (svg) {\n              applyAttributes.call(this, svg);\n            }\n          },\n          options: {\n            attributes: true,\n            attributeFilter: [\"id\", \"class\", \"style\"]\n          }\n        })\n      ],\n      async connected() {\n        if (includes(this.src, \"#\")) {\n          [this.src, this.icon] = this.src.split(\"#\");\n        }\n        const svg = await this.svg;\n        if (svg) {\n          applyAttributes.call(this, svg);\n          if (this.strokeAnimation) {\n            applyAnimation(svg);\n          }\n        }\n      },\n      methods: {\n        async getSvg() {\n          if (isTag(this.$el, \"img\") && !this.$el.complete && this.$el.loading === \"lazy\") {\n            return new Promise(\n              (resolve) => once(this.$el, \"load\", () => resolve(this.getSvg()))\n            );\n          }\n          return parseSVG(await loadSVG(this.src), this.icon) || Promise.reject(\"SVG not found.\");\n        }\n      }\n    };\n    function applyAttributes(el) {\n      const { $el } = this;\n      addClass(el, attr($el, \"class\"), \"uk-svg\");\n      for (let i = 0; i < $el.style.length; i++) {\n        const prop = $el.style[i];\n        css(el, prop, css($el, prop));\n      }\n      for (const attribute in this.attributes) {\n        const [prop, value] = this.attributes[attribute].split(\":\", 2);\n        attr(el, prop, value);\n      }\n      if (!this.$el.id) {\n        removeAttr(el, \"id\");\n      }\n    }\n    const loadSVG = memoize(async (src) => {\n      if (src) {\n        if (startsWith(src, \"data:\")) {\n          return decodeURIComponent(src.split(\",\")[1]);\n        } else {\n          return (await fetch(src)).text();\n        }\n      } else {\n        return Promise.reject();\n      }\n    });\n    function parseSVG(svg, icon) {\n      if (icon && includes(svg, \"<symbol\")) {\n        svg = parseSymbols(svg)[icon] || svg;\n      }\n      svg = $(svg.substr(svg.indexOf(\"<svg\")));\n      return (svg == null ? void 0 : svg.hasChildNodes()) && svg;\n    }\n    const symbolRe = /<symbol([^]*?id=(['\"])(.+?)\\2[^]*?<\\/)symbol>/g;\n    const parseSymbols = memoize(function(svg) {\n      const symbols = {};\n      symbolRe.lastIndex = 0;\n      let match;\n      while (match = symbolRe.exec(svg)) {\n        symbols[match[3]] = `<svg ${match[1]}svg>`;\n      }\n      return symbols;\n    });\n    function applyAnimation(el) {\n      const length = getMaxPathLength(el);\n      if (length) {\n        css(el, \"--uk-animation-stroke\", length);\n      }\n    }\n\n    const selDisabled = \".uk-disabled *, .uk-disabled, [disabled]\";\n    var Switcher = {\n      mixins: [Togglable],\n      args: \"connect\",\n      props: {\n        connect: String,\n        toggle: String,\n        itemNav: String,\n        active: Number,\n        followFocus: Boolean,\n        swiping: Boolean\n      },\n      data: {\n        connect: \"~.uk-switcher\",\n        toggle: \"> * > :first-child\",\n        itemNav: false,\n        active: 0,\n        cls: \"uk-active\",\n        attrItem: \"uk-switcher-item\",\n        selVertical: \".uk-nav\",\n        followFocus: false,\n        swiping: true\n      },\n      computed: {\n        connects: ({ connect }, $el) => queryAll(connect, $el),\n        connectChildren() {\n          return this.connects.map((el) => children(el)).flat();\n        },\n        toggles: ({ toggle }, $el) => $$(toggle, $el),\n        children(_, $el) {\n          return children($el).filter(\n            (child) => this.toggles.some((toggle) => child.contains(toggle))\n          );\n        }\n      },\n      watch: {\n        connects(connects) {\n          if (this.swiping) {\n            css(connects, \"touchAction\", \"pan-y pinch-zoom\");\n          }\n          this.$emit();\n        },\n        connectChildren() {\n          let index = Math.max(0, this.index());\n          for (const el of this.connects) {\n            children(el).forEach((child, i) => toggleClass(child, this.cls, i === index));\n          }\n          this.$emit();\n        },\n        toggles(toggles) {\n          this.$emit();\n          const active = this.index();\n          this.show(~active ? active : toggles[this.active] || toggles[0]);\n        }\n      },\n      connected() {\n        attr(this.$el, \"role\", \"tablist\");\n      },\n      observe: [\n        lazyload({ targets: ({ connectChildren }) => connectChildren }),\n        swipe({ target: ({ connects }) => connects, filter: ({ swiping }) => swiping })\n      ],\n      events: [\n        {\n          name: \"click keydown\",\n          delegate() {\n            return this.toggle;\n          },\n          handler(e) {\n            if (!matches(e.current, selDisabled) && (e.type === \"click\" || e.keyCode === keyMap.SPACE)) {\n              e.preventDefault();\n              this.show(e.current);\n            }\n          }\n        },\n        {\n          name: \"keydown\",\n          delegate() {\n            return this.toggle;\n          },\n          handler(e) {\n            const { current, keyCode } = e;\n            const isVertical = matches(this.$el, this.selVertical);\n            let i = keyCode === keyMap.HOME ? 0 : keyCode === keyMap.END ? \"last\" : keyCode === keyMap.LEFT && !isVertical || keyCode === keyMap.UP && isVertical ? \"previous\" : keyCode === keyMap.RIGHT && !isVertical || keyCode === keyMap.DOWN && isVertical ? \"next\" : -1;\n            if (~i) {\n              e.preventDefault();\n              const toggles = this.toggles.filter((el) => !matches(el, selDisabled));\n              const next = toggles[getIndex(i, toggles, toggles.indexOf(current))];\n              next.focus();\n              if (this.followFocus) {\n                this.show(next);\n              }\n            }\n          }\n        },\n        {\n          name: \"click\",\n          el() {\n            return this.connects.concat(this.itemNav ? queryAll(this.itemNav, this.$el) : []);\n          },\n          delegate() {\n            return `[${this.attrItem}],[data-${this.attrItem}]`;\n          },\n          handler(e) {\n            if (e.target.closest(\"a,button\")) {\n              e.preventDefault();\n              this.show(data(e.current, this.attrItem));\n            }\n          }\n        },\n        {\n          name: \"swipeRight swipeLeft\",\n          filter() {\n            return this.swiping;\n          },\n          el() {\n            return this.connects;\n          },\n          handler({ type }) {\n            this.show(endsWith(type, \"Left\") ? \"next\" : \"previous\");\n          }\n        }\n      ],\n      update() {\n        var _a;\n        attr(this.connects, \"role\", \"presentation\");\n        attr(children(this.$el), \"role\", \"presentation\");\n        for (const index in this.toggles) {\n          const toggle = this.toggles[index];\n          const item = (_a = this.connects[0]) == null ? void 0 : _a.children[index];\n          attr(toggle, \"role\", \"tab\");\n          if (!item) {\n            continue;\n          }\n          toggle.id = generateId(this, toggle);\n          item.id = generateId(this, item);\n          attr(toggle, \"aria-controls\", item.id);\n          attr(item, { role: \"tabpanel\", \"aria-labelledby\": toggle.id });\n        }\n        attr(this.$el, \"aria-orientation\", matches(this.$el, this.selVertical) ? \"vertical\" : null);\n      },\n      methods: {\n        index() {\n          return findIndex(this.children, (el) => hasClass(el, this.cls));\n        },\n        show(item) {\n          const toggles = this.toggles.filter((el) => !matches(el, selDisabled));\n          const prev = this.index();\n          const next = getIndex(\n            !isNode(item) || includes(toggles, item) ? item : 0,\n            toggles,\n            getIndex(this.toggles[prev], toggles)\n          );\n          const active = getIndex(toggles[next], this.toggles);\n          this.children.forEach((child, i) => {\n            toggleClass(child, this.cls, active === i);\n            attr(this.toggles[i], {\n              \"aria-selected\": active === i,\n              tabindex: active === i ? null : -1\n            });\n          });\n          const animate = prev >= 0 && prev !== next;\n          this.connects.forEach(async ({ children: children2 }) => {\n            const actives = toArray(children2).filter(\n              (child, i) => i !== active && hasClass(child, this.cls)\n            );\n            await this.toggleElement(actives, false, animate);\n            await this.toggleElement(children2[active], true, animate);\n          });\n        }\n      }\n    };\n\n    var tab = {\n      mixins: [Class],\n      extends: Switcher,\n      props: {\n        media: Boolean\n      },\n      data: {\n        media: 960,\n        attrItem: \"uk-tab-item\",\n        selVertical: \".uk-tab-left,.uk-tab-right\"\n      },\n      connected() {\n        const cls = hasClass(this.$el, \"uk-tab-left\") ? \"uk-tab-left\" : hasClass(this.$el, \"uk-tab-right\") ? \"uk-tab-right\" : false;\n        if (cls) {\n          this.$create(\"toggle\", this.$el, { cls, mode: \"media\", media: this.media });\n        }\n      }\n    };\n\n    const KEY_SPACE = 32;\n    var toggle = {\n      mixins: [Media, Togglable],\n      args: \"target\",\n      props: {\n        href: String,\n        target: null,\n        mode: \"list\",\n        queued: Boolean\n      },\n      data: {\n        href: false,\n        target: false,\n        mode: \"click\",\n        queued: true\n      },\n      computed: {\n        target({ target }, $el) {\n          target = queryAll(target || $el.hash, $el);\n          return target.length ? target : [$el];\n        }\n      },\n      connected() {\n        if (!includes(this.mode, \"media\")) {\n          if (!isFocusable(this.$el)) {\n            attr(this.$el, \"tabindex\", \"0\");\n          }\n          if (!this.cls && isTag(this.$el, \"a\")) {\n            attr(this.$el, \"role\", \"button\");\n          }\n        }\n      },\n      observe: lazyload({ target: ({ target }) => target }),\n      events: [\n        {\n          name: pointerDown$1,\n          filter() {\n            return includes(this.mode, \"hover\");\n          },\n          handler(e) {\n            this._preventClick = null;\n            if (!isTouch(e) || isBoolean(this._showState) || this.$el.disabled) {\n              return;\n            }\n            trigger(this.$el, \"focus\");\n            once(\n              document,\n              pointerDown$1,\n              () => trigger(this.$el, \"blur\"),\n              true,\n              (e2) => !this.$el.contains(e2.target)\n            );\n            if (includes(this.mode, \"click\")) {\n              this._preventClick = true;\n            }\n          }\n        },\n        {\n          // mouseenter mouseleave are added because of Firefox bug,\n          // where pointerleave is triggered immediately after pointerenter on scroll\n          name: `mouseenter mouseleave ${pointerEnter} ${pointerLeave} focus blur`,\n          filter() {\n            return includes(this.mode, \"hover\");\n          },\n          handler(e) {\n            if (isTouch(e) || this.$el.disabled) {\n              return;\n            }\n            const show = includes([\"mouseenter\", pointerEnter, \"focus\"], e.type);\n            const expanded = this.isToggled(this.target);\n            if (!show && (!isBoolean(this._showState) || e.type !== \"blur\" && matches(this.$el, \":focus\") || e.type === \"blur\" && matches(this.$el, \":hover\"))) {\n              if (expanded === this._showState) {\n                this._showState = null;\n              }\n              return;\n            }\n            if (show && isBoolean(this._showState) && expanded !== this._showState) {\n              return;\n            }\n            this._showState = show ? expanded : null;\n            this.toggle(`toggle${show ? \"show\" : \"hide\"}`);\n          }\n        },\n        {\n          name: \"keydown\",\n          filter() {\n            return includes(this.mode, \"click\") && !isTag(this.$el, \"input\");\n          },\n          handler(e) {\n            if (e.keyCode === KEY_SPACE) {\n              e.preventDefault();\n              this.$el.click();\n            }\n          }\n        },\n        {\n          name: \"click\",\n          filter() {\n            return [\"click\", \"hover\"].some((mode) => includes(this.mode, mode));\n          },\n          handler(e) {\n            let link;\n            if (this._preventClick || e.target.closest('a[href=\"#\"], a[href=\"\"]') || (link = e.target.closest(\"a[href]\")) && (!this.isToggled(this.target) || link.hash && matches(this.target, link.hash))) {\n              e.preventDefault();\n            }\n            if (!this._preventClick && includes(this.mode, \"click\")) {\n              this.toggle();\n            }\n          }\n        },\n        {\n          name: \"mediachange\",\n          filter() {\n            return includes(this.mode, \"media\");\n          },\n          el() {\n            return this.target;\n          },\n          handler(e, mediaObj) {\n            if (mediaObj.matches ^ this.isToggled(this.target)) {\n              this.toggle();\n            }\n          }\n        }\n      ],\n      methods: {\n        async toggle(type) {\n          if (!trigger(this.target, type || \"toggle\", [this])) {\n            return;\n          }\n          if (hasAttr(this.$el, \"aria-expanded\")) {\n            attr(this.$el, \"aria-expanded\", !this.isToggled(this.target));\n          }\n          if (!this.queued) {\n            return this.toggleElement(this.target);\n          }\n          const leaving = this.target.filter((el) => hasClass(el, this.clsLeave));\n          if (leaving.length) {\n            for (const el of this.target) {\n              const isLeaving = includes(leaving, el);\n              this.toggleElement(el, isLeaving, isLeaving);\n            }\n            return;\n          }\n          const toggled = this.target.filter(this.isToggled);\n          if (await this.toggleElement(toggled, false)) {\n            await this.toggleElement(\n              this.target.filter((el) => !includes(toggled, el)),\n              true\n            );\n          }\n        }\n      }\n    };\n\n    var components = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        Accordion: Accordion,\n        Alert: alert,\n        Close: Close,\n        Cover: cover,\n        Drop: drop,\n        DropParentIcon: IconComponent,\n        Dropdown: drop,\n        Dropnav: Dropnav,\n        FormCustom: formCustom,\n        Grid: grid,\n        HeightMatch: heightMatch,\n        HeightViewport: heightViewport,\n        Icon: Icon,\n        Img: img,\n        Leader: leader,\n        Margin: Margin,\n        Marker: Marker,\n        Modal: modal,\n        Nav: nav,\n        NavParentIcon: NavParentIcon,\n        Navbar: navbar,\n        NavbarParentIcon: IconComponent,\n        NavbarToggleIcon: NavbarToggleIcon,\n        Offcanvas: offcanvas,\n        OverflowAuto: overflowAuto,\n        OverlayIcon: IconComponent,\n        PaginationNext: PaginationNext,\n        PaginationPrevious: PaginationPrevious,\n        Responsive: responsive,\n        Scroll: scroll,\n        Scrollspy: scrollspy,\n        ScrollspyNav: scrollspyNav,\n        SearchIcon: Search,\n        SlidenavNext: Slidenav,\n        SlidenavPrevious: Slidenav,\n        Spinner: Spinner,\n        Sticky: sticky,\n        Svg: svg,\n        Switcher: Switcher,\n        Tab: tab,\n        Toggle: toggle,\n        Totop: Totop,\n        Video: Video\n    });\n\n    each(components, (component, name) => App.component(name, component));\n    boot(App);\n\n    each(components$1, (component, name) => App.component(name, component));\n\n    return App;\n\n}));\n","/*! UIkit 3.17.11 | https://www.getuikit.com | (c) 2014 - 2023 YOOtheme | MIT License */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('uikiticons', factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.UIkitIcons = factory());\n})(this, (function () { 'use strict';\n\n    function plugin(UIkit) {\n      if (plugin.installed) {\n        return;\n      }\n      UIkit.icon.add({\n        \"youtube\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\"/></svg>',\n        \"yootheme\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m16.15,5.48c-1.37,0-2.45.61-3.11,1.54-.66-.93-1.74-1.54-3.11-1.54-1.75,0-3.03,1-3.57,2.41v-2.22h-2.01v4.45c0,.85-.31,1.35-1.18,1.35s-1.18-.5-1.18-1.35v-4.45H0v4.86c0,.7.17,1.33.53,1.82.34.49.88.85,1.6,1v3.16h2.1v-3.16c1.28-.28,1.96-1.17,2.1-2.35.52,1.44,1.81,2.48,3.59,2.48,1.37,0,2.45-.61,3.11-1.54.66.93,1.74,1.54,3.11,1.54,2.37,0,3.85-1.82,3.85-4s-1.49-4-3.85-4Zm-6.22,5.99c-1.11,0-1.85-.72-1.85-1.99s.74-1.99,1.85-1.99,1.85.72,1.85,1.99-.74,1.99-1.85,1.99Zm6.22,0c-1.11,0-1.85-.72-1.85-1.99s.74-1.99,1.85-1.99,1.85.72,1.85,1.99-.74,1.99-1.85,1.99Z\"/></svg>',\n        \"yelp\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\"/></svg>',\n        \"xing\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\"/><path d=\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\"/></svg>',\n        \"world\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M1,10.5 L19,10.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,15.5 L17.65,15.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M2.35,5.5 L17.523,5.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10.5\" r=\"9\"/></svg>',\n        \"wordpress\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\"/></svg>',\n        \"whatsapp\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\"/></svg>',\n        \"warning\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"14\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><path d=\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\"/></svg>',\n        \"vimeo\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\"/></svg>',\n        \"video-camera\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"19.5 5.9 19.5 14.1 14.5 10.4 14.5 15.5 .5 15.5 .5 4.5 14.5 4.5 14.5 9.6 19.5 5.9\"/></svg>',\n        \"users\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"7.7\" cy=\"8.6\" r=\"3.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\"/></svg>',\n        \"user\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.9\" cy=\"6.4\" r=\"4.4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\"/></svg>',\n        \"upload\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"5 8 9.5 3.5 14 8\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"15\" x2=\"9.5\" y2=\"4\"/></svg>',\n        \"unlock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"8.5\" width=\"13\" height=\"10\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\"/></svg>',\n        \"uikit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\"/><polygon points=\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\"/></svg>',\n        \"twitter\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\"/></svg>',\n        \"twitch\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5.23,1,2,4.23V15.85H5.88v3.23L9.1,15.85h2.59L17.5,10V1Zm11,8.4L13.62,12H11L8.78,14.24V12H5.88V2.29H16.21Z\"/><rect x=\"12.98\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/><rect x=\"9.43\" y=\"4.55\" width=\"1.29\" height=\"3.88\"/></svg>',\n        \"tv\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"7\" y=\"16\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"3.5\" width=\"19\" height=\"11\"/></svg>',\n        \"tumblr\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\"/></svg>',\n        \"tripadvisor\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\"/></svg>',\n        \"triangle-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"5 13 10 8 15 13\"/></svg>',\n        \"triangle-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"8 5 13 10 8 15\"/></svg>',\n        \"triangle-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"12 5 7 10 12 15\"/></svg>',\n        \"triangle-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"5 7 15 7 10 12\"/></svg>',\n        \"trash\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\"/><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\"/><rect x=\"8\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"11\" y=\"7\" width=\"1\" height=\"9\"/><rect x=\"2\" y=\"3\" width=\"16\" height=\"1\"/></svg>',\n        \"tiktok\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.24,6V8.82a6.79,6.79,0,0,1-4-1.28v5.81A5.26,5.26,0,1,1,8,8.1a4.36,4.36,0,0,1,.72.05v2.9A2.57,2.57,0,0,0,7.64,11a2.4,2.4,0,1,0,2.77,2.38V2h2.86a4,4,0,0,0,1.84,3.38A4,4,0,0,0,17.24,6Z\"/></svg>',\n        \"thumbnails\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"3.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"11.5\" y=\"11.5\" width=\"5\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"11.5\" width=\"5\" height=\"5\"/></svg>',\n        \"tag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\"/><circle cx=\"14\" cy=\"6\" r=\"1\"/></svg>',\n        \"tablet\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\"/><circle cx=\"10.5\" cy=\"16.3\" r=\".8\"/></svg>',\n        \"tablet-landscape\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\"/><circle cx=\"3.7\" cy=\"10.5\" r=\".8\"/></svg>',\n        \"table\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"1\" y=\"3\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"11\" width=\"18\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"18\" height=\"1\"/></svg>',\n        \"strikethrough\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\"/><rect x=\"3\" y=\"10\" width=\"15\" height=\"1\"/></svg>',\n        \"star\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\"/></svg>',\n        \"soundcloud\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\"/><rect x=\"6\" y=\"6.5\" width=\"1.5\" height=\"8.5\"/><rect x=\"3\" y=\"8\" width=\"1.5\" height=\"7\"/><rect y=\"10\" width=\"1.5\" height=\"5\"/></svg>',\n        \"social\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.4\" y1=\"14\" x2=\"6.3\" y2=\"10.7\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"13.5\" y1=\"5.5\" x2=\"6.5\" y2=\"8.8\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"4.6\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"15.5\" cy=\"14.8\" r=\"2.3\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"4.5\" cy=\"9.8\" r=\"2.3\"/></svg>',\n        \"sign-out\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\"/><polygon points=\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\"/></svg>',\n        \"sign-in\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\"/><polygon points=\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\"/></svg>',\n        \"shrink\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"11 4 12 4 12 8 16 8 16 9 11 9\"/><polygon points=\"4 11 9 11 9 16 8 16 8 12 4 12\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M12,8 L18,2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2,18 L8,12\"/></svg>',\n        \"settings\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"3.55\" rx=\"2.11\" ry=\"2.15\"/><ellipse fill=\"none\" stroke=\"#000\" cx=\"6.11\" cy=\"15.55\" rx=\"2.11\" ry=\"2.15\"/><circle fill=\"none\" stroke=\"#000\" cx=\"13.15\" cy=\"9.55\" r=\"2.15\"/><rect x=\"1\" y=\"3\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"3\" width=\"8\" height=\"1\"/><rect x=\"1\" y=\"9\" width=\"8\" height=\"1\"/><rect x=\"15\" y=\"9\" width=\"3\" height=\"1\"/><rect x=\"1\" y=\"15\" width=\"3\" height=\"1\"/><rect x=\"10\" y=\"15\" width=\"8\" height=\"1\"/></svg>',\n        \"server\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"3\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"7\" y=\"3\" width=\"1\" height=\"2\"/><rect x=\"16\" y=\"3\" width=\"1\" height=\"1\"/><rect x=\"16\" y=\"10\" width=\"1\" height=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"9.9\" cy=\"17.4\" r=\"1.4\"/><rect x=\"3\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"10\" width=\"1\" height=\"2\"/><rect x=\"9.5\" y=\"14\" width=\"1\" height=\"2\"/><rect x=\"3\" y=\"17\" width=\"6\" height=\"1\"/><rect x=\"11\" y=\"17\" width=\"6\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"1.5\" width=\"17\" height=\"5\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"8.5\" width=\"17\" height=\"5\"/></svg>',\n        \"search\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9\" cy=\"9\" r=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M14,14 L18,18 L14,14 Z\"/></svg>',\n        \"rss\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"3.12\" cy=\"16.8\" r=\"1.85\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\"/></svg>',\n        \"reply\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\"/></svg>',\n        \"refresh\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"9.9 2 12.79 4.89 9.79 7.9\"/></svg>',\n        \"reddit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z\"/><path d=\"M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z\"/><path d=\"M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z\"/><path d=\"M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z\"/></svg>',\n        \"receiver\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\"/></svg>',\n        \"quote-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\"/><path d=\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\"/></svg>',\n        \"question\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><circle cx=\"9.99\" cy=\"14.24\" r=\"1.05\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" d=\"m7.72,7.61c0-3.04,4.55-3.06,4.55-.07,0,.95-.91,1.43-1.49,2.03-.48.49-.72.98-.78,1.65-.01.13-.02.24-.02.35\"/></svg>',\n        \"push\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"10\" x2=\"9.5\" y2=\"1\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\"/></svg>',\n        \"pull\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"11\" x2=\"9.5\" y2=\"2\"/><polyline fill=\"none\" stroke=\"#000\" points=\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\"/></svg>',\n        \"print\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5\"/><polyline fill=\"none\" stroke=\"#000\" points=\"15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5\"/><rect fill=\"none\" stroke=\"#000\" width=\"11\" height=\"6\" x=\"4.5\" y=\"11.5\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"13\"/><rect width=\"8\" height=\"1\" x=\"6\" y=\"15\"/></svg>',\n        \"plus\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"9\" y=\"1\" width=\"1\" height=\"17\"/><rect x=\"1\" y=\"9\" width=\"17\" height=\"1\"/></svg>',\n        \"plus-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"5\" x2=\"9.5\" y2=\"14\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>',\n        \"play\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"6.5,5 14.5,10 6.5,15\"/></svg>',\n        \"play-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"8.5 7 13.5 10 8.5 13\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n        \"pinterest\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\"/></svg>',\n        \"phone\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\"/><circle cx=\"10.5\" cy=\"16.5\" r=\".8\"/></svg>',\n        \"phone-landscape\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\"/><circle cx=\"3.8\" cy=\"10.5\" r=\".8\"/></svg>',\n        \"pencil\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M15.98,7.268 L13.851,5.148\"/></svg>',\n        \"paint-bucket\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"m6.42,2.16l5.28,5.28\"/><path d=\"m18.49,11.83s1.51,2.06,1.51,3.36c0,.92-.76,1.64-1.51,1.64h0c-.75,0-1.49-.72-1.49-1.64,0-1.3,1.49-3.36,1.49-3.36h0Z\"/><line fill=\"none\" stroke=\"#000\" x1=\"1.26\" y1=\"10.5\" x2=\"16\" y2=\"10.5\"/><polygon fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"10.2 1.55 17.6 8.93 8.08 18.45 .7 11.07 10.2 1.55\"/></svg>',\n        \"pagekit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19\"/></svg>',\n        \"nut\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"3.5\"/></svg>',\n        \"move\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"4,5 1,5 1,9 2,9 2,6 4,6\"/><polygon points=\"1,16 2,16 2,18 4,18 4,19 1,19\"/><polygon points=\"14,16 14,19 11,19 11,18 13,18 13,16\"/><rect fill=\"none\" stroke=\"#000\" x=\"5.5\" y=\"1.5\" width=\"13\" height=\"13\"/><rect x=\"1\" y=\"11\" width=\"1\" height=\"3\"/><rect x=\"6\" y=\"18\" width=\"3\" height=\"1\"/></svg>',\n        \"more\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"3\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"17\" cy=\"10\" r=\"2\"/></svg>',\n        \"more-vertical\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"3\" r=\"2\"/><circle cx=\"10\" cy=\"10\" r=\"2\"/><circle cx=\"10\" cy=\"17\" r=\"2\"/></svg>',\n        \"minus\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect height=\"1\" width=\"18\" y=\"9\" x=\"1\"/></svg>',\n        \"minus-circle\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"9.5\" cy=\"9.5\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" x1=\"5\" y1=\"9.5\" x2=\"14\" y2=\"9.5\"/></svg>',\n        \"microsoft\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m2,2h7.58v7.58H2V2Zm8.42,0h7.58v7.58h-7.58V2ZM2,10.42h7.58v7.58H2v-7.58Zm8.42,0h7.58v7.58h-7.58\"/></svg>',\n        \"microphone\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><line fill=\"none\" stroke=\"#000\" x1=\"10\" x2=\"10\" y1=\"16.44\" y2=\"18.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"7\" x2=\"13\" y1=\"18.5\" y2=\"18.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6\"/></svg>',\n        \"menu\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"2\" y=\"4\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"16\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"16\" height=\"1\"/></svg>',\n        \"mastodon\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m18.5,6.87c0-3.95-2.59-5.11-2.59-5.11-1.31-.6-3.55-.85-5.88-.87h-.06c-2.33.02-4.57.27-5.88.87,0,0-2.59,1.16-2.59,5.11,0,.91-.02,1.99.01,3.14.09,3.87.71,7.68,4.28,8.62,1.65.44,3.06.53,4.2.47,2.07-.11,3.23-.74,3.23-.74l-.07-1.5s-1.48.47-3.14.41c-1.64-.06-3.38-.18-3.64-2.2-.02-.18-.04-.37-.04-.57,0,0,1.61.39,3.66.49,1.25.06,2.42-.07,3.61-.22,2.28-.27,4.27-1.68,4.52-2.97.39-2.02.36-4.94.36-4.94Zm-3.05,5.09h-1.9v-4.65c0-.98-.41-1.48-1.24-1.48-.91,0-1.37.59-1.37,1.76v2.54h-1.89v-2.54c0-1.17-.46-1.76-1.37-1.76-.82,0-1.24.5-1.24,1.48v4.65h-1.9v-4.79c0-.98.25-1.76.75-2.33.52-.58,1.19-.87,2.03-.87.97,0,1.71.37,2.19,1.12l.47.79.47-.79c.49-.75,1.22-1.12,2.19-1.12.84,0,1.51.29,2.03.87.5.58.75,1.35.75,2.33v4.79Z\"/></svg>',\n        \"mail\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"1.4,6.5 10,11 18.6,6.5\"/><path d=\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\"/></svg>',\n        \"lock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" height=\"10\" width=\"13\" y=\"8.5\" x=\"3.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\"/></svg>',\n        \"location\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" d=\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"6.8\" r=\"2.3\"/></svg>',\n        \"list\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"6\" y=\"4\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"9\" width=\"12\" height=\"1\"/><rect x=\"6\" y=\"14\" width=\"12\" height=\"1\"/><rect x=\"2\" y=\"4\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"9\" width=\"2\" height=\"1\"/><rect x=\"2\" y=\"14\" width=\"2\" height=\"1\"/></svg>',\n        \"linkedin\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\"/><path d=\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\"/></svg>',\n        \"link\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M7.925,11.875 L11.925,7.975\"/></svg>',\n        \"lifesaver\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"9\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"5\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"5.17\" y1=\"2.39\" x2=\"8.11\" y2=\"5.33\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"5.33\" y1=\"8.11\" x2=\"2.39\" y2=\"5.17\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"14.83\" y1=\"17.61\" x2=\"11.89\" y2=\"14.67\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"14.67\" y1=\"11.89\" x2=\"17.61\" y2=\"14.83\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"17.61\" y1=\"5.17\" x2=\"14.67\" y2=\"8.11\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"11.89\" y1=\"5.33\" x2=\"14.83\" y2=\"2.39\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"8.11\" y1=\"14.67\" x2=\"5.17\" y2=\"17.61\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"2.39\" y1=\"14.83\" x2=\"5.33\" y2=\"11.89\"/></svg>',\n        \"laptop\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect y=\"16\" width=\"20\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"2.5\" y=\"4.5\" width=\"15\" height=\"10\"/></svg>',\n        \"joomla\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\"/><path d=\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\"/><path d=\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\"/><path d=\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\"/></svg>',\n        \"italic\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\"/></svg>',\n        \"instagram\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\"/><circle cx=\"14.87\" cy=\"5.26\" r=\"1.09\"/><path d=\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\"/></svg>',\n        \"info\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n        \"image\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"16.1\" cy=\"6.1\" r=\"1.1\"/><rect fill=\"none\" stroke=\"#000\" x=\".5\" y=\"2.5\" width=\"19\" height=\"15\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"4,13 8,9 13,14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"11,12 12.5,10.5 16,14\"/></svg>',\n        \"home\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\"/><polygon points=\"15 4 18 4 18 7 17 7 17 5 15 5\"/><polygon points=\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\"/></svg>',\n        \"history\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"#000\" points=\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>',\n        \"heart\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" d=\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\"/></svg>',\n        \"hashtag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\"/></svg>',\n        \"happy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"13\" cy=\"7\" r=\"1\"/><circle cx=\"7\" cy=\"7\" r=\"1\"/><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"8.5\"/><path fill=\"none\" stroke=\"#000\" d=\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\"/></svg>',\n        \"grid\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"2\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"2\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"8\" width=\"3\" height=\"3\"/><rect x=\"2\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"8\" y=\"14\" width=\"3\" height=\"3\"/><rect x=\"14\" y=\"14\" width=\"3\" height=\"3\"/></svg>',\n        \"google\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\"/></svg>',\n        \"gitter\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"3.5\" y=\"1\" width=\"1.531\" height=\"11.471\"/><rect x=\"7.324\" y=\"4.059\" width=\"1.529\" height=\"15.294\"/><rect x=\"11.148\" y=\"4.059\" width=\"1.527\" height=\"15.294\"/><rect x=\"14.971\" y=\"4.059\" width=\"1.529\" height=\"8.412\"/></svg>',\n        \"github\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\"/></svg>',\n        \"github-alt\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\"/></svg>',\n        \"git-fork\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"5.79\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14.19\" cy=\"2.79\" r=\"1.79\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"10.03\" cy=\"16.79\" r=\"1.79\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\"/></svg>',\n        \"git-branch\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"3\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"14\" cy=\"6\" r=\"2\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\" cx=\"7\" cy=\"17\" r=\"2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\"/></svg>',\n        \"future\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline points=\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path d=\"M13.018,14.197 L9.445,10.625\" fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\"/></svg>',\n        \"foursquare\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\"/></svg>',\n        \"forward\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\"/></svg>',\n        \"folder\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\"/></svg>',\n        \"flickr\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"5.5\" cy=\"9.5\" r=\"3.5\"/><circle cx=\"14.5\" cy=\"9.5\" r=\"3.5\"/></svg>',\n        \"file\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"1.5\" width=\"13\" height=\"17\"/></svg>',\n        \"file-text\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"12\" y1=\"12.5\" y2=\"12.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"8.5\" y2=\"8.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"6.5\" y2=\"6.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"6\" x2=\"14\" y1=\"10.5\" y2=\"10.5\"/></svg>',\n        \"file-pdf\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" width=\"13\" height=\"17\" x=\"3.5\" y=\"1.5\"/><path d=\"M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z\"/></svg>',\n        \"file-edit\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\"/><polyline fill=\"none\" stroke=\"#000\" points=\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\"/></svg>',\n        \"facebook\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\"/></svg>',\n        \"eye\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"3.45\"/><path fill=\"none\" stroke=\"#000\" d=\"m19.5,10c-2.4,3.66-5.26,7-9.5,7h0,0,0c-4.24,0-7.1-3.34-9.49-7C2.89,6.34,5.75,3,9.99,3h0,0,0c4.25,0,7.11,3.34,9.5,7Z\"/></svg>',\n        \"eye-slash\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"m7.56,7.56c.62-.62,1.49-1.01,2.44-1.01,1.91,0,3.45,1.54,3.45,3.45,0,.95-.39,1.82-1.01,2.44\"/><path fill=\"none\" stroke=\"#000\" d=\"m19.5,10c-2.4,3.66-5.26,7-9.5,7h0,0,0c-4.24,0-7.1-3.34-9.49-7C2.89,6.34,5.75,3,9.99,3h0,0,0c4.25,0,7.11,3.34,9.5,7Z\"/><line fill=\"none\" stroke=\"#000\" x1=\"2.5\" y1=\"2.5\" x2=\"17.5\" y2=\"17.5\"/></svg>',\n        \"expand\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"13 2 18 2 18 7 17 7 17 3 13 3\"/><polygon points=\"2 13 3 13 3 17 7 17 7 18 2 18\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M11,9 L17,3\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M3,17 L9,11\"/></svg>',\n        \"etsy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z\"/></svg>',\n        \"dribbble\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" d=\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\"/><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.4\" cx=\"10\" cy=\"10\" r=\"9\"/></svg>',\n        \"download\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"14,10 9.5,14.5 5,10\"/><rect x=\"3\" y=\"17\" width=\"13\" height=\"1\"/><line fill=\"none\" stroke=\"#000\" x1=\"9.5\" y1=\"13.91\" x2=\"9.5\" y2=\"3\"/></svg>',\n        \"discord\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M16.074,4.361a14.243,14.243,0,0,0-3.61-1.134,10.61,10.61,0,0,0-.463.96,13.219,13.219,0,0,0-4,0,10.138,10.138,0,0,0-.468-.96A14.206,14.206,0,0,0,3.919,4.364,15.146,15.146,0,0,0,1.324,14.5a14.435,14.435,0,0,0,4.428,2.269A10.982,10.982,0,0,0,6.7,15.21a9.294,9.294,0,0,1-1.494-.727c.125-.093.248-.19.366-.289a10.212,10.212,0,0,0,8.854,0c.119.1.242.2.366.289a9.274,9.274,0,0,1-1.5.728,10.8,10.8,0,0,0,.948,1.562,14.419,14.419,0,0,0,4.431-2.27A15.128,15.128,0,0,0,16.074,4.361Zm-8.981,8.1a1.7,1.7,0,0,1-1.573-1.79A1.689,1.689,0,0,1,7.093,8.881a1.679,1.679,0,0,1,1.573,1.791A1.687,1.687,0,0,1,7.093,12.462Zm5.814,0a1.7,1.7,0,0,1-1.573-1.79,1.689,1.689,0,0,1,1.573-1.791,1.679,1.679,0,0,1,1.573,1.791A1.688,1.688,0,0,1,12.907,12.462Z\"/></svg>',\n        \"desktop\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"8\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"11\" y=\"15\" width=\"1\" height=\"2\"/><rect x=\"5\" y=\"16\" width=\"10\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"3.5\" width=\"17\" height=\"11\"/></svg>',\n        \"database\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><ellipse fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"4.64\" rx=\"7.5\" ry=\"3.14\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\"/><path fill=\"none\" stroke=\"#000\" d=\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\"/></svg>',\n        \"crosshairs\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"10\" cy=\"10\" r=\"7.5\"/><line fill=\"none\" stroke=\"#000\" x1=\"10\" x2=\"10\" y2=\"8\"/><line fill=\"none\" stroke=\"#000\" x1=\"10\" y1=\"12\" x2=\"10\" y2=\"20\"/><line fill=\"none\" stroke=\"#000\" y1=\"10\" x2=\"8\" y2=\"10\"/><line fill=\"none\" stroke=\"#000\" x1=\"12\" y1=\"10\" x2=\"20\" y2=\"10\"/></svg>',\n        \"credit-card\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"4.5\" width=\"17\" height=\"12\"/><rect x=\"1\" y=\"7\" width=\"18\" height=\"3\"/></svg>',\n        \"copy\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect fill=\"none\" stroke=\"#000\" x=\"3.5\" y=\"2.5\" width=\"12\" height=\"16\"/><polyline fill=\"none\" stroke=\"#000\" points=\"5 0.5 17.5 0.5 17.5 17\"/></svg>',\n        \"comments\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"2 0.5 19.5 0.5 19.5 13\"/><path d=\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\"/></svg>',\n        \"commenting\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\"/><circle cx=\"10\" cy=\"8\" r=\"1\"/><circle cx=\"6\" cy=\"8\" r=\"1\"/><circle cx=\"14\" cy=\"8\" r=\"1\"/></svg>',\n        \"comment\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\"/></svg>',\n        \"cog\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" cx=\"9.997\" cy=\"10\" r=\"3.31\"/><path fill=\"none\" stroke=\"#000\" d=\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\"/></svg>',\n        \"code\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"13,4 19,10 13,16\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.01\" points=\"7,4 1,10 7,16\"/></svg>',\n        \"cloud-upload\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"7.25 11.75 9.5 9.5 11.75 11.75\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>',\n        \"cloud-download\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\"/><polyline fill=\"none\" stroke=\"#000\" points=\"11.75 16 9.5 18.25 7.25 16\"/><path fill=\"none\" stroke=\"#000\" d=\"M9.5,18 L9.5,9.5\"/></svg>',\n        \"close\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,16 L4,4\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.06\" d=\"M16,4 L4,16\"/></svg>',\n        \"clock\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><rect x=\"9\" y=\"4\" width=\"1\" height=\"7\"/><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M13.018,14.197 L9.445,10.625\"/></svg>',\n        \"chevron-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"4 13 10 7 16 13\"/></svg>',\n        \"chevron-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"7 4 13 10 7 16\"/></svg>',\n        \"chevron-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"13 16 7 10 13 4\"/></svg>',\n        \"chevron-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"16 7 10 13 4 7\"/></svg>',\n        \"chevron-double-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 6 14 10 10 14\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"6 6 10 10 6 14\"/></svg>',\n        \"chevron-double-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"10 14 6 10 10 6\"/><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.03\" points=\"14 14 10 10 14 6\"/></svg>',\n        \"check\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" points=\"4,10 8,15 17,4\"/></svg>',\n        \"cart\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle cx=\"7.3\" cy=\"17.3\" r=\"1.4\"/><circle cx=\"13.3\" cy=\"17.3\" r=\"1.4\"/><polyline fill=\"none\" stroke=\"#000\" points=\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\"/></svg>',\n        \"camera\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10.8\" r=\"3.8\"/><path fill=\"none\" stroke=\"#000\" d=\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\"/></svg>',\n        \"calendar\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\"/><rect width=\"1\" height=\"3\" x=\"6\" y=\"2\"/><rect width=\"1\" height=\"3\" x=\"13\" y=\"2\"/></svg>',\n        \"bookmark\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon fill=\"none\" stroke=\"#000\" points=\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\"/></svg>',\n        \"bolt\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\"/></svg>',\n        \"bold\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\"/></svg>',\n        \"bell\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" d=\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\"/></svg>',\n        \"behance\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\"/><path d=\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\"/><rect x=\"13\" y=\"4\" width=\"5\" height=\"1.4\"/></svg>',\n        \"ban\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><circle fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" cx=\"10\" cy=\"10\" r=\"9\"/><line fill=\"none\" stroke=\"#000\" stroke-width=\"1.1\" x1=\"4\" y1=\"3.5\" x2=\"16\" y2=\"16.5\"/></svg>',\n        \"bag\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"none\" stroke=\"#000\" d=\"M7.5,7.5V4A2.48,2.48,0,0,1,10,1.5,2.54,2.54,0,0,1,12.5,4V7.5\"/><polygon fill=\"none\" stroke=\"#000\" points=\"16.5 7.5 3.5 7.5 2.5 18.5 17.5 18.5 16.5 7.5\"/></svg>',\n        \"arrow-up\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"16\" x2=\"10.5\" y2=\"5\"/></svg>',\n        \"arrow-right\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 5 15 9.5 10 14\"/><line fill=\"none\" stroke=\"#000\" x1=\"4\" y1=\"9.5\" x2=\"15\" y2=\"9.5\"/></svg>',\n        \"arrow-left\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polyline fill=\"none\" stroke=\"#000\" points=\"10 14 5 9.5 10 5\"/><line fill=\"none\" stroke=\"#000\" x1=\"16\" y1=\"9.5\" x2=\"5\" y2=\"9.52\"/></svg>',\n        \"arrow-down\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><polygon points=\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\"/><line fill=\"none\" stroke=\"#000\" x1=\"10.5\" y1=\"4\" x2=\"10.5\" y2=\"15\"/></svg>',\n        \"apple\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m17.23,6.93c-.1.08-1.95,1.12-1.95,3.43,0,2.67,2.35,3.62,2.42,3.64-.01.06-.37,1.29-1.24,2.55-.77,1.11-1.58,2.22-2.8,2.22s-1.54-.71-2.95-.71-1.87.73-2.99.73-1.9-1.03-2.8-2.29c-1.04-1.48-1.88-3.78-1.88-5.96,0-3.5,2.28-5.36,4.51-5.36,1.19,0,2.18.78,2.93.78s1.82-.83,3.17-.83c.51,0,2.36.05,3.57,1.79h0Zm-4.21-3.27c.56-.66.96-1.59.96-2.51,0-.13-.01-.26-.03-.36-.91.03-1.99.61-2.65,1.36-.51.58-.99,1.5-.99,2.44,0,.14.02.28.03.33.06.01.15.02.24.02.82,0,1.85-.55,2.44-1.28h0Z\"/></svg>',\n        \"android\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m14.88,6.77l1.66-2.87c.09-.16.04-.37-.12-.46-.16-.09-.37-.04-.46.12l-1.68,2.91c-1.28-.59-2.73-.91-4.28-.91s-3,.33-4.28.91l-1.68-2.91c-.09-.16-.3-.22-.46-.12-.16.09-.22.3-.12.46l1.66,2.87C2.26,8.32.32,11.22,0,14.61h20c-.32-3.39-2.26-6.29-5.12-7.84h0Zm-9.47,5.03c-.46,0-.84-.38-.84-.84s.38-.84.84-.84.84.38.84.84c0,.46-.37.84-.84.84Zm9.18,0c-.46,0-.84-.38-.84-.84s.38-.84.84-.84.84.38.84.84c0,.46-.37.84-.84.84Z\"/></svg>',\n        \"android-robot\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"m17.61,7.96v4.64c-.06,1.48-2.17,1.48-2.23,0v-4.64c.06-1.48,2.17-1.48,2.23,0Z\"/><path d=\"m4.62,7.96v4.64c-.06,1.48-2.17,1.48-2.23,0v-4.64c.06-1.48,2.17-1.48,2.23,0Z\"/><path d=\"m12.78,2.85c-.11-.07-.23-.13-.34-.19.13-.23.65-1.17.79-1.42.07-.12-.05-.27-.18-.23-.04.01-.07.04-.09.08l-.79,1.43c-1.32-.6-2.98-.6-4.3,0-.13-.23-.65-1.18-.79-1.43-.04-.07-.14-.1-.21-.06-.08.04-.1.14-.06.21,0,0,.79,1.42.79,1.42-1.49.77-2.53,2.28-2.53,3.99-.02,0,9.93,0,9.93,0,.01-1.55-.87-2.98-2.19-3.8Zm-5.07,1.98c-.23,0-.41-.19-.41-.41.01-.27.21-.41.41-.41s.4.14.42.41c0,.22-.18.42-.41.41Zm4.58,0c-.23,0-.42-.19-.41-.41.01-.28.21-.41.41-.41s.4.14.41.41c0,.23-.19.41-.41.41Z\"/><path d=\"m14.97,7.03v7.2c0,.66-.54,1.2-1.2,1.2h-.8v2.46c-.06,1.48-2.16,1.48-2.23,0,0,0,0-2.46,0-2.46h-1.48v2.46c0,.61-.5,1.11-1.11,1.11s-1.11-.5-1.11-1.11v-2.46h-.8c-.66,0-1.2-.54-1.2-1.2,0,0,0-7.2,0-7.2h9.93Z\"/></svg>',\n        \"album\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><rect x=\"5\" y=\"2\" width=\"10\" height=\"1\"/><rect x=\"3\" y=\"4\" width=\"14\" height=\"1\"/><rect fill=\"none\" stroke=\"#000\" x=\"1.5\" y=\"6.5\" width=\"17\" height=\"11\"/></svg>',\n        \"500px\": '<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path d=\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\"/><path d=\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\"/><path d=\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\"/><path d=\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\"/></svg>'\n      });\n    }\n    if (typeof window !== \"undefined\" && window.UIkit) {\n      window.UIkit.use(plugin);\n    }\n\n    return plugin;\n\n}));\n"],"names":["$parcel$interopDefault","a","__esModule","default","$0efce4e7257869d3$exports","factory","vh","vhEl","prevented","observer","instances$1","trackTimer","active","container","hasOwnProperty","toString","Object","prototype","hasOwn","obj","key","call","hyphenateRe","hyphenate","memoize","str","replace","toLowerCase","camelizeRe","camelize","charAt","slice","_","c","toUpperCase","ucfirst","startsWith","search","_a","endsWith","includes","findIndex","array","predicate","isArray","from","toArray","Array","assign","isFunction","isObject","isPlainObject","isWindow","window","isDocument","nodeType","isNode","isElement","isBoolean","value","isString","isNumber","isNumeric","isNaN","parseFloat","isEmpty","length","keys","isUndefined","toBoolean","toNumber","number","Number","toFloat","toNode","element","toNodes","filter","toWindow","document1","ownerDocument","defaultView","isEqual","other","each","val","swap","b","RegExp","match","last","cb","sortBy","prop","sort","propA","propB","sumBy","iteratee","reduce","sum","item","uniqueBy","seen","Set","check","has","add","pick","props","res","clamp","min","max","Math","noop","intersectRect","rects","every","minProp","maxProp","map","pointInRect","point","rect","x","right","left","y","bottom","top","ratio","dimensions","aProp","round","contain","maxDimensions","Dimensions","cover","getIndex","i","elements","current","finite","indexOf","fn","cache","create","args","attr","name","getAttribute","el","removeAttr","setAttribute","hasAttr","some","element2","hasAttribute","forEach","removeAttribute","data","attribute","addClass","classes","node","toClasses","cls","hasClass","classList","removeClass","remove","removeClasses$1","clsRegex","replaceClass","oldClass","newClass","contains","toggleClass","force","cls2","toggle","flat","String","split","Boolean","voidElements","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","isVoidElement","tagName","isVisible","offsetWidth","offsetHeight","getClientRects","selInput","isInput","matches","selFocusable","isFocusable","parent","parentElement","filter$1","selector","closest","within","parents","push","children","children2","index","ref","isSameSiteAnchor","part","location","getTargetedElement","id","decodeURIComponent","hash","substring","document","getElementById","getElementsByName","query","context","find","getContext","queryAll","findAll","_query","contextSelectorRe","isContextSelector","contextSanitizeRe","sanatize","queryFn","splitSelector","sel","ctx","selectors","substr","trim","join","prev","previousElementSibling","domPath","names","parentNode","unshift","escape","e","selectorRe","selector2","css","CSS","on","listener","targets","types","useCapture","getArgs","type","detail","self","target","currentTarget","delegate","reverse","addEventListener","off","removeEventListener","once","condition","off2","result","trigger","event","detail2","toEventTargets","dispatchEvent","createEvent","bubbles","cancelable","CustomEvent","splice","isEventTarget","toEventTarget","isTouch","pointerType","touches","getEventPos","_b","clientX","clientY","changedTouches","cssNumber","opacity","order","orphans","widows","zoom","property","priority","propName","getComputedStyle","getPropertyValue","style","setProperty","value2","property2","vendorPropName","documentElement","prefix","prefixedName","clsTransition","clsTransitionEnd","clsTransitionCanceled","Transition","start","duration","timing","Promise","all","resolve","reject","timer","setTimeout","clearTimeout","transitionProperty","transitionDuration","transitionTimingFunction","stop","cancel","inProgress","animationPrefix","clsAnimationEnd","clsAnimationCanceled","animate$2","animation","origin","out","inProgressRe","Animation","in","test","isTag","tagNames","empty","$","innerHTML","html","parent2","html2","append","prepend","applyFn","before","after","nodes","fragment","unwrapSingle","remove$1","wrapAll","structure","firstChild","wrapInner","hasChildNodes","childNodes","unwrap","replaceWith","singleTagRe","exec","createElement","content","apply","firstElementChild","next","nextElementSibling","isHtml","$$","dirs$1","width","height","dimensions$1","getBoundingClientRect","offset","coordinates","currentOffset","scrollY","scrollX","offsetBy","dir","position","body","offsetParent","parentOffset","offsetPosition","offset2","offsetTop","offsetLeft","win","dimension","boxModelAdjust","doc","sizing","prop2","flipPosition","pos","toPx","offsetDim","parseCalc","unit","parseUnit","clientHeight","calcRe","calc","unitRe$1","inBrowser","isRtl","hasTouch","hasPointerEvents","PointerEvent","pointerDown$1","pointerMove$1","pointerUp$1","pointerEnter","pointerLeave","pointerCancel","fastdom","reads","writes","read","task","scheduleFlush","write","clear","flush","recursion","runTasks","scheduled","then","requestAnimationFrame","tasks","shift","console","error","MouseTracker","observeIntersection","options","intersecting","IntersectionObserver","entries","observer2","entry","isIntersecting","observe","positions","init","unbind","interval","setInterval","clearInterval","movesTo","p","prevPosition","path","diagonals","diagonal","intersection","intersect","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","hasResizeObserver","ResizeObserver","observeResize","box","observe$1","disconnect","cb2","observeViewportResize","visualViewport","observeMutation","MutationObserver","Observer","play","isIFrame","func","method","isHTML5","pause","mute","muted","isVideo","isYoutube","isVimeo","src","cmd","enableApi","poller","stateKey","youtube","vimeo","counter","post","JSON","parse","player_id","contentWindow","postMessage","stringify","scrollIntoView","parents2","scrollParents","scrollElement","scrollTop","scrollHeight","viewport","offsetViewport","maxScroll","elHeight","elTop","ceil","scrollTo","scroll","pow","abs","Date","now","isScrollingElement","scrollingElement","targetTop","frames","step","percent","cos","PI","diff","coverEl","getCoveringElement","scrolledOver","startOffset","endOffset","scrollParent","viewportHeight","elementOffsetTop","end","scrollable","scrollEl","ancestors","fixedIndex","concat","overflowParents","window1","viewportElement","scale","pageTop","pageLeft","subpixel","elementsFromPoint","hasPosition","zIndex","dirs","positionAt","attach","placement","getPosition","attachTo","boundary","viewportOffset","getViewport$2","getIntersectionArea","commonScrollParents","isWithin","flip","flipAttach","scrollArea","getScrollArea","axis","applyOffset","newPos","flipAttachAxis","targetDim","elOffset","targetOffset","moveBy","dim","positionA","positionB","newAttach","util","freeze","__proto__","isInView","pointerDown","pointerMove","pointerUp","ready","readyState","removeClasses","Class","connected","$el","$options","units","strats","mergeFnData","parentVal","childVal","vm","computed","concatStrat","mergeOptions","child","extends","mixins","mixin","mergeKey","parseOptions","options2","option","coerce$1","listRe","events","watch","created","beforeConnect","beforeDisconnect","disconnected","destroy","update","methods","i18n","vm2","callUpdate","instance","_connected","_updates","_queued","runUpdates","_data","resize","lazyload","handler","preload","el2","unobserve","scroll$1","passive","swipe","e2","observe2","emit","Margin","margin","firstColumn","childList","attributes","attributeFilter","rows","getRows","row","sorted","withOffset","getOffset","offsetCurrent","j","offsetCurrent2","clsLeave","clsEnter","fade","action","stagger","transitionIndex","propsIn","propsOut","wrapIndexFn","leaveFn","getTransitionNodes","enterFn","oldHeight","newHeight","transitionNodes","transitions","timeout","alignContent","dataset","transition","waitTransitionend","slide","awaitFrame","currentProps","getProps$1","targetProps","display","targetStyle","targetPropsTo","propsTo","propsFrom","getTransitionProps","getPositionWithMargin","attrsTo","resetProps","pointerEvents","transform","Animate","animate","animationFn","catch","keyMap","TAB","ESC","SPACE","END","HOME","LEFT","UP","RIGHT","DOWN","getFilter","attr2","mergeState","state","group","Container","$container","preventBackgroundScroll","targetTouches","preventDefault","overflowY","supports","touchAction","paddingRight","clientWidth","Togglable","velocity","hasAnimation","hasTransition","toggleElement","show","isToggled","promise","toggleTransition","cmp","_toggle","done","toggled","changed","hidden","focus","blur","mode","startProp","dimProp","marginProp","marginStartProp","currentDim","prevProps","fromEntries","currentMargin","marginStart","endDim","wrapper","boxSizing","padding","border","minWidth","minHeight","overflow","endProps","active$1","Modal","selPanel","selClose","escClose","bgClose","stack","role","overlay","panel","transitionElement","defaultPrevented","hide","modal","handlers","newTarget","keyCode","clsPage","animate$1","time","_reject","Animations$2","translate","translated","scale3d","triggerUpdate$1","I18n","t","params","_c","pointerOptions","capture","pointerUpOptions","SliderDrag","draggable","threshold","prevPos","selList","textContent","button","list","drag","_transitioner","getDistance","dragging","prevIndex","move","itemShown","distance","slides","dis","nextIndex","_getDistance","edge","_translate","_show","dirChange","userSelect","_getTransitioner","registerWatch","_watches","registerComputed","_hasComputed","defineProperty","enumerable","get","_computed","$props","set","resetComputed","values","registerEvent","_events","bind","registerObserver","_observers","registerObservable","observable","immediate","getProps","opts","data$1","getAttributes","callHook","hook","callConnected","initProps","initEvents","initWatches","watches","_initial","initObservers","initPropsObserver","records","attributeName","$reset","prependUpdate","runWatches","subtree","callDisconnected","disconnectObservers","delete","uid","init$1","normalizeData","data2","constructor","_uid","initData","initMethods","initComputed","$mount","App","version","DATA","components$2","component","PREFIX","extend","createComponent","opt","install","_initialized","functional","Component","getComponent","$destroy","getComponents","parentEl","updateElement","components","generateId","Slider","autoplay","autoplayInterval","pauseOnHover","startAutoplay","stopAutoplay","previous","slideX","slideLabel","selNav","nav","navChildren","selNavItem","attrItem","navItems","$emit","items","ariaLabel","ariaControls","navLength","maxIndex","updateNav","getValidIndex","clsActive","tabindex","clsActivated","easing","Transitioner","transitionOptions","queueIndex","reset","forward","transitioner","Slideshow","Animations","percent2","linear","props2","Animations2","beforeitemshow","itemshown","itemhidden","Animations$1","LightboxPanel","delayControls","videoAutoplay","template","selCaption","close","closeLabel","label","caption","showControls","hideControls","getItem","loadItem","alt","poster","attrs","setItem","iframeAttrs","allowfullscreen","createEl","setError","video","controls","playsinline","class","fetch","encodeURI","credentials","json","getSlide","childElementCount","controlsTimer","tag","toItem","Media","media","toMedia","matchMedia","mediaObj","offMediaObj","getMaxPathLength","stroke","getTotalLength","transformFn","rotate","color","colorFn","backgroundColor","borderColor","filterFn","hue","fopacity","grayscale","invert","saturate","sepia","stops","getCssValue","parseStops","css2","getValue","getUnit","strokeDashoffset","bgx","backgroundFn","bgy","Parallax","fillObject","properties","load","getCss","willChange","transformFn2","toFixed","getStop","parseInt","bgProps","backgroundCoverFn","dimImage","getBackgroundImageDimensions","image","Image","naturalWidth","onload","toDimensions","dimEl","down","getBackgroundPos","setBackgroundPosFn","backgroundSize","backgroundRepeat","naturalHeight","nullIndex","leftPercent","targetPercent","unitRe","defaultUnit","keys2","parallax","getOffsetElement","viewport2","SliderReactive","SliderPreload","getAdjacentSlides","getLeft","center","getElLeft","getMax","getWidth","inView","listLeft","listWidth","listRight","slideLeft","slideRight","triggerUpdate","slider","sets","clsContainer","to","getItemIn","actives","getActives","itemIn","itemOut","isActive","isIn","isOut","translateIn","nextActives","temp","avgWidth","isFinite","trunc","listHalf","slideWidth","slidesInView","nextSlide","slide2","lft","enabled","reorder","updateActiveClasses","speedUp","itemshow","slideIndex","activeClasses","focusable","_tabindex","currentLeft","sliderParallax","selItem","getCurrentPercent","pull","supportsAspectRatio","linesIntersect","lineA","lineB","Position","inset","align","getPositionOffset","getShiftOffset","restoreScrollPosition","storeScrollPosition","elDim","getViewportOffset","tooltip","delay","title","parseProps","titleAttr","showTimer","getAlignment","match$1","pattern","stopPropagation","components$1","Countdown","date","clsWrapper","timespan","getTimeSpan","total","seconds","minutes","hours","days","digits","digit","Filter","selActive","toggles","updateState","prevState","getState","newState","stateA","stateB","setState","matchFilter","stateFilter","stateSort","stateOrder","applyState","getSelector","localeCompare","numeric","$update","Lightbox","UIkit","lightboxPanel","$create","Notification","message","status","clsClose","clsMsg","notification","closeAll","startProps","posClass","click","removeFn","SliderParallax","maxHeight","aspectRatio","maxWidth","SlideshowParallax","Sortable","clsItem","clsPlaceholder","clsDrag","clsDragState","clsBase","clsNoDrag","clsEmpty","clsCustom","handle","tBodies","handles","placeholder","sortable","getSortable","elementFromPoint","insertTarget","findInsertTarget","sameList","isHorizontal","single","isHorizontal2","rectA","rectB","placeholderRect","pointerPos","lengthProp","endProp","sameRow","moved","insert","touched","appendDrag","clone","cloneNode","getAttributeNames","dist","height2","sortable2","$getComponent","Tooltip","Upload","invalidMime","invalidName","invalidSize","allow","clsDragover","concurrent","maxSize","mime","multiple","url","abort","beforeAll","beforeSend","complete","completeAll","fail","loadEnd","loadStart","progress","change","files","upload","drop","transfer","dataTransfer","dragenter","dragover","dragleave","file","size","chunks","chunk","files2","FormData","xhr","ajax","env","headers","XMLHttpRequest","responseType","header","open","setRequestHeader","Error","statusText","send","xhr2","connect","applyChildListMutation","applyAttributeMutation","addedNodes","removedNodes","getComponentName","components2","use","plugin","installed","component2","Sub","Super","super","removeEl","defineProperties","getOwnPropertyDescriptor","Accordion","collapsible","clsOpen","contents","_wrapper","isOpen","_off","keepScrollPosition","frame","cancelAnimationFrame","activeItems","index2","hide2","transition2","currentHeight","endHeight","marginTop","marginBottom","paddingTop","paddingBottom","borderTop","borderBottom","Video","automute","root","getPositionedParent","useObjectFit","intrinsic","videoWidth","videoHeight","coverHeight","coverWidth","coverDim","boundaryX","boundaryY","targetX","targetY","stretch","delayShow","delayHide","autoUpdate","clsDrop","animateOut","bgScroll","closeOnScroll","targetEl","tracker","createToggleComponent","_style","clearTimers","relatedTarget","listenForResize","listenForScroll","isDelaying","isDelayedHide","getPositionedElements","hideTimer","viewports","positionOffset","Dropnav","dropbar","dropbarAnchor","clsDropbar","_dropbar","dropbarOffset","dropContainer","dropdowns","getDropdown","initializeDropdowns","active2","getActive","handleNavItemNavigation","isDropbarDrop","adjustHeight","targetOffsets","minTop","maxBottom","transitionTo","_observer","clipPath","finally","grid","masonry","parallaxStart","parallaxEnd","parallaxJustify","clsStack","columns","translates","scrollColumns","positionedAbsolute","gutter","getGutter","applyMasonry","columnHeights","fill","rowHeights","transpose","column","hgt","scrolled","heightMatch","elements2","heights","getHeight","heightViewport","expand","offsetBottom","Svg","svg","getSvg","insertSVG","equals","lastElementChild","svgEl","applyWidthAndHeight","viewBox","icons","spinner","totop","marker","Icon","icon","added","svg2","name2","parsed","isIcon","IconComponent","ButtonComponent","Slidenav","nativeLazyLoad","HTMLImageElement","dataSrc","sources","loading","isImg","setSrcAttrs","rootMargin","getImageFromElement","wrapInPicture","parseSources","picture","setSourceProps","currentSrc","backgroundImage","srcProps","sourceEl","leader","clsHide","attrFill","navbar","dropbarTransparentMode","selTransparentTarget","navbarContainer","justify","_colorListener","attributeOldValue","_isIntersecting","registerColorListener","transparentMode","getTransparentMode","_mode","storePrevColor","getDropbarBehindColor","awaitMacroTask","isWithinMixBlendMode","listenForPositionChange","startPoint","target2","offcanvas","swiping","clsFlip","clsContainerAnimation","clsSidebarAnimation","clsMode","clsOverlay","getViewport","resumeUserScale","head","overflowAuto","selContainer","selContent","responsive","instances","clickHandler","href","history","pushState","scrollspy","repeat","inViewClass","elementData","Map","inview","queued","removeAnimationClasses","scrollspyNav","links","fixedEl","sticky","overflowFlip","clsInactive","clsFixed","clsBelow","selTarget","showOnUp","coerce","isFixed","setActive","transitionInProgress","height$1","inactive","preventTransition","dynamicViewport","maxScrollHeight","referenceElement","offset$1","topOffset","parseProp","prevScroll","prevDir","overflowScroll","scroll2","offsetParentTop","isScrollUpdate","initTimestamp","initScroll","propOffset","refElement","strokeAnimation","applyAttributes","applyAnimation","parseSVG","loadSVG","parseSymbols","text","symbolRe","symbols","lastIndex","selDisabled","Switcher","itemNav","followFocus","selVertical","connects","connectChildren","isVertical","_preventClick","_showState","disabled","expanded","leaving","isLeaving","Alert","Close","Cover","Drop","DropParentIcon","Dropdown","FormCustom","selected","Grid","HeightMatch","HeightViewport","Img","Leader","Marker","openDialog","tmpl","hideFn","submitFn","dialog","alert","ok","confirm","prompt","select","Nav","NavParentIcon","Navbar","NavbarParentIcon","NavbarToggleIcon","Offcanvas","OverflowAuto","OverlayIcon","PaginationNext","PaginationPrevious","Responsive","Scroll","Scrollspy","ScrollspyNav","SearchIcon","submit","SlidenavNext","SlidenavPrevious","Spinner","Sticky","Tab","Toggle","Totop","$bedd7f4d55ec3272$exports","$b8f9b7833fa37166$var$date","getElementsByTagName","getFullYear"],"version":3,"file":"index.e07e076c.js.map"}